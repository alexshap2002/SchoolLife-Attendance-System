#!/bin/bash
# ===================================================================
# –°–ö–†–ò–ü–¢ DEPLOYMENT –û–ü–¢–ò–ú–Ü–ó–ê–¶–Ü–ô –ù–ê –ë–û–ô–û–í–ò–ô –°–ï–†–í–ï–†
# ===================================================================
# –î–∞—Ç–∞: 2025-10-08
# –í–ê–ñ–õ–ò–í–û: –í–∏–∫–æ–Ω—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ root@185.233.39.11
# ===================================================================

set -e  # –ó—É–ø–∏–Ω–∏—Ç–∏—Å—å –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ

echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë                                                                 ‚ïë"
echo "‚ïë     üöÄ DEPLOYMENT –û–ü–¢–ò–ú–Ü–ó–ê–¶–Ü–ô –ù–ê –ë–û–ô–û–í–ò–ô –°–ï–†–í–ï–†               ‚ïë"
echo "‚ïë                                                                 ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo ""

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —â–æ –º–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
if [ ! -d "/root/school-life-app" ]; then
    echo "‚ùå –ü–û–ú–ò–õ–ö–ê: –°–∫—Ä–∏–ø—Ç —Ç—Ä–µ–±–∞ –∑–∞–ø—É—Å–∫–∞—Ç–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ!"
    exit 1
fi

cd /root/school-life-app

# ===================================================================
# –ö–†–û–ö 1: BACKUP –ë–ê–ó–ò –î–ê–ù–ò–•
# ===================================================================
echo "üì¶ –ö–†–û–ö 1: –°—Ç–≤–æ—Ä—é—é BACKUP –±–∞–∑–∏ –¥–∞–Ω–∏—Ö..."
BACKUP_FILE="backup_before_optimization_$(date +%Y%m%d_%H%M%S).sql"

docker exec school-db pg_dump -U school_user -d school_db > "$BACKUP_FILE"

if [ -f "$BACKUP_FILE" ]; then
    BACKUP_SIZE=$(du -h "$BACKUP_FILE" | cut -f1)
    echo "‚úÖ Backup —Å—Ç–≤–æ—Ä–µ–Ω–æ: $BACKUP_FILE ($BACKUP_SIZE)"
else
    echo "‚ùå –ü–û–ú–ò–õ–ö–ê: –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ backup!"
    exit 1
fi

echo ""

# ===================================================================
# –ö–†–û–ö 2: –ü–ï–†–ï–í–Ü–†–ö–ê –°–¢–ê–ù–£ –°–ò–°–¢–ï–ú–ò
# ===================================================================
echo "üîç –ö–†–û–ö 2: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É —Å–∏—Å—Ç–µ–º–∏..."

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤
echo "üìã –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤:"
docker ps --filter "name=school" --format "table {{.Names}}\t{{.Status}}"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ë–î
echo ""
echo "üìã –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î:"
docker exec school-db psql -U school_user -d school_db -c "SELECT version();" | head -1

echo ""

# ===================================================================
# –ö–†–û–ö 3: –ü–ï–†–ï–í–Ü–†–ö–ê –°–¢–ê–†–ò–• PLANNED –ü–û–î–Ü–ô
# ===================================================================
echo "üßπ –ö–†–û–ö 3: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ä–∏—Ö PLANNED –ø–æ–¥—ñ–π..."

OLD_EVENTS=$(docker exec school-db psql -U school_user -d school_db -t -c "
SELECT COUNT(*) 
FROM lesson_events 
WHERE status = 'PLANNED' 
AND notify_at < NOW() 
AND sent_at IS NULL;
")

echo "üìä –ó–Ω–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ä–∏—Ö PLANNED –ø–æ–¥—ñ–π: $OLD_EVENTS"

if [ "$OLD_EVENTS" -gt 0 ]; then
    echo "‚ö†Ô∏è  –ë—É–¥—É—Ç—å –≤–∏–¥–∞–ª–µ–Ω—ñ/–æ–Ω–æ–≤–ª–µ–Ω—ñ —Å—Ç–∞—Ä—ñ –ø–æ–¥—ñ—ó"
fi

echo ""

# ===================================================================
# –ö–†–û–ö 4: –ó–ê–°–¢–û–°–£–í–ê–ù–ù–Ø SQL –û–ü–¢–ò–ú–Ü–ó–ê–¶–Ü–ô
# ===================================================================
echo "üóÑÔ∏è  –ö–†–û–ö 4: –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è SQL –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ–π..."

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Ñ–∞–π–ª —ñ—Å–Ω—É—î
if [ ! -f "database_optimizations.sql" ]; then
    echo "‚ùå –ü–û–ú–ò–õ–ö–ê: –§–∞–π–ª database_optimizations.sql –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!"
    echo "üí° –°–ø–æ—á–∞—Ç–∫—É —Å–∫–æ–ø—ñ—é–π —Ñ–∞–π–ª–∏ –∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–º–ø'—é—Ç–µ—Ä–∞:"
    echo "   scp database_optimizations.sql root@185.233.39.11:/root/school-life-app/"
    exit 1
fi

# –ö–æ–ø—ñ—é—î–º–æ SQL –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
docker cp database_optimizations.sql school-db:/tmp/db_opt.sql

# –í–∏–∫–æ–Ω—É—î–º–æ SQL
echo "üìù –ó–∞—Å—Ç–æ—Å–æ–≤—É—é —ñ–Ω–¥–µ–∫—Å–∏ —Ç–∞ constraints..."
docker exec school-db psql -U school_user -d school_db -f /tmp/db_opt.sql

echo "‚úÖ SQL –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ!"
echo ""

# ===================================================================
# –ö–†–û–ö 5: –í–ê–õ–Ü–î–ê–¶–Ü–Ø CONSTRAINTS
# ===================================================================
echo "‚úîÔ∏è  –ö–†–û–ö 5: –í–∞–ª—ñ–¥–∞—Ü—ñ—è constraints..."

echo "üìã –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ñ –¥–∞–Ω—ñ..."
docker exec school-db psql -U school_user -d school_db << 'EOF'
SELECT 
    'schedules.weekday' as check_type, 
    COUNT(*) as violations 
FROM schedules WHERE weekday NOT BETWEEN 1 AND 7
UNION ALL
SELECT 'bot_schedules.offset', COUNT(*) 
FROM bot_schedules WHERE offset_minutes NOT BETWEEN -120 AND 120
UNION ALL
SELECT 'schedules.start_time', COUNT(*) 
FROM schedules WHERE start_time NOT BETWEEN '06:00' AND '22:00'
UNION ALL
SELECT 'clubs.duration', COUNT(*) 
FROM clubs WHERE duration_min NOT BETWEEN 10 AND 180;
EOF

echo ""
echo "üìù –í–∞–ª—ñ–¥—É—é constraints..."
docker exec school-db psql -U school_user -d school_db << 'EOF'
ALTER TABLE schedules VALIDATE CONSTRAINT schedules_weekday_check;
ALTER TABLE bot_schedules VALIDATE CONSTRAINT bot_schedules_offset_check;
ALTER TABLE schedules VALIDATE CONSTRAINT schedules_start_time_check;
ALTER TABLE clubs VALIDATE CONSTRAINT clubs_duration_check;
SELECT 'Constraints validated!' as result;
EOF

echo ""

# ===================================================================
# –ö–†–û–ö 6: –û–ß–ò–©–ï–ù–ù–Ø –°–¢–ê–†–ò–• PLANNED –ü–û–î–Ü–ô
# ===================================================================
echo "üßπ –ö–†–û–ö 6: –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö PLANNED –ø–æ–¥—ñ–π..."

if [ "$OLD_EVENTS" -gt 0 ]; then
    echo "üìù –û–Ω–æ–≤–ª—é—é —Å—Ç–∞—Ç—É—Å —Å—Ç–∞—Ä–∏—Ö –ø–æ–¥—ñ–π –Ω–∞ COMPLETED..."
    
    docker exec school-db psql -U school_user -d school_db << 'EOF'
UPDATE lesson_events 
SET status = 'COMPLETED',
    completed_at = NOW()
WHERE status = 'PLANNED' 
AND notify_at < NOW() 
AND sent_at IS NULL;

SELECT '–û–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç–∞—Ä–∏—Ö –ø–æ–¥—ñ–π: ' || COUNT(*) 
FROM lesson_events 
WHERE status = 'COMPLETED' 
AND completed_at > NOW() - INTERVAL '5 minutes';
EOF
    
    echo "‚úÖ –°—Ç–∞—Ä—ñ –ø–æ–¥—ñ—ó –æ—á–∏—â–µ–Ω–æ!"
else
    echo "‚úÖ –ù–µ–º–∞—î —Å—Ç–∞—Ä–∏—Ö –ø–æ–¥—ñ–π –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è"
fi

echo ""

# ===================================================================
# –ö–†–û–ö 7: –ü–ï–†–ï–í–Ü–†–ö–ê –Ü–ù–î–ï–ö–°–Ü–í
# ===================================================================
echo "üìä –ö–†–û–ö 7: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö —ñ–Ω–¥–µ–∫—Å—ñ–≤..."

docker exec school-db psql -U school_user -d school_db << 'EOF'
SELECT 
    tablename,
    indexname
FROM pg_indexes
WHERE schemaname = 'public'
AND indexname LIKE 'idx_%'
ORDER BY tablename, indexname;
EOF

echo ""

# ===================================================================
# –ö–†–û–ö 8: –û–ù–û–í–õ–ï–ù–ù–Ø –ö–û–î–£
# ===================================================================
echo "üì¶ –ö–†–û–ö 8: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤ –∫–æ–¥—É..."

FILES_TO_CHECK=(
    "app/services/lesson_event_manager.py"
    "app/workers/dispatcher.py"
    "run_manual_cleanup.py"
)

MISSING_FILES=0
for file in "${FILES_TO_CHECK[@]}"; do
    if [ ! -f "$file" ]; then
        echo "‚ùå –í—ñ–¥—Å—É—Ç–Ω—ñ–π —Ñ–∞–π–ª: $file"
        MISSING_FILES=$((MISSING_FILES + 1))
    else
        echo "‚úÖ –§–∞–π–ª —î: $file"
    fi
done

if [ $MISSING_FILES -gt 0 ]; then
    echo ""
    echo "‚ö†Ô∏è  –î–µ—è–∫—ñ —Ñ–∞–π–ª–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ. –°–∫–æ–ø—ñ—é–π —ó—Ö –∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–º–ø'—é—Ç–µ—Ä–∞:"
    echo "   scp app/services/lesson_event_manager.py root@185.233.39.11:/root/school-life-app/app/services/"
    echo "   scp app/workers/dispatcher.py root@185.233.39.11:/root/school-life-app/app/workers/"
    echo "   scp run_manual_cleanup.py root@185.233.39.11:/root/school-life-app/"
    echo ""
    echo "‚ùì –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –±–µ–∑ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–¥—É? (y/N)"
    read -r response
    if [[ ! "$response" =~ ^[Yy]$ ]]; then
        echo "‚ùå Deployment –∑—É–ø–∏–Ω–µ–Ω–æ. –°–ø–æ—á–∞—Ç–∫—É —Å–∫–æ–ø—ñ—é–π —Ñ–∞–π–ª–∏."
        exit 1
    fi
fi

echo ""

# ===================================================================
# –ö–†–û–ö 9: –ü–ï–†–ï–ó–ê–ü–£–°–ö –ö–û–ù–¢–ï–ô–ù–ï–†–Ü–í
# ===================================================================
echo "üîÑ –ö–†–û–ö 9: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤..."

echo "üìù –ó—É–ø–∏–Ω—è—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏..."
docker compose -f docker-compose.server.yml down

echo "üìù –ü–µ—Ä–µ–±—É–¥–æ–≤—É—é webapp –æ–±—Ä–∞–∑..."
docker compose -f docker-compose.server.yml build --no-cache webapp

echo "üìù –ó–∞–ø—É—Å–∫–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏..."
docker compose -f docker-compose.server.yml up -d

echo "‚è≥ –ß–µ–∫–∞—é 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó..."
sleep 10

echo ""

# ===================================================================
# –ö–†–û–ö 10: –ü–ï–†–ï–í–Ü–†–ö–ê –ü–†–ê–¶–ï–ó–î–ê–¢–ù–û–°–¢–Ü
# ===================================================================
echo "‚úÖ –ö–†–û–ö 10: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–∞—Ü–µ–∑–¥–∞—Ç–Ω–æ—Å—Ç—ñ..."

echo "üìã –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤:"
docker compose -f docker-compose.server.yml ps

echo ""
echo "üìã –õ–æ–≥–∏ webapp (–æ—Å—Ç–∞–Ω–Ω—ñ 20 —Ä—è–¥–∫—ñ–≤):"
docker compose -f docker-compose.server.yml logs --tail=20 webapp

echo ""
echo "üìã –õ–æ–≥–∏ dispatcher (–æ—Å—Ç–∞–Ω–Ω—ñ 20 —Ä—è–¥–∫—ñ–≤):"
docker compose -f docker-compose.server.yml logs --tail=20 dispatcher

echo ""

# ===================================================================
# –ö–†–û–ö 11: –¢–ï–°–¢ –ü–†–û–î–£–ö–¢–ò–í–ù–û–°–¢–Ü
# ===================================================================
echo "‚ö° –ö–†–û–ö 11: –¢–µ—Å—Ç –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –∑–∞–ø–∏—Ç—É..."

docker exec school-db psql -U school_user -d school_db << 'EOF'
EXPLAIN ANALYZE
SELECT * FROM lesson_events 
WHERE status = 'PLANNED' 
AND notify_at <= NOW() 
AND sent_at IS NULL 
ORDER BY notify_at ASC 
LIMIT 30;
EOF

echo ""

# ===================================================================
# –ó–ê–í–ï–†–®–ï–ù–ù–Ø
# ===================================================================
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë                                                                 ‚ïë"
echo "‚ïë              ‚úÖ DEPLOYMENT –£–°–ü–Ü–®–ù–û –ó–ê–í–ï–†–®–ï–ù–û!                 ‚ïë"
echo "‚ïë                                                                 ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo ""
echo "üìä –ü–Ü–î–°–£–ú–û–ö:"
echo "   ‚úÖ Backup —Å—Ç–≤–æ—Ä–µ–Ω–æ: $BACKUP_FILE"
echo "   ‚úÖ –Ü–Ω–¥–µ–∫—Å–∏ –¥–æ–¥–∞–Ω–æ: 5 —à—Ç."
echo "   ‚úÖ Constraints –¥–æ–¥–∞–Ω–æ: 4 —à—Ç."
echo "   ‚úÖ –°—Ç–∞—Ä—ñ –ø–æ–¥—ñ—ó –æ—á–∏—â–µ–Ω–æ: $OLD_EVENTS —à—Ç."
echo "   ‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ"
echo ""
echo "üìù –ù–ê–°–¢–£–ü–ù–Ü –ö–†–û–ö–ò:"
echo "   1. –ü–µ—Ä–µ–≤—ñ—Ä –ª–æ–≥–∏: docker compose -f docker-compose.server.yml logs -f"
echo "   2. –ü–µ—Ä–µ–≤—ñ—Ä —Ä–æ–±–æ—Ç—É Telegram bot"
echo "   3. –ü–µ—Ä–µ–≤—ñ—Ä —à–≤–∏–¥–∫—ñ—Å—Ç—å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–æ–∫"
echo ""
echo "üîô ROLLBACK (—è–∫—â–æ —â–æ—Å—å –Ω–µ —Ç–∞–∫):"
echo "   docker exec school-db psql -U school_user -d school_db < $BACKUP_FILE"
echo ""

