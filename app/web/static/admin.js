// School of Life - Admin Interface JavaScript
// –ü—Ä–æ—Å—Ç–∏–π —Ç–∞ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π CRUD
// Version: 2025-09-09-15:00 - Fixed API endpoints

// API –∫–ª—ñ—î–Ω—Ç
const API_BASE = window.location.origin + '/api';
let isPopulatingSelects = false;

// –ì–ª–æ–±–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ –¥–ª—è –¥–∞–Ω–∏—Ö
let allClubsData = [];
let allTeachersData = [];

async function apiCall(path, method = 'GET', data = null) {
    const url = `${API_BASE}/${path}`;
    const options = {
        method,
        headers: {'Content-Type': 'application/json'}
    };
    
    if (data) {
        options.body = JSON.stringify(data);
    }
    
    console.log(`üîó API ${method} ${url}`);
    
    try {
        const response = await fetch(url, options);
        
        if (!response.ok) {
            const errorText = await response.text().catch(() => 'Unknown error');
            throw new Error(`${method} ${url} -> ${response.status}: ${errorText}`);
        }
        
        return response.status === 204 ? null : await response.json();
    } catch (error) {
        console.error('‚ùå API Error:', error);
        // –ü–æ–∫—Ä–∞—â—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        let userMessage = '–ü–æ–º–∏–ª–∫–∞ API';
        if (error.message.includes('students')) {
            userMessage = '–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —É—á–Ω—ñ–≤';
        } else if (error.message.includes('teachers')) {
            userMessage = '–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤—á–∏—Ç–µ–ª—ñ–≤';
        } else if (error.message.includes('clubs')) {
            userMessage = '–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≥—É—Ä—Ç–∫—ñ–≤';
        } else if (error.message.includes('enrollments')) {
            userMessage = '–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Å—ñ–≤ –Ω–∞ –≥—É—Ä—Ç–∫–∏';
        } else if (error.message.includes('attendance')) {
            userMessage = '–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω–æ—Å—Ç—ñ';
        }
        
        showAlert(`${userMessage}: ${error.message}`, 'danger');
        throw error;
    }
}

// –£—Ç–∏–ª—ñ—Ç–∏
function showAlert(message, type = 'info') {
    // –°—Ç–≤–æ—Ä—é—î–º–æ –∞–±–æ –∑–Ω–∞—Ö–æ–¥–∏–º–æ toast –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    let toastContainer = document.getElementById('toastContainer');
    if (!toastContainer) {
        toastContainer = document.createElement('div');
        toastContainer.id = 'toastContainer';
        toastContainer.className = 'toast-container position-fixed top-0 end-0 p-3';
        toastContainer.style.zIndex = '9999';
        document.body.appendChild(toastContainer);
    }
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ toast
    const toastId = 'toast-' + Date.now();
    const toastDiv = document.createElement('div');
    toastDiv.id = toastId;
    toastDiv.className = `toast align-items-center text-bg-${type} border-0`;
    toastDiv.role = 'alert';
    toastDiv.innerHTML = `
        <div class="d-flex">
            <div class="toast-body">
        ${message}
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
        </div>
    `;
    
    toastContainer.appendChild(toastDiv);
    
    // –ü–æ–∫–∞–∑—É—î–º–æ toast
    const toast = new bootstrap.Toast(toastDiv, {
        autohide: true,
        delay: 5000
    });
    toast.show();
    
    // –í–∏–¥–∞–ª—è—î–º–æ –ø—ñ—Å–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è
    toastDiv.addEventListener('hidden.bs.toast', () => {
        toastDiv.remove();
    });
}

function showLoading(show = true) {
    let spinner = document.getElementById('loadingSpinner');
    if (!spinner && show) {
        spinner = document.createElement('div');
        spinner.id = 'loadingSpinner';
        spinner.innerHTML = '<div class="spinner-border text-primary" role="status"><span class="visually-hidden">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</span></div>';
        spinner.style.cssText = 'position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);z-index:9999;';
        document.body.appendChild(spinner);
    }
    if (spinner) {
        spinner.style.display = show ? 'block' : 'none';
    }
}

// === –°–¢–£–î–ï–ù–¢–ò ===
async function viewStudent(id) {
    try {
        showLoading(true);
        const student = await apiCall(`students/${id}`);
        showLoading(false);
        
        let modal = document.getElementById('viewStudentModal');
        if (!modal) {
            modal = createViewStudentModal();
        }
        
        document.getElementById('studentDetails').innerHTML = `
            <div class="row">
                <div class="col-md-6">
                    <h5 class="text-primary">${student.first_name} ${student.last_name}</h5>
                    <hr>
                    <p><strong>–í—ñ–∫:</strong> ${student.age || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</p>
                    <p><strong>–ö–ª–∞—Å:</strong> ${student.grade || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</p>
                    <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${student.phone_child || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</p>
                </div>
                <div class="col-md-6">
                    <h6>–ë–∞—Ç—å–∫–∏ —Ç–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∏</h6>
                    <hr>
                    <p><strong>–ü–Ü–ë –±–∞—Ç—å–∫—ñ–≤:</strong> ${student.parent_name || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</p>
                    <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω –º–∞—Ç–µ—Ä—ñ:</strong> ${student.phone_mother || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</p>
                    <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω –±–∞—Ç—å–∫–∞:</strong> ${student.phone_father || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</p>
                    <p><strong>–ê–¥—Ä–µ—Å–∞:</strong> ${student.address || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</p>
                </div>
            </div>
        `;
        
        new bootstrap.Modal(modal).show();
    } catch (error) {
        showLoading(false);
    }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É –Ω–∞ –ø–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É —É—á–Ω—è
function viewStudentFullInfo(studentId) {
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ –Ω–æ–≤—É —Å—Ç–æ—Ä—ñ–Ω–∫—É –∑ –ø–æ–≤–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é
    window.open(`/admin/students/${studentId}/full`, '_blank');
}

// –î–æ–≤—ñ–¥–∫–∞ –ø—Ä–æ –ø–æ–≤–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
function showFullInfoHelp() {
    const content = `
        <div class="alert alert-info">
            <h5><i class="bi bi-info-circle"></i> –Ø–∫ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ø–æ–≤–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —É—á–Ω—è?</h5>
            <p>–î–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –ø–æ–≤–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —É—á–Ω—è, –≤–∫–ª—é—á–∞—é—á–∏ –≤—Å—ñ –¥–µ—Ç–∞–ª—ñ –ø—Ä–æ –±–∞—Ç—å–∫—ñ–≤, –ø—ñ–ª—å–≥–∏, —Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω–æ—Å—Ç—ñ:</p>
            <ol>
                <li>–ó–Ω–∞–π–¥—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω–æ–≥–æ —É—á–Ω—è –≤ —Ç–∞–±–ª–∏—Ü—ñ</li>
                <li>–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É <span class="badge bg-info"><i class="bi bi-person-lines-fill"></i></span> –≤ –∫–æ–ª–æ–Ω—Ü—ñ "–î—ñ—ó"</li>
                <li>–í—ñ–¥–∫—Ä–∏—î—Ç—å—Å—è –Ω–æ–≤–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –∑ –ø–æ–≤–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ —É—á–Ω—è</li>
            </ol>
            <p class="mb-0"><strong>–ü—Ä–∏–º—ñ—Ç–∫–∞:</strong> –°—Ç–æ—Ä—ñ–Ω–∫–∞ –≤—ñ–¥–∫—Ä–∏—î—Ç—å—Å—è –≤ –Ω–æ–≤—ñ–π –≤–∫–ª–∞–¥—Ü—ñ –±—Ä–∞—É–∑–µ—Ä–∞.</p>
        </div>
    `;
    
    showModal('–ü–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —É—á–Ω—ñ–≤', content, '', '–ó—Ä–æ–∑—É–º—ñ–ª–æ');
}

async function editStudent(id) {
    try {
        showLoading(true);
        const student = await apiCall(`students/${id}`);
        showLoading(false);
        
        // –û—Å–Ω–æ–≤–Ω—ñ –ø–æ–ª—è
        document.getElementById('editStudentId').value = id;
        document.getElementById('editFirstName').value = student.first_name || '';
        document.getElementById('editLastName').value = student.last_name || '';
        document.getElementById('editBirthDate').value = student.birth_date || '';
        document.getElementById('editAge').value = student.age || '';
        document.getElementById('editGrade').value = student.grade || '';
        document.getElementById('editPhoneChild').value = student.phone_child || '';
        document.getElementById('editLocation').value = student.location || '';
        document.getElementById('editAddress').value = student.address || '';
        
        // –ë–∞—Ç—å–∫–∏
        document.getElementById('editParentName').value = student.parent_name || '';
        document.getElementById('editFatherName').value = student.father_name || '';
        document.getElementById('editMotherName').value = student.mother_name || '';
        document.getElementById('editPhoneMother').value = student.phone_mother || '';
        document.getElementById('editPhoneFather').value = student.phone_father || '';
        
        // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ–ª—è
        document.getElementById('editSettlementType').value = student.settlement_type || '';
        document.getElementById('editBenefitOther').value = student.benefit_other || '';
        
        // –ü—ñ–ª—å–≥–∏ (checkboxes)
        document.getElementById('editBenefitLowIncome').checked = student.benefit_low_income || false;
        document.getElementById('editBenefitLargeFamily').checked = student.benefit_large_family || false;
        document.getElementById('editBenefitMilitaryFamily').checked = student.benefit_military_family || false;
        document.getElementById('editBenefitInternallyDisplaced').checked = student.benefit_internally_displaced || false;
        document.getElementById('editBenefitOrphan').checked = student.benefit_orphan || false;
        document.getElementById('editBenefitDisability').checked = student.benefit_disability || false;
        document.getElementById('editBenefitSocialRisk').checked = student.benefit_social_risk || false;
        
        new bootstrap.Modal(document.getElementById('editStudentModal')).show();
    } catch (error) {
        showLoading(false);
    }
}

async function deleteStudent(id) {
    if (!confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü—å–æ–≥–æ —É—á–Ω—è?')) {
        return;
    }
    
    try {
        showLoading(true);
        await apiCall(`students/${id}`, 'DELETE');
        showLoading(false);
        showAlert('–£—á–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ', 'success');
        setTimeout(() => location.reload(), 1500);
    } catch (error) {
        showLoading(false);
    }
}

async function saveStudent() {
    const form = document.getElementById('addStudentForm');
    if (!form.checkValidity()) {
        form.reportValidity();
        return;
    }
    
    const formData = new FormData(form);
    
    // –ó–±–∏—Ä–∞—î–º–æ –¥–∞—Ç—É –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è
    let birth_date = null;
    const birthDateValue = formData.get('birthDate');
    if (birthDateValue) {
        birth_date = birthDateValue;
    }
    
    const studentData = {
        first_name: formData.get('firstName')?.trim(),
        last_name: formData.get('lastName')?.trim(),
        birth_date: birth_date,
        age: formData.get('age') ? parseInt(formData.get('age')) : null,
        grade: formData.get('grade')?.trim() || null,
        phone_child: formData.get('phoneChild')?.trim() || null,
        location: formData.get('location')?.trim() || null,
        address: formData.get('address')?.trim() || null,
        parent_name: formData.get('parentName')?.trim() || null,
        father_name: formData.get('fatherName')?.trim() || null,
        mother_name: formData.get('motherName')?.trim() || null,
        phone_mother: formData.get('phoneMother')?.trim() || null,
        phone_father: formData.get('phoneFather')?.trim() || null,
        settlement_type: formData.get('settlementType')?.trim() || null,
        benefit_other: formData.get('benefitOther')?.trim() || null,
        
        // –ü—ñ–ª—å–≥–∏ (checkbox fields)
        benefit_low_income: formData.get('benefitLowIncome') ? true : false,
        benefit_large_family: formData.get('benefitLargeFamily') ? true : false,
        benefit_military_family: formData.get('benefitMilitaryFamily') ? true : false,
        benefit_internally_displaced: formData.get('benefitInternallyDisplaced') ? true : false,
        benefit_orphan: formData.get('benefitOrphan') ? true : false,
        benefit_disability: formData.get('benefitDisability') ? true : false,
        benefit_social_risk: formData.get('benefitSocialRisk') ? true : false,
    };
    
    if (!studentData.first_name || !studentData.last_name) {
        showAlert('–Ü–º\'—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ!', 'warning');
        return;
    }
    
    // DEBUG: –õ–æ–≥—É—î–º–æ –¥–∞–Ω—ñ —â–æ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ
    console.log('üì§ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–∏—Ö —É—á–Ω—è:', studentData);
    console.log('üìÖ –î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è:', studentData.birth_date, typeof studentData.birth_date);
    
    try {
        showLoading(true);
        await apiCall('students', 'POST', studentData);
        showLoading(false);
        
        bootstrap.Modal.getInstance(document.getElementById('addStudentModal')).hide();
        showAlert('–£—á–Ω—è —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ', 'success');
        setTimeout(() => location.reload(), 1500);
    } catch (error) {
        showLoading(false);
    }
}

async function updateStudent() {
    const form = document.getElementById('editStudentForm');
    if (!form.checkValidity()) {
        form.reportValidity();
        return;
    }
    
    const id = document.getElementById('editStudentId').value;
    const firstName = document.getElementById('editFirstName').value?.trim();
    const lastName = document.getElementById('editLastName').value?.trim();
    
    if (!firstName || !lastName) {
        showAlert('–Ü–º\'—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ!', 'warning');
        return;
    }
    
    // –ó–±–∏—Ä–∞—î–º–æ –¥–∞—Ç—É –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è
    let birth_date = null;
    const birthDateValue = document.getElementById('editBirthDate').value;
    if (birthDateValue) {
        birth_date = birthDateValue;
    }
    
    const studentData = {
        first_name: firstName,
        last_name: lastName,
        birth_date: birth_date,
        age: document.getElementById('editAge').value ? parseInt(document.getElementById('editAge').value) : null,
        grade: document.getElementById('editGrade').value?.trim() || null,
        phone_child: document.getElementById('editPhoneChild').value?.trim() || null,
        location: document.getElementById('editLocation').value?.trim() || null,
        address: document.getElementById('editAddress').value?.trim() || null,
        parent_name: document.getElementById('editParentName').value?.trim() || null,
        father_name: document.getElementById('editFatherName').value?.trim() || null,
        mother_name: document.getElementById('editMotherName').value?.trim() || null,
        phone_mother: document.getElementById('editPhoneMother').value?.trim() || null,
        phone_father: document.getElementById('editPhoneFather').value?.trim() || null,
        settlement_type: document.getElementById('editSettlementType').value?.trim() || null,
        benefit_other: document.getElementById('editBenefitOther').value?.trim() || null,
        
        // –ü—ñ–ª—å–≥–∏ (checkbox fields)
        benefit_low_income: document.getElementById('editBenefitLowIncome').checked,
        benefit_large_family: document.getElementById('editBenefitLargeFamily').checked,
        benefit_military_family: document.getElementById('editBenefitMilitaryFamily').checked,
        benefit_internally_displaced: document.getElementById('editBenefitInternallyDisplaced').checked,
        benefit_orphan: document.getElementById('editBenefitOrphan').checked,
        benefit_disability: document.getElementById('editBenefitDisability').checked,
        benefit_social_risk: document.getElementById('editBenefitSocialRisk').checked,
    };
    
    try {
        showLoading(true);
        const result = await apiCall(`students/${id}`, 'PUT', studentData);
        showLoading(false);
        
        bootstrap.Modal.getInstance(document.getElementById('editStudentModal')).hide();
        showAlert(`–£—á–Ω—è "${result.first_name} ${result.last_name}" —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ`, 'success');
        setTimeout(() => location.reload(), 1500);
    } catch (error) {
        showLoading(false);
    }
}

// === –í–ß–ò–¢–ï–õ–Ü ===
async function viewTeacher(id) {
    try {
        showLoading(true);
        const teacher = await apiCall(`teachers/${id}`);
        showLoading(false);
        
        let modal = document.getElementById('viewTeacherModal');
        if (!modal) {
            modal = createViewTeacherModal();
        }
        
        document.getElementById('teacherDetails').innerHTML = `
            <div class="row">
                <div class="col-md-6">
                    <h5 class="text-primary">${teacher.full_name}</h5>
                    <hr>
                    <p><strong>–°—Ç–∞—Ç—É—Å:</strong> ${teacher.active ? '<span class="badge bg-success">–ê–∫—Ç–∏–≤–Ω–∏–π</span>' : '<span class="badge bg-secondary">–ù–µ–∞–∫—Ç–∏–≤–Ω–∏–π</span>'}</p>
                    <p><strong>–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è:</strong> ${new Date(teacher.created_at).toLocaleDateString('uk-UA')}</p>
                </div>
                <div class="col-md-6">
                    <h6>Telegram</h6>
                    <hr>
                    <p><strong>Username:</strong> ${teacher.tg_username ? '@' + teacher.tg_username : '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</p>
                    <p><strong>Chat ID:</strong> ${teacher.tg_chat_id || '–ù–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π'}</p>
                    <p><strong>–°—Ç–∞—Ç—É—Å –±–æ—Ç—É:</strong> ${teacher.tg_chat_id ? '<span class="badge bg-success">–ü—ñ–¥–∫–ª—é—á–µ–Ω–∏–π</span>' : '<span class="badge bg-warning">–ù–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π</span>'}</p>
                </div>
            </div>
        `;
        
        new bootstrap.Modal(modal).show();
    } catch (error) {
        showLoading(false);
    }
}

async function editTeacher(id) {
    try {
        showLoading(true);
        const teacher = await apiCall(`teachers/${id}`);
        showLoading(false);
        
        document.getElementById('editTeacherId').value = id;
        document.getElementById('editFullName').value = teacher.full_name;
        document.getElementById('editTgUsername').value = teacher.tg_username || '';
        document.getElementById('editTgChatId').value = teacher.tg_chat_id || '';
        document.getElementById('editActive').checked = teacher.active;
        
        new bootstrap.Modal(document.getElementById('editTeacherModal')).show();
    } catch (error) {
        showLoading(false);
    }
}

async function saveTeacher() {
    const form = document.getElementById('addTeacherForm');
    if (!form.checkValidity()) {
        form.reportValidity();
        return;
    }
    
    const formData = new FormData(form);
    const teacherData = {
        full_name: formData.get('fullName')?.trim(),
        tg_username: formData.get('tgUsername')?.trim() || null,
        tg_chat_id: formData.get('tgChatId') ? parseInt(formData.get('tgChatId')) : null,
        active: formData.get('active') === 'on',
    };
    
    if (!teacherData.full_name) {
        showAlert('–ü–æ–≤–Ω–µ —ñ–º\'—è –æ–±–æ–≤\'—è–∑–∫–æ–≤–µ!', 'warning');
        return;
    }
    
    try {
        showLoading(true);
        await apiCall('teachers', 'POST', teacherData);
        showLoading(false);
        
        bootstrap.Modal.getInstance(document.getElementById('addTeacherModal')).hide();
        showAlert('–í—á–∏—Ç–µ–ª—è —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ', 'success');
        setTimeout(() => location.reload(), 1500);
    } catch (error) {
        showLoading(false);
    }
}

async function updateTeacher() {
    const id = document.getElementById('editTeacherId').value;
    const fullName = document.getElementById('editFullName').value?.trim();
    
    if (!fullName) {
        showAlert('–ü–æ–≤–Ω–µ —ñ–º\'—è –æ–±–æ–≤\'—è–∑–∫–æ–≤–µ!', 'warning');
        return;
    }
    
    const teacherData = {
        full_name: fullName,
        tg_username: document.getElementById('editTgUsername').value?.trim() || null,
        tg_chat_id: document.getElementById('editTgChatId').value ? parseInt(document.getElementById('editTgChatId').value) : null,
        active: document.getElementById('editActive').checked,
    };
    
    try {
        showLoading(true);
        const result = await apiCall(`teachers/${id}`, 'PUT', teacherData);
        showLoading(false);
        
        bootstrap.Modal.getInstance(document.getElementById('editTeacherModal')).hide();
        showAlert(`–í—á–∏—Ç–µ–ª—è "${result.full_name}" —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ`, 'success');
        setTimeout(() => location.reload(), 1500);
    } catch (error) {
        showLoading(false);
    }
}

async function deleteTeacher(id) {
    try {
        showLoading(true);
        
        // –°–ø–æ—á–∞—Ç–∫—É –æ—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
        const dependencies = await apiCall(`teachers/${id}/dependencies`, 'GET');
        showLoading(false);
        
        // –ü–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –¥–µ—Ç–∞–ª—è–º–∏
        showDeleteTeacherModal(dependencies);
        
    } catch (error) {
        showLoading(false);
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π:', error);
        showAlert(`–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π: ${error.message}`, 'danger');
    }
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—á–∏—Ç–µ–ª—è
function showDeleteTeacherModal(dependencies) {
    const modalId = 'deleteTeacherModal';
    
    // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ —è–∫—â–æ —ñ—Å–Ω—É—î
    const existingModal = document.getElementById(modalId);
    if (existingModal) {
        existingModal.remove();
    }
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
    const modalHtml = `
        <div class="modal fade" id="${modalId}" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header ${dependencies.can_delete_safely ? 'bg-info' : 'bg-warning'}">
                        <h5 class="modal-title text-white">
                            <i class="bi bi-exclamation-triangle"></i>
                            ${dependencies.can_delete_safely ? '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è' : '–ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è'}
                        </h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-8">
                                <h6 class="mb-3">–í—á–∏—Ç–µ–ª—å: <strong class="text-primary">${dependencies.teacher_name}</strong></h6>
                                
                                ${dependencies.can_delete_safely ? 
                                    `<div class="alert alert-success">
                                        <i class="bi bi-check-circle"></i>
                                        <strong>–ë–µ–∑–ø–µ—á–Ω–µ –≤–∏–¥–∞–ª–µ–Ω–Ω—è</strong><br>
                                        –£ —Ü—å–æ–≥–æ –≤—á–∏—Ç–µ–ª—è –Ω–µ–º–∞—î —ñ—Å—Ç–æ—Ä–∏—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö (–∑–∞—Ä–ø–ª–∞—Ç–∏, –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—Ö —É—Ä–æ–∫—ñ–≤).
                                    </div>` :
                                    `<div class="alert alert-warning">
                                        <i class="bi bi-exclamation-triangle"></i>
                                        <strong>–†–æ–∑—É–º–Ω–µ –≤–∏–¥–∞–ª–µ–Ω–Ω—è</strong><br>
                                        –í—á–∏—Ç–µ–ª—å –±—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–∏–π, –∞–ª–µ —ñ—Å—Ç–æ—Ä–∏—á–Ω—ñ –¥–∞–Ω—ñ –∑–±–µ—Ä–µ–∂—É—Ç—å—Å—è –¥–ª—è –∑–≤—ñ—Ç–Ω–æ—Å—Ç—ñ.
                                    </div>`
                                }
                                
                                ${!dependencies.can_delete_safely ? generateTeacherDependenciesDetails(dependencies) : ''}
                            </div>
                            <div class="col-md-4">
                                <div class="card">
                                    <div class="card-header">
                                        <h6 class="mb-0"><i class="bi bi-info-circle"></i> –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row text-center g-2">
                                            <div class="col-6">
                                                <div class="border rounded p-2">
                                                    <h5 class="text-primary mb-0">${dependencies.dependencies.schedules}</h5>
                                                    <small>–†–æ–∑–∫–ª–∞–¥—ñ–≤</small>
                                                </div>
                                            </div>
                                            <div class="col-6">
                                                <div class="border rounded p-2">
                                                    <h5 class="text-info mb-0">${dependencies.dependencies.conducted_lessons}</h5>
                                                    <small>–ü—Ä–æ–≤–µ–¥–µ–Ω–∏—Ö —É—Ä–æ–∫—ñ–≤</small>
                                                </div>
                                            </div>
                                            <div class="col-6">
                                                <div class="border rounded p-2">
                                                    <h5 class="text-success mb-0">${dependencies.dependencies.attendance_records}</h5>
                                                    <small>–í—ñ–¥–≤—ñ–¥—É–≤–∞–Ω—å</small>
                                                </div>
                                            </div>
                                            <div class="col-6">
                                                <div class="border rounded p-2">
                                                    <h5 class="text-warning mb-0">${dependencies.dependencies.payroll_records}</h5>
                                                    <small>–ó–∞—Ä–ø–ª–∞—Ç</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        ${dependencies.has_historical_data ? 
                            `<div class="mt-3 p-3 bg-light rounded">
                                <h6><i class="bi bi-shield-check"></i> –©–æ –±—É–¥–µ –∑–±–µ—Ä–µ–∂–µ–Ω–æ:</h6>
                                <ul class="mb-0">
                                    ${dependencies.dependencies.conducted_lessons > 0 ? `<li>üìö –ü—Ä–æ–≤–µ–¥–µ–Ω—ñ —É—Ä–æ–∫–∏ (${dependencies.dependencies.conducted_lessons}) - –¥–ª—è –∑–≤—ñ—Ç–Ω–æ—Å—Ç—ñ</li>` : ''}
                                    ${dependencies.dependencies.attendance_records > 0 ? `<li>‚úÖ –ó–∞–ø–∏—Å–∏ –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω–æ—Å—Ç—ñ (${dependencies.dependencies.attendance_records}) - –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó</li>` : ''}
                                    ${dependencies.dependencies.payroll_records > 0 ? `<li>üí∞ –ù–∞—Ä–∞—Ö–æ–≤–∞–Ω–∞ –∑–∞—Ä–ø–ª–∞—Ç–∞ (${dependencies.dependencies.payroll_records}) - –¥–ª—è –±—É—Ö–≥–∞–ª—Ç–µ—Ä—ñ—ó</li>` : ''}
                                </ul>
                                <div class="mt-2 alert alert-info">
                                    <i class="bi bi-info-circle"></i>
                                    <strong>–ú–µ—Ö–∞–Ω—ñ–∑–º –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è:</strong> 
                                    –Ü—Å—Ç–æ—Ä–∏—á–Ω—ñ –¥–∞–Ω—ñ –±—É–¥—É—Ç—å –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –ø—ñ–¥ —ñ–º'—è–º <strong>"[–í–ò–î–ê–õ–ï–ù–û] ${dependencies.teacher_name}"</strong>
                                </div>
                            </div>` : ''
                        }
                        
                        ${!dependencies.can_delete_safely ? 
                            `<div class="mt-3 p-3 bg-danger bg-opacity-10 rounded">
                                <h6><i class="bi bi-trash"></i> –©–æ –±—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–æ:</h6>
                                <ul class="mb-0">
                                    ${dependencies.dependencies.schedules > 0 ? `<li>üìÖ –ü–æ—Ç–æ—á–Ω—ñ —Ä–æ–∑–∫–ª–∞–¥–∏ (${dependencies.dependencies.schedules}) - —Å—Ç–∞–Ω—É—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω–∏–º–∏</li>` : ''}
                                    ${dependencies.dependencies.pay_rates > 0 ? `<li>üí∏ –°—Ç–∞–≤–∫–∏ –æ–ø–ª–∞—Ç–∏ (${dependencies.dependencies.pay_rates}) - –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</li>` : ''}
                                    <li>ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –≤ Telegram</li>
                                    <li>üìù –ú–∞–π–±—É—Ç–Ω—ñ —É—Ä–æ–∫–∏ –±–µ–∑ –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω–æ—Å—Ç—ñ</li>
                                </ul>
                            </div>` : ''
                        }
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                            <i class="bi bi-x-circle"></i> –°–∫–∞—Å—É–≤–∞—Ç–∏
                        </button>
                        <button type="button" class="btn ${dependencies.can_delete_safely ? 'btn-primary' : 'btn-danger'}" 
                                onclick="confirmDeleteTeacher('${dependencies.teacher_id}', ${dependencies.can_delete_safely})">
                            <i class="bi bi-trash"></i> 
                            ${dependencies.can_delete_safely ? '–í–∏–¥–∞–ª–∏—Ç–∏' : '–í–∏–¥–∞–ª–∏—Ç–∏ –∑—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º —ñ—Å—Ç–æ—Ä—ñ—ó'}
                        </button>
                    </div>
                </div>
            </div>
        </div>
`;
    
    // –î–æ–¥–∞—î–º–æ –¥–æ body
    document.body.insertAdjacentHTML('beforeend', modalHtml);
    
    // –ü–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
    const modal = new bootstrap.Modal(document.getElementById(modalId));
    modal.show();
}

// –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è –≤—á–∏—Ç–µ–ª—è
function generateTeacherDependenciesDetails(dependencies) {
    return `
        <div class="mt-3">
            <h6><i class="bi bi-list-check"></i> –î–µ—Ç–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π:</h6>
            <div class="row g-2">
                ${dependencies.dependencies.schedules > 0 ? 
                    `<div class="col-12">
                        <div class="alert alert-primary py-2">
                            <i class="bi bi-calendar"></i>
                            <strong>${dependencies.dependencies.schedules} —Ä–æ–∑–∫–ª–∞–¥—ñ–≤</strong> - —Å—Ç–∞–Ω—É—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω–∏–º–∏
                            <br><small class="text-muted">–ó–∞–ª–∏—à–∞—Ç—å—Å—è –¥–ª—è –∑–≤'—è–∑–∫—É –∑ —ñ—Å—Ç–æ—Ä–∏—á–Ω–∏–º–∏ —É—Ä–æ–∫–∞–º–∏</small>
                        </div>
                    </div>` : ''
                }
                ${dependencies.dependencies.lesson_events > 0 ? 
                    `<div class="col-12">
                        <div class="alert alert-info py-2">
                            <i class="bi bi-journal"></i>
                            <strong>${dependencies.dependencies.lesson_events} —É—Ä–æ–∫—ñ–≤</strong> 
                            (${dependencies.dependencies.lesson_events_with_attendance} –∑ –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω—ñ—Å—Ç—é)
                            <br><small class="text-muted">–ú–∞–π–±—É—Ç–Ω—ñ —É—Ä–æ–∫–∏ –≤–∏–¥–∞–ª—è—Ç—å—Å—è, –ø—Ä–æ–≤–µ–¥–µ–Ω—ñ - –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è</small>
                        </div>
                    </div>` : ''
                }
                ${dependencies.dependencies.pay_rates > 0 ? 
                    `<div class="col-12">
                        <div class="alert alert-warning py-2">
                            <i class="bi bi-currency-dollar"></i>
                            <strong>${dependencies.dependencies.pay_rates} —Å—Ç–∞–≤–æ–∫ –æ–ø–ª–∞—Ç–∏</strong> - –±—É–¥—É—Ç—å –≤–∏–¥–∞–ª–µ–Ω—ñ
                            <br><small class="text-muted">–¶–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è, –Ω–µ —ñ—Å—Ç–æ—Ä–∏—á–Ω—ñ –¥–∞–Ω—ñ</small>
                        </div>
                    </div>` : ''
                }
            </div>
        </div>
    `;
}

// –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—á–∏—Ç–µ–ª—è
async function confirmDeleteTeacher(teacherId, canDeleteSafely) {
    try {
        // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        const modal = bootstrap.Modal.getInstance(document.getElementById('deleteTeacherModal'));
        modal.hide();
        
        // –í–∏–∫–æ–Ω—É—î–º–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
        showLoading(true);
        const deleteParams = canDeleteSafely ? '' : '?force=true';
        const result = await apiCall(`teachers/${teacherId}${deleteParams}`, 'DELETE');
        showLoading(false);
        
        // –ü–æ–∫–∞–∑—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        const teacherName = document.querySelector('#deleteTeacherModal .text-primary').textContent;
        const actionText = result.action === 'smart_deleted' ? '—Ä–æ–∑—É–º–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º —ñ—Å—Ç–æ—Ä—ñ—ó' :
                          result.action === 'deactivated' ? '–¥–µ–∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ' : '–≤–∏–¥–∞–ª–µ–Ω–æ';
        
        showAlert(`–í—á–∏—Ç–µ–ª—å "${teacherName}" ${actionText}`, 'success');
        setTimeout(() => location.reload(), 1500);
        
    } catch (error) {
        showLoading(false);
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—á–∏—Ç–µ–ª—è:', error);
        showAlert(`–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤—á–∏—Ç–µ–ª—è: ${error.message}`, 'danger');
    }
}

// === –ì–£–†–¢–ö–ò ===
async function viewClub(id) {
    try {
        showLoading(true);
        
        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ –≥—É—Ä—Ç–∫–∞ —Ç–∞ –¥–æ–¥–∞—Ç–∫–æ–≤—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ
        const [club, schedules, students] = await Promise.all([
            apiCall(`clubs/${id}`),
            apiCall(`schedules?club_id=${id}`).catch(() => []),
            apiCall(`students?club_id=${id}`).catch(() => [])
        ]);
        
        showLoading(false);
        
        let modal = document.getElementById('viewClubModal');
        if (!modal) {
            modal = createViewClubModal();
        }
        
        // –†–∞—Ö—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        const activeSchedules = schedules.filter(s => s.active).length;
        const totalStudents = students.length;
        
        document.getElementById('clubDetails').innerHTML = `
            <div class="row">
                <div class="col-md-6">
                    <h5 class="text-primary">
                        <i class="bi bi-collection"></i> ${club.name}
                    </h5>
                    <hr>
                    <p><strong>–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å:</strong> 
                        <span class="badge bg-info">${club.duration_min} —Ö–≤</span>
                    </p>
                    <p><strong>–õ–æ–∫–∞—Ü—ñ—è:</strong> 
                        <i class="bi bi-geo-alt"></i> ${club.location}
                    </p>
                    <p><strong>–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è:</strong> 
                        ${new Date(club.created_at).toLocaleDateString('uk-UA')}
                    </p>
                </div>
                <div class="col-md-6">
                    <h6><i class="bi bi-graph-up"></i> –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h6>
                    <hr>
                    <div class="row text-center">
                        <div class="col-6">
                            <div class="card bg-light">
                                <div class="card-body p-2">
                                    <h4 class="text-primary">${activeSchedules}</h4>
                                    <small class="text-muted">–ê–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–∑–∫–ª–∞–¥—ñ–≤</small>
                </div>
            </div>
                        </div>
                        <div class="col-6">
                            <div class="card bg-light">
                                <div class="card-body p-2">
                                    <h4 class="text-success">${totalStudents}</h4>
                                    <small class="text-muted">–ó–∞–ø–∏—Å–∞–Ω–∏—Ö —É—á–Ω—ñ–≤</small>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="mt-3">
                        <p><strong>ID –≥—É—Ä—Ç–∫–∞:</strong> <code>#${club.id}</code></p>
                    </div>
                </div>
            </div>
            
            ${schedules.length > 0 ? `
            <hr>
            <h6><i class="bi bi-calendar-week"></i> –†–æ–∑–∫–ª–∞–¥–∏</h6>
            <div class="table-responsive">
                <table class="table table-sm">
                    <thead>
                        <tr>
                            <th>–î–µ–Ω—å —Ç–∏–∂–Ω—è</th>
                            <th>–ß–∞—Å</th>
                            <th>–í—á–∏—Ç–µ–ª—å</th>
                            <th>–°—Ç–∞—Ç—É—Å</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${schedules.map(schedule => {
                            const weekdays = {
                                0: "–ü–æ–Ω–µ–¥—ñ–ª–æ–∫", 1: "–í—ñ–≤—Ç–æ—Ä–æ–∫", 2: "–°–µ—Ä–µ–¥–∞", 3: "–ß–µ—Ç–≤–µ—Ä",
                                4: "–ü'—è—Ç–Ω–∏—Ü—è", 5: "–°—É–±–æ—Ç–∞", 6: "–ù–µ–¥—ñ–ª—è"
                            };
                            return `
                                <tr>
                                    <td>${weekdays[schedule.weekday] || '–ù–µ–≤—ñ–¥–æ–º–æ'}</td>
                                    <td><strong>${schedule.start_time}</strong></td>
                                    <td>${schedule.teacher ? schedule.teacher.full_name : '–ù–µ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–æ'}</td>
                                    <td>
                                        <span class="badge ${schedule.active ? 'bg-success' : 'bg-secondary'}">
                                            ${schedule.active ? '–ê–∫—Ç–∏–≤–Ω–∏–π' : '–ù–µ–∞–∫—Ç–∏–≤–Ω–∏–π'}
                                        </span>
                                    </td>
                                </tr>
                            `;
                        }).join('')}
                    </tbody>
                </table>
            </div>
            ` : '<hr><p class="text-muted text-center"><i class="bi bi-calendar-x"></i> –†–æ–∑–∫–ª–∞–¥—ñ–≤ –¥–ª—è —Ü—å–æ–≥–æ –≥—É—Ä—Ç–∫–∞ —â–µ –Ω–µ–º–∞—î</p>'}
        `;
        
        new bootstrap.Modal(modal).show();
    } catch (error) {
        showLoading(false);
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≥–ª—è–¥—É –≥—É—Ä—Ç–∫–∞:', error);
        showAlert(`–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π –≥—É—Ä—Ç–∫–∞: ${error.message}`, 'danger');
    }
}

async function editClub(id) {
    try {
        showLoading(true);
        const club = await apiCall(`clubs/${id}`);
        showLoading(false);
        
        let modal = document.getElementById('editClubModal');
        if (!modal) {
            modal = createEditClubModal();
        }
        
        // –ó–∞–ø–æ–≤–Ω—é—î–º–æ —Ñ–æ—Ä–º—É –¥–∞–Ω–∏–º–∏
        document.getElementById('editClubId').value = id;
        document.getElementById('editClubName').value = club.name;
        document.getElementById('editClubDuration').value = club.duration_min;
        document.getElementById('editClubLocation').value = club.location;
        
        // –î–æ–¥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≥—É—Ä—Ç–æ–∫ –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const modalTitle = modal.querySelector('.modal-title');
        modalTitle.innerHTML = `
            <i class="bi bi-pencil"></i> –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –≥—É—Ä—Ç–æ–∫ 
            <small class="text-muted">#${club.id}</small>
        `;
        
        // –î–æ–¥–∞—î–º–æ –≤–∞–ª—ñ–¥–∞—Ü—ñ—é –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ
        const inputs = modal.querySelectorAll('input[required]');
        inputs.forEach(input => {
            input.addEventListener('input', () => {
                if (input.checkValidity()) {
                    input.classList.remove('is-invalid');
                    input.classList.add('is-valid');
                } else {
                    input.classList.remove('is-valid');
                    input.classList.add('is-invalid');
                }
            });
        });
        
        new bootstrap.Modal(modal).show();
    } catch (error) {
        showLoading(false);
        console.error('–ü–æ–º–∏–ª–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –≥—É—Ä—Ç–∫–∞:', error);
        showAlert(`–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≥—É—Ä—Ç–∫–∞ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è: ${error.message}`, 'danger');
    }
}

async function saveClub() {
    console.log('üöÄ saveClub function called');
    
    const form = document.getElementById('addClubForm');
    if (!form.checkValidity()) {
        console.log('‚ùå Form validation failed');
        form.reportValidity();
        return;
    }
    
    const formData = new FormData(form);
    const clubData = {
        name: formData.get('clubName')?.trim(),
        duration_min: parseInt(formData.get('duration')),
        location: formData.get('location')?.trim(),
    };
    
    console.log('üìã Club data to send:', clubData);
    
    if (!clubData.name || !clubData.location) {
        console.log('‚ùå Missing required fields');
        showAlert('–ù–∞–∑–≤–∞ —Ç–∞ –ª–æ–∫–∞—Ü—ñ—è –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ!', 'warning');
        return;
    }
    
    try {
        console.log('üì° Sending API request...');
        showLoading(true);
        const result = await apiCall('clubs', 'POST', clubData);
        console.log('‚úÖ API request successful:', result);
        showLoading(false);
        
        bootstrap.Modal.getInstance(document.getElementById('addClubModal')).hide();
        showAlert('–ì—É—Ä—Ç–æ–∫ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ', 'success');
        setTimeout(() => location.reload(), 1500);
    } catch (error) {
        console.error('üí• API request failed:', error);
        showLoading(false);
    }
}

async function updateClub() {
    const id = document.getElementById('editClubId').value;
    const nameInput = document.getElementById('editClubName');
    const durationInput = document.getElementById('editClubDuration');
    const locationInput = document.getElementById('editClubLocation');
    
    const name = nameInput.value?.trim();
    const duration = parseInt(durationInput.value);
    const location = locationInput.value?.trim();
    
    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è –∑ –≤–∏–¥—ñ–ª–µ–Ω–Ω—è–º –ø–æ–º–∏–ª–∫–æ–≤–∏—Ö –ø–æ–ª—ñ–≤
    let hasErrors = false;
    
    if (!name) {
        nameInput.classList.add('is-invalid');
        hasErrors = true;
    }
    
    if (!location) {
        locationInput.classList.add('is-invalid');
        hasErrors = true;
    }
    
    if (duration < 30 || duration > 180) {
        durationInput.classList.add('is-invalid');
        hasErrors = true;
    }
    
    if (hasErrors) {
        showAlert('‚ùå –ó–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ!', 'warning');
        return;
    }
    
    const clubData = {
        name: name,
        duration_min: duration,
        location: location,
    };
    
    try {
        showLoading(true);
        console.log(`üìù –û–Ω–æ–≤–ª—é—î–º–æ –≥—É—Ä—Ç–æ–∫ ID=${id}:`, clubData);
        
        const result = await apiCall(`clubs/${id}`, 'PUT', clubData);
        showLoading(false);
        
        bootstrap.Modal.getInstance(document.getElementById('editClubModal')).hide();
        
        // –ü–æ–∫–∞–∑—É—î–º–æ –¥–µ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–º—ñ–Ω–∏
        showAlert(`
            ‚úÖ <strong>–ì—É—Ä—Ç–æ–∫ —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ!</strong><br>
            üìù <strong>–ù–∞–∑–≤–∞:</strong> ${result.name}<br>
            ‚è±Ô∏è <strong>–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å:</strong> ${result.duration_min} —Ö–≤<br>
            üìç <strong>–õ–æ–∫–∞—Ü—ñ—è:</strong> ${result.location}
        `, 'success');
        
        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É –∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é
        setTimeout(() => {
            console.log('üîÑ –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è...');
            location.reload();
        }, 2000);
        
    } catch (error) {
        showLoading(false);
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≥—É—Ä—Ç–∫–∞:', error);
        showAlert(`‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≥—É—Ä—Ç–∫–∞: ${error.message}`, 'danger');
    }
}

async function deleteClub(id) {
    try {
        showLoading(true);
        
        // –°–ø–æ—á–∞—Ç–∫—É –æ—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
        const dependencies = await apiCall(`clubs/${id}/dependencies`, 'GET');
        showLoading(false);
        
        // –ü–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –¥–µ—Ç–∞–ª—è–º–∏
        showDeleteClubModal(dependencies);
        
    } catch (error) {
        showLoading(false);
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π:', error);
        showAlert(`–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π: ${error.message}`, 'danger');
    }
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≥—É—Ä—Ç–∫–∞
function showDeleteClubModal(dependencies) {
    const modalId = 'deleteClubModal';
    
    // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ —è–∫—â–æ —ñ—Å–Ω—É—î
    const existingModal = document.getElementById(modalId);
    if (existingModal) {
        existingModal.remove();
    }
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
    const modalHtml = `
        <div class="modal fade" id="${modalId}" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header ${dependencies.can_delete_safely ? 'bg-info' : 'bg-warning'}">
                        <h5 class="modal-title text-white">
                            <i class="bi bi-exclamation-triangle"></i>
                            ${dependencies.can_delete_safely ? '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è' : '–ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è'}
                        </h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-8">
                                <h6 class="mb-3">–ì—É—Ä—Ç–æ–∫: <strong class="text-primary">${dependencies.club_name}</strong></h6>
                                
                                ${dependencies.can_delete_safely ? 
                                    `<div class="alert alert-success">
                                        <i class="bi bi-check-circle"></i>
                                        <strong>–ë–µ–∑–ø–µ—á–Ω–µ –≤–∏–¥–∞–ª–µ–Ω–Ω—è</strong><br>
                                        –£ —Ü—å–æ–≥–æ –≥—É—Ä—Ç–∫–∞ –Ω–µ–º–∞—î –ø—Ä–∏–≤'—è–∑–∞–Ω–∏—Ö —É—á–Ω—ñ–≤ –∞–±–æ —Ä–æ–∑–∫–ª–∞–¥—ñ–≤.
                                    </div>` :
                                    `<div class="alert alert-warning">
                                        <i class="bi bi-exclamation-triangle"></i>
                                        <strong>–ö–∞—Å–∫–∞–¥–Ω–µ –≤–∏–¥–∞–ª–µ–Ω–Ω—è</strong><br>
                                        –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ü—å–æ–≥–æ –≥—É—Ä—Ç–∫–∞ –≤–ø–ª–∏–Ω–µ –Ω–∞ —ñ–Ω—à—ñ –¥–∞–Ω—ñ –≤ —Å–∏—Å—Ç–µ–º—ñ.
                                    </div>`
                                }
                                
                                ${!dependencies.can_delete_safely ? generateDependenciesDetails(dependencies) : ''}
                            </div>
                            <div class="col-md-4">
                                <div class="card">
                                    <div class="card-header">
                                        <h6 class="mb-0"><i class="bi bi-info-circle"></i> –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row text-center g-2">
                                            <div class="col-6">
                                                <div class="border rounded p-2">
                                                    <h5 class="text-primary mb-0">${dependencies.dependencies.enrolled_students}</h5>
                                                    <small>–£—á–Ω—ñ–≤</small>
                                                </div>
                                            </div>
                                            <div class="col-6">
                                                <div class="border rounded p-2">
                                                    <h5 class="text-info mb-0">${dependencies.dependencies.schedules}</h5>
                                                    <small>–†–æ–∑–∫–ª–∞–¥—ñ–≤</small>
                                                </div>
                                            </div>
                                            <div class="col-6">
                                                <div class="border rounded p-2">
                                                    <h5 class="text-success mb-0">${dependencies.dependencies.conducted_lessons}</h5>
                                                    <small>–£—Ä–æ–∫—ñ–≤</small>
                                                </div>
                                            </div>
                                            <div class="col-6">
                                                <div class="border rounded p-2">
                                                    <h5 class="text-warning mb-0">${dependencies.dependencies.attendance_records}</h5>
                                                    <small>–í—ñ–¥–≤—ñ–¥—É–≤–∞–Ω—å</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        ${!dependencies.can_delete_safely ? 
                            `<div class="mt-3 p-3 bg-light rounded">
                                <h6><i class="bi bi-shield-check"></i> –©–æ –±—É–¥–µ –∑–±–µ—Ä–µ–∂–µ–Ω–æ:</h6>
                                <ul class="mb-0">
                                    <li>üìö –í—Å—ñ –ø—Ä–æ–≤–µ–¥–µ–Ω—ñ —É—Ä–æ–∫–∏ (${dependencies.dependencies.conducted_lessons}) - –¥–ª—è –∑–≤—ñ—Ç–Ω–æ—Å—Ç—ñ</li>
                                    <li>‚úÖ –ó–∞–ø–∏—Å–∏ –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω–æ—Å—Ç—ñ (${dependencies.dependencies.attendance_records}) - –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó</li>
                                    <li>üí∞ –ù–∞—Ä–∞—Ö–æ–≤–∞–Ω–∞ –∑–∞—Ä–ø–ª–∞—Ç–∞ - –¥–ª—è –±—É—Ö–≥–∞–ª—Ç–µ—Ä—ñ—ó</li>
                                </ul>
                            </div>` : ''
                        }
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                            <i class="bi bi-x-circle"></i> –°–∫–∞—Å—É–≤–∞—Ç–∏
                        </button>
                        <button type="button" class="btn ${dependencies.can_delete_safely ? 'btn-primary' : 'btn-danger'}" 
                                onclick="confirmDeleteClub('${dependencies.club_id}', ${dependencies.can_delete_safely})">
                            <i class="bi bi-trash"></i> 
                            ${dependencies.can_delete_safely ? '–í–∏–¥–∞–ª–∏—Ç–∏' : '–í–∏–¥–∞–ª–∏—Ç–∏ –∑ —É—Å—ñ–º–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—è–º–∏'}
                        </button>
                    </div>
                </div>
            </div>
        </div>
    `;
    
    // –î–æ–¥–∞—î–º–æ –¥–æ body
    document.body.insertAdjacentHTML('beforeend', modalHtml);
    
    // –ü–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
    const modal = new bootstrap.Modal(document.getElementById(modalId));
    modal.show();
}

// –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
function generateDependenciesDetails(dependencies) {
    return `
        <div class="mt-3">
            <h6><i class="bi bi-exclamation-diamond"></i> –©–æ –±—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–æ:</h6>
            <div class="row g-3">
                ${dependencies.dependencies.enrolled_students > 0 ? 
                    `<div class="col-12">
                        <div class="alert alert-warning py-2">
                            <i class="bi bi-people"></i>
                            <strong>${dependencies.dependencies.enrolled_students} —É—á–Ω—ñ–≤</strong> –±—É–¥—É—Ç—å –≤—ñ–¥–ø–∏—Å–∞–Ω—ñ –≤—ñ–¥ –≥—É—Ä—Ç–∫–∞
                            <br><small class="text-muted">–£—á–Ω—ñ –∑–º–æ–∂—É—Ç—å –∑–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ —ñ–Ω—à—ñ –≥—É—Ä—Ç–∫–∏</small>
                            <div class="mt-2">
                                <button type="button" class="btn btn-sm btn-outline-secondary" 
                                        onclick="toggleStudentsList('${dependencies.club_id}')">
                                    <i class="bi bi-list-ul"></i> –ü–æ–∫–∞–∑–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —É—á–Ω—ñ–≤
                                </button>
                                <div id="studentsList_${dependencies.club_id}" class="mt-2" style="display: none;">
                                    <div class="text-center">
                                        <div class="spinner-border spinner-border-sm" role="status"></div>
                                        <span class="ms-2">–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å–ø–∏—Å–æ–∫...</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>` : ''
                }
                ${dependencies.dependencies.schedules > 0 ? 
                    `<div class="col-12">
                        <div class="alert alert-info py-2">
                            <i class="bi bi-calendar"></i>
                            <strong>${dependencies.dependencies.schedules} —Ä–æ–∑–∫–ª–∞–¥—ñ–≤</strong> –±—É–¥—É—Ç—å –≤–∏–¥–∞–ª–µ–Ω—ñ
                            <br><small class="text-muted">–í–∫–ª—é—á–∞—é—á–∏ –≤—Å—ñ –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω—ñ —É—Ä–æ–∫–∏</small>
                            <div class="mt-2">
                                <button type="button" class="btn btn-sm btn-outline-secondary" 
                                        onclick="toggleSchedulesList('${dependencies.club_id}')">
                                    <i class="bi bi-calendar3"></i> –ü–æ–∫–∞–∑–∞—Ç–∏ —Ä–æ–∑–∫–ª–∞–¥–∏
                                </button>
                                <div id="schedulesList_${dependencies.club_id}" class="mt-2" style="display: none;">
                                    <div class="text-center">
                                        <div class="spinner-border spinner-border-sm" role="status"></div>
                                        <span class="ms-2">–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ä–æ–∑–∫–ª–∞–¥–∏...</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>` : ''
                }
            </div>
        </div>
    `;
}

// –ü–æ–∫–∞–∑–∞—Ç–∏/—Å—Ö–æ–≤–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —É—á–Ω—ñ–≤
async function toggleStudentsList(clubId) {
    const container = document.getElementById(`studentsList_${clubId}`);
    const button = container.previousElementSibling;
    
    if (container.style.display === 'none') {
        container.style.display = 'block';
        button.innerHTML = '<i class="bi bi-chevron-up"></i> –°—Ö–æ–≤–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —É—á–Ω—ñ–≤';
        
        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
        try {
            const details = await apiCall(`clubs/${clubId}/dependencies?include_students=true`, 'GET');
            
            if (details.details && details.details.students.length > 0) {
                const studentsHtml = details.details.students.map(student => 
                    `<div class="d-flex justify-content-between align-items-center py-1 border-bottom">
                        <span><i class="bi bi-person"></i> ${student.full_name}</span>
                        <small class="text-muted">${student.grade ? `${student.grade} –∫–ª–∞—Å` : ''} ${student.age ? `(${student.age} —Ä.)` : ''}</small>
                    </div>`
                ).join('');
                
                container.innerHTML = `
                    <div class="bg-light p-2 rounded">
                        <h6 class="mb-2 text-primary">–£—á–Ω—ñ —è–∫—ñ –±—É–¥—É—Ç—å –≤—ñ–¥–ø–∏—Å–∞–Ω—ñ:</h6>
                        ${studentsHtml}
                    </div>
                `;
            } else {
                container.innerHTML = '<div class="text-muted">–ù–µ–º–∞—î —É—á–Ω—ñ–≤ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è</div>';
            }
        } catch (error) {
            container.innerHTML = '<div class="text-danger">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É —É—á–Ω—ñ–≤</div>';
        }
    } else {
        container.style.display = 'none';
        button.innerHTML = '<i class="bi bi-list-ul"></i> –ü–æ–∫–∞–∑–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —É—á–Ω—ñ–≤';
    }
}

// –ü–æ–∫–∞–∑–∞—Ç–∏/—Å—Ö–æ–≤–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ä–æ–∑–∫–ª–∞–¥—ñ–≤
async function toggleSchedulesList(clubId) {
    const container = document.getElementById(`schedulesList_${clubId}`);
    const button = container.previousElementSibling;
    
    if (container.style.display === 'none') {
        container.style.display = 'block';
        button.innerHTML = '<i class="bi bi-chevron-up"></i> –°—Ö–æ–≤–∞—Ç–∏ —Ä–æ–∑–∫–ª–∞–¥–∏';
        
        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
        try {
            const details = await apiCall(`clubs/${clubId}/dependencies?include_students=true`, 'GET');
            
            if (details.details && details.details.schedules.length > 0) {
                const schedulesHtml = details.details.schedules.map(schedule => 
                    `<div class="d-flex justify-content-between align-items-center py-1 border-bottom">
                        <span><i class="bi bi-calendar-event"></i> ${schedule.display}</span>
                        <small class="text-muted">ID: ${schedule.id}</small>
                    </div>`
                ).join('');
                
                container.innerHTML = `
                    <div class="bg-light p-2 rounded">
                        <h6 class="mb-2 text-info">–†–æ–∑–∫–ª–∞–¥–∏ —è–∫—ñ –±—É–¥—É—Ç—å –≤–∏–¥–∞–ª–µ–Ω—ñ:</h6>
                        ${schedulesHtml}
                    </div>
                `;
            } else {
                container.innerHTML = '<div class="text-muted">–ù–µ–º–∞—î —Ä–æ–∑–∫–ª–∞–¥—ñ–≤ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è</div>';
            }
        } catch (error) {
            container.innerHTML = '<div class="text-danger">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É —Ä–æ–∑–∫–ª–∞–¥—ñ–≤</div>';
        }
    } else {
        container.style.display = 'none';
        button.innerHTML = '<i class="bi bi-calendar3"></i> –ü–æ–∫–∞–∑–∞—Ç–∏ —Ä–æ–∑–∫–ª–∞–¥–∏';
    }
}

// –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≥—É—Ä—Ç–∫–∞
async function confirmDeleteClub(clubId, canDeleteSafely) {
    try {
        // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        const modal = bootstrap.Modal.getInstance(document.getElementById('deleteClubModal'));
        modal.hide();
        
        // –í–∏–∫–æ–Ω—É—î–º–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
        showLoading(true);
        const deleteParams = canDeleteSafely ? '' : '?force=true';
        await apiCall(`clubs/${clubId}${deleteParams}`, 'DELETE');
        showLoading(false);
        
        const clubName = document.querySelector('#deleteClubModal .text-primary').textContent;
        showAlert(`–ì—É—Ä—Ç–æ–∫ "${clubName}" —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ`, 'success');
        setTimeout(() => location.reload(), 1500);
        
    } catch (error) {
        showLoading(false);
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≥—É—Ä—Ç–∫–∞:', error);
        showAlert(`–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≥—É—Ä—Ç–∫–∞: ${error.message}`, 'danger');
    }
}

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É
function createViewStudentModal() {
    const modalHTML = `
        <div class="modal fade" id="viewStudentModal" tabindex="-1">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">–î–µ—Ç–∞–ª—ñ —É—á–Ω—è</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body" id="studentDetails">
                        <!-- –î–µ—Ç–∞–ª—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—é—Ç—å—Å—è —Ç—É—Ç -->
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">–ó–∞–∫—Ä–∏—Ç–∏</button>
                    </div>
                </div>
            </div>
        </div>
    `;
    document.body.insertAdjacentHTML('beforeend', modalHTML);
    return document.getElementById('viewStudentModal');
}

function createViewTeacherModal() {
    const modalHTML = `
        <div class="modal fade" id="viewTeacherModal" tabindex="-1">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">–î–µ—Ç–∞–ª—ñ –≤—á–∏—Ç–µ–ª—è</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body" id="teacherDetails">
                        <!-- –î–µ—Ç–∞–ª—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—é—Ç—å—Å—è —Ç—É—Ç -->
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">–ó–∞–∫—Ä–∏—Ç–∏</button>
                    </div>
                </div>
            </div>
        </div>
    `;
    document.body.insertAdjacentHTML('beforeend', modalHTML);
    return document.getElementById('viewTeacherModal');
}

function createViewClubModal() {
    const modalHTML = `
        <div class="modal fade" id="viewClubModal" tabindex="-1">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">–î–µ—Ç–∞–ª—ñ –≥—É—Ä—Ç–∫–∞</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body" id="clubDetails">
                        <!-- –î–µ—Ç–∞–ª—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—é—Ç—å—Å—è —Ç—É—Ç -->
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">–ó–∞–∫—Ä–∏—Ç–∏</button>
                    </div>
                </div>
            </div>
        </div>
    `;
    document.body.insertAdjacentHTML('beforeend', modalHTML);
    return document.getElementById('viewClubModal');
}

function createEditClubModal() {
    const modalHTML = `
        <div class="modal fade" id="editClubModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –≥—É—Ä—Ç–æ–∫</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="editClubForm">
                            <input type="hidden" id="editClubId">
                            <div class="mb-3">
                                <label for="editClubName" class="form-label">–ù–∞–∑–≤–∞ –≥—É—Ä—Ç–∫–∞ *</label>
                                <input type="text" class="form-control" id="editClubName" required>
                            </div>
                            <div class="mb-3">
                                <label for="editClubDuration" class="form-label">–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å (—Ö–≤–∏–ª–∏–Ω–∏) *</label>
                                <input type="number" class="form-control" id="editClubDuration" min="30" max="180" required>
                            </div>
                            <div class="mb-3">
                                <label for="editClubLocation" class="form-label">–õ–æ–∫–∞—Ü—ñ—è *</label>
                                <input type="text" class="form-control" id="editClubLocation" required>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">–°–∫–∞—Å—É–≤–∞—Ç–∏</button>
                        <button type="button" class="btn btn-primary" onclick="updateClub()">–ó–±–µ—Ä–µ–≥—Ç–∏ –∑–º—ñ–Ω–∏</button>
                    </div>
                </div>
            </div>
        </div>
    `;
    document.body.insertAdjacentHTML('beforeend', modalHTML);
    return document.getElementById('editClubModal');
}

// === –†–û–ó–ö–õ–ê–î ===
async function viewSchedule(id) {
    try {
        showLoading(true);
        const schedule = await apiCall(`schedules/${id}`);
        showLoading(false);
        
        let modal = document.getElementById('viewScheduleModal');
        if (!modal) {
            modal = createViewScheduleModal();
        }
        
        const weekdays = {1: "–ü–æ–Ω–µ–¥—ñ–ª–æ–∫", 2: "–í—ñ–≤—Ç–æ—Ä–æ–∫", 3: "–°–µ—Ä–µ–¥–∞", 4: "–ß–µ—Ç–≤–µ—Ä", 5: "–ü'—è—Ç–Ω–∏—Ü—è"};
        
        document.getElementById('scheduleDetails').innerHTML = `
            <div class="row">
                <div class="col-md-6">
                    <h5 class="text-primary">${schedule.club?.name || '–ù–µ–≤—ñ–¥–æ–º–∏–π –≥—É—Ä—Ç–æ–∫'}</h5>
                    <hr>
                    <p><strong>–î–µ–Ω—å —Ç–∏–∂–Ω—è:</strong> <span class="badge bg-primary">${weekdays[schedule.weekday]}</span></p>
                    <p><strong>–ß–∞—Å:</strong> ${schedule.start_time}</p>
                    <p><strong>–°—Ç–∞—Ç—É—Å:</strong> ${schedule.active ? '<span class="badge bg-success">–ê–∫—Ç–∏–≤–Ω–∏–π</span>' : '<span class="badge bg-secondary">–ù–µ–∞–∫—Ç–∏–≤–Ω–∏–π</span>'}</p>
                </div>
                <div class="col-md-6">
                    <h6>–î–µ—Ç–∞–ª—ñ</h6>
                    <hr>
                    <p><strong>–í—á–∏—Ç–µ–ª—å:</strong> ${schedule.teacher?.full_name || '–ù–µ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–æ'}</p>
                    <p><strong>–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å:</strong> ${schedule.club?.duration_min || 60} —Ö–≤–∏–ª–∏–Ω</p>
                    <p><strong>–õ–æ–∫–∞—Ü—ñ—è:</strong> ${schedule.club?.location || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</p>
                </div>
            </div>
        `;
        
        new bootstrap.Modal(modal).show();
    } catch (error) {
        showLoading(false);
    }
}

async function editSchedule(id) {
    try {
        showLoading(true);
        const [schedule, clubs, teachers] = await Promise.all([
            apiCall(`schedules/${id}`),
            apiCall('clubs'),
            apiCall('teachers')
        ]);
        showLoading(false);
        
        let modal = document.getElementById('editScheduleModal');
        if (!modal) {
            modal = createEditScheduleModal();
        }
        
        // –ó–∞–ø–æ–≤–Ω–∏—Ç–∏ –≤–∏–ø–∞–¥–∞—é—á—ñ —Å–ø–∏—Å–∫–∏
        fillSelectOptions('editScheduleClub', clubs, 'id', 'name');
        fillSelectOptions('editScheduleTeacher', teachers, 'id', 'full_name');
        
        // –ó–∞–ø–æ–≤–Ω–∏—Ç–∏ —Ñ–æ—Ä–º—É
        document.getElementById('editScheduleId').value = id;
        document.getElementById('editScheduleClub').value = schedule.club_id;
        document.getElementById('editScheduleTeacher').value = schedule.teacher_id;
        document.getElementById('editScheduleWeekday').value = schedule.weekday;
        document.getElementById('editScheduleTime').value = schedule.start_time;
        document.getElementById('editScheduleActive').checked = schedule.active;
        
        new bootstrap.Modal(modal).show();
    } catch (error) {
        showLoading(false);
    }
}

async function saveSchedule() {
    console.log('üöÄ saveSchedule function called');
    
    if (isPopulatingSelects) {
        console.warn('‚ö†Ô∏è Still populating selects, aborting save');
        return;
    }
    
    const form = document.getElementById('addScheduleForm');
    if (!form.checkValidity()) {
        console.log('‚ùå Form validation failed');
        form.reportValidity();
        return;
    }
    
    const formData = new FormData(form);
    
    // –õ–æ–≥—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö –∑–Ω–∞—á–µ–Ω—å –∑ —Ñ–æ—Ä–º–∏
    console.log('üìã Raw form data:');
    for (let [key, value] of formData.entries()) {
        console.log(`  ${key}: "${value}"`);
    }
    
    const clubId = formData.get('clubId');
    const teacherId = formData.get('teacherId');
    const weekday = Number(formData.get('weekday'));
    const startTime = formData.get('startTime');
    const active = form.querySelector('#scheduleActive')?.checked ?? false;
    
    if (!clubId || !teacherId) {
        showAlert('–û–±–µ—Ä—ñ—Ç—å –≥—É—Ä—Ç–æ–∫ —ñ –≤—á–∏—Ç–µ–ª—è', 'warning');
        return;
    }
    
    const payload = {
        club_id: Number(clubId),
        teacher_id: Number(teacherId),
        weekday,
        start_time: startTime,
        group_name: '–ì—Ä—É–ø–∞ 1',
        active
    };
    
    console.log('üìä Processed schedule data:', payload);
    
    if (isNaN(payload.weekday) || payload.weekday < 1 || payload.weekday > 5) {
        console.log('‚ùå Validation failed - invalid weekday');
        showAlert('–û–±–µ—Ä—ñ—Ç—å –¥–µ–Ω—å —Ç–∏–∂–Ω—è!', 'warning');
        return;
    }
    
    if (!payload.start_time) {
        console.log('‚ùå Validation failed - missing start_time');
        showAlert('–í–∫–∞–∂—ñ—Ç—å —á–∞—Å –ø–æ—á–∞—Ç–∫—É!', 'warning');
        return;
    }
    
    try {
        console.log('üì° Sending API request...');
        showLoading(true);
        const result = await apiCall('schedules', 'POST', payload);
        console.log('‚úÖ Schedule created successfully:', result);
        showLoading(false);
        
        // –û—á–∏—â—É—î–º–æ —Ñ–æ—Ä–º—É
        form.reset();
        
        bootstrap.Modal.getInstance(document.getElementById('addScheduleModal')).hide();
        showAlert('–ó–∞–Ω—è—Ç—Ç—è —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ', 'success');
        
        // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É —â–æ–± –ø–æ–∫–∞–∑–∞—Ç–∏ –Ω–æ–≤–∏–π —Ä–æ–∑–∫–ª–∞–¥
        setTimeout(() => {
            window.location.reload();
        }, 1500);
    } catch (error) {
        console.error('üí• API request failed:', error);
        showLoading(false);
    }
}

async function updateSchedule() {
    const id = document.getElementById('editScheduleId').value;
    const clubId = document.getElementById('editScheduleClub').value;
    const teacherId = document.getElementById('editScheduleTeacher').value;
    const weekday = document.getElementById('editScheduleWeekday').value;
    
    if (!clubId || !teacherId || !weekday) {
        showAlert('–í—Å—ñ –ø–æ–ª—è –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ!', 'warning');
        return;
    }
    
    const scheduleData = {
        club_id: parseInt(clubId),
        teacher_id: parseInt(teacherId),
        weekday: parseInt(weekday),
        start_time: document.getElementById('editScheduleTime').value,
        active: document.getElementById('editScheduleActive').checked,
    };
    
    try {
        showLoading(true);
        await apiCall(`schedules/${id}`, 'PUT', scheduleData);
        showLoading(false);
        
        bootstrap.Modal.getInstance(document.getElementById('editScheduleModal')).hide();
        showAlert('–ó–∞–Ω—è—Ç—Ç—è —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ', 'success');
        setTimeout(() => location.reload(), 1500);
    } catch (error) {
        showLoading(false);
    }
}

async function deleteSchedule(id) {
    if (!confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ –∑–∞–Ω—è—Ç—Ç—è?')) {
        return;
    }
    
    try {
        showLoading(true);
        await apiCall(`schedules/${id}`, 'DELETE');
        showLoading(false);
        showAlert('–ó–∞–Ω—è—Ç—Ç—è —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ', 'success');
        setTimeout(() => location.reload(), 1500);
    } catch (error) {
        showLoading(false);
    }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ä–æ–∑–∫–ª–∞–¥—É
async function openAddScheduleModal() {
    console.log('üöÄ Opening add schedule modal...');
    try {
        showLoading(true);
        await loadScheduleSelects();     // —Ç—ñ–ª—å–∫–∏ —Ç—É—Ç
        showLoading(false);
        const modal = new bootstrap.Modal(document.getElementById('addScheduleModal'));
        modal.show();
    } catch (e) {
        showLoading(false);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –¥–∞–Ω–∏—Ö', 'danger');
    }
}

// –î–æ–ø–æ–º—ñ–∂–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–∑–∫–ª–∞–¥—É
async function loadScheduleSelects() {
    isPopulatingSelects = true;
    try {
        console.log('üì• Loading schedule select options...');
        const [clubs, teachers] = await Promise.all([
            apiCall('clubs'),
            apiCall('teachers')
        ]);
        
        console.log('üìä Loaded data:');
        console.log(`  Clubs: ${clubs.length} items`, clubs);
        console.log(`  Teachers: ${teachers.length} items`, teachers);
        
        fillSelectOptions('scheduleClub', clubs, 'id', 'name');
        fillSelectOptions('scheduleTeacher', teachers, 'id', 'full_name');
        
        console.log('‚úÖ Select options filled successfully');
    } catch (error) {
        console.error('‚ùå Error loading select options:', error);
    } finally {
        isPopulatingSelects = false;
    }
}

function fillSelectOptions(selectId, items, valueField, textField) {
    console.log(`üîÑ Filling select #${selectId} with ${items.length} items`);
    
    const select = document.getElementById(selectId);
    if (!select) {
        console.error(`‚ùå Select element #${selectId} not found`);
        return;
    }
    
    if (!Array.isArray(items)) {
        console.error(`‚ùå Items is not an array:`, items);
        return;
    }
    
    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –≤–∏–±—ñ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    const prevValue = select.value;
    
    // –û—á–∏—â—É—î–º–æ select
    select.innerHTML = '';
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ placeholder
    const placeholder = document.createElement('option');
    placeholder.value = '';
    placeholder.disabled = true;
    placeholder.selected = !prevValue; // selected –ª–∏—à–µ —è–∫—â–æ —â–µ –Ω–µ –±—É–ª–æ –≤–∏–±–æ—Ä—É
    placeholder.textContent = selectId.includes('Club') ? '–û–±–µ—Ä—ñ—Ç—å –≥—É—Ä—Ç–æ–∫' : '–û–±–µ—Ä—ñ—Ç—å –≤—á–∏—Ç–µ–ª—è';
    select.appendChild(placeholder);
    
    // –î–æ–¥–∞—î–º–æ –æ–ø—Ü—ñ—ó
    for (const item of items) {
        if (!item || typeof item !== 'object') {
            console.warn(`‚ö†Ô∏è Invalid item:`, item);
            continue;
        }
        
        const option = document.createElement('option');
        option.value = String(item[valueField]); // –Ø–≤–Ω–æ –¥–æ —Ä—è–¥–∫–∞
        option.textContent = item[textField];
        select.appendChild(option);
    }
        
    // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –≤–∏–±—ñ—Ä —è–∫—â–æ –≤—ñ–Ω –¥–æ—Å—ñ —ñ—Å–Ω—É—î
    if (prevValue && [...select.options].some(o => o.value === prevValue)) {
        select.value = prevValue;
        }
    
    console.log(`‚úÖ Select #${selectId} filled with ${items.length} options (prev value: ${prevValue}, current: ${select.value})`);
}

function createViewScheduleModal() {
    const modalHTML = `
        <div class="modal fade" id="viewScheduleModal" tabindex="-1">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">–î–µ—Ç–∞–ª—ñ –∑–∞–Ω—è—Ç—Ç—è</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body" id="scheduleDetails">
                        <!-- –î–µ—Ç–∞–ª—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—é—Ç—å—Å—è —Ç—É—Ç -->
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">–ó–∞–∫—Ä–∏—Ç–∏</button>
                    </div>
                </div>
            </div>
        </div>
    `;
    document.body.insertAdjacentHTML('beforeend', modalHTML);
    return document.getElementById('viewScheduleModal');
}

function createEditScheduleModal() {
    const modalHTML = `
        <div class="modal fade" id="editScheduleModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –∑–∞–Ω—è—Ç—Ç—è</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="editScheduleForm">
                            <input type="hidden" id="editScheduleId">
                            <div class="mb-3">
                                <label for="editScheduleClub" class="form-label">–ì—É—Ä—Ç–æ–∫ *</label>
                                <select class="form-select" id="editScheduleClub" required>
                                    <option value="">–û–±–µ—Ä—ñ—Ç—å –≥—É—Ä—Ç–æ–∫</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="editScheduleTeacher" class="form-label">–í—á–∏—Ç–µ–ª—å *</label>
                                <select class="form-select" id="editScheduleTeacher" required>
                                    <option value="">–û–±–µ—Ä—ñ—Ç—å –≤—á–∏—Ç–µ–ª—è</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="editScheduleWeekday" class="form-label">–î–µ–Ω—å —Ç–∏–∂–Ω—è *</label>
                                <select class="form-select" id="editScheduleWeekday" required>
                                    <option value="">–û–±–µ—Ä—ñ—Ç—å –¥–µ–Ω—å</option>
                                    <option value="1">–ü–æ–Ω–µ–¥—ñ–ª–æ–∫</option>
                                    <option value="2">–í—ñ–≤—Ç–æ—Ä–æ–∫</option>
                                    <option value="3">–°–µ—Ä–µ–¥–∞</option>
                                    <option value="4">–ß–µ—Ç–≤–µ—Ä</option>
                                    <option value="5">–ü'—è—Ç–Ω–∏—Ü—è</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="editScheduleTime" class="form-label">–ß–∞—Å –ø–æ—á–∞—Ç–∫—É *</label>
                                <input type="time" class="form-control" id="editScheduleTime" required>
                            </div>
                            <div class="mb-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="editScheduleActive">
                                    <label class="form-check-label" for="editScheduleActive">
                                        –ê–∫—Ç–∏–≤–Ω–µ –∑–∞–Ω—è—Ç—Ç—è
                                    </label>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">–°–∫–∞—Å—É–≤–∞—Ç–∏</button>
                        <button type="button" class="btn btn-primary" onclick="updateSchedule()">–ó–±–µ—Ä–µ–≥—Ç–∏ –∑–º—ñ–Ω–∏</button>
                    </div>
                </div>
            </div>
        </div>
    `;
    document.body.insertAdjacentHTML('beforeend', modalHTML);
    return document.getElementById('editScheduleModal');
}


// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
document.addEventListener('DOMContentLoaded', function() {
    console.log('‚úÖ School of Life Admin Interface loaded');
    console.log('üîó API Base:', API_BASE);
    
    // –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å–ø–∏—Å–∫–∏ –¥–ª—è —Ä–æ–∑–∫–ª–∞–¥—É, —è–∫—â–æ –º–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ —Ä–æ–∑–∫–ª–∞–¥—É
    if (window.location.pathname.includes('/schedules')) {
        loadScheduleSelects();
    }
    
    // –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ —É—á–Ω—ñ–≤, —è–∫—â–æ –º–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ —É—á–Ω—ñ–≤
    if (window.location.pathname.includes('/students')) {
        loadStudentsData();
    }
    
    // –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ –≤—á–∏—Ç–µ–ª—ñ–≤, —è–∫—â–æ –º–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –≤—á–∏—Ç–µ–ª—ñ–≤
    if (window.location.pathname.includes('/teachers')) {
        loadTeachersData();
    }
    
    // –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ —Ä–æ–∑–∫–ª–∞–¥—É, —è–∫—â–æ –º–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ —Ä–æ–∑–∫–ª–∞–¥—É
    if (window.location.pathname.includes('/schedules')) {
        // üî• –ü–ï–†–ï–í–Ü–†–Ø–Ñ–ú–û —á–∏ —î –Ω–æ–≤–∏–π –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∫–æ–¥
        if (!window.scheduleFixApplied) {
            loadSchedulesTableData();
        } else {
            console.log('üîß [ADMIN.JS] –ü—Ä–æ–ø—É—Å–∫–∞—é loadSchedulesTableData() - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –Ω–æ–≤–∏–π –∫–æ–¥ –∑ —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏');
        }
    }
    
    // –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ –≥—É—Ä—Ç–∫—ñ–≤, —è–∫—â–æ –º–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –≥—É—Ä—Ç–∫—ñ–≤
    if (window.location.pathname.includes('/clubs')) {
        loadClubsData();
    }
    
    // –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ –±–æ—Ç—É, —è–∫—â–æ –º–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –±–æ—Ç—É
    if (window.location.pathname.includes('/bot')) {
        loadBotData();
    }
});

// === –†–û–ó–®–ò–†–ï–ù–ê –¢–ê–ë–õ–ò–¶–Ø –£–ß–ù–Ü–í ===

let allStudentsData = [];
// allClubsData - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—É –∑–º—ñ–Ω–Ω—É
let isLoadingStudentsData = false; // –ó–∞—Ö–∏—Å—Ç –≤—ñ–¥ –±–∞–≥–∞—Ç–æ—Ä–∞–∑–æ–≤–∏—Ö –≤–∏–∫–ª–∏–∫—ñ–≤

// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö –¥–∞–Ω–∏—Ö –¥–ª—è —Ç–∞–±–ª–∏—Ü—ñ —É—á–Ω—ñ–≤
async function loadStudentsData() {
    // –ó–∞—Ö–∏—Å—Ç –≤—ñ–¥ –±–∞–≥–∞—Ç–æ—Ä–∞–∑–æ–≤–∏—Ö –≤–∏–∫–ª–∏–∫—ñ–≤
    if (isLoadingStudentsData) {
        console.log('‚è≥ –î–∞–Ω—ñ —É—á–Ω—ñ–≤ –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—é—Ç—å—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –¥—É–±–ª—é–≤–∞–Ω–Ω—è');
        return;
    }
    
    isLoadingStudentsData = true;
    try {
        showLoading(true);
        console.log('üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —É—á–Ω—ñ–≤...');
        
        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ –≤—Å—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –¥–∞–Ω—ñ
        const [students, clubs, enrollments] = await Promise.all([
            apiCall('students'),
            apiCall('clubs'),
            apiCall('enrollments')
        ]);
        
        allStudentsData = students;
        allClubsData = clubs;
        
        console.log(`üìä –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: ${students.length} —É—á–Ω—ñ–≤, ${clubs.length} –≥—É—Ä—Ç–∫—ñ–≤, ${enrollments.length} –∑–∞–ø–∏—Å—ñ–≤`);
        
        // –ü—Ä–∏–≤'—è–∑—É—î–º–æ –∑–∞–ø–∏—Å–∏ –¥–æ —É—á–Ω—ñ–≤
        allStudentsData.forEach(student => {
            student.enrolledClubs = enrollments
                .filter(e => e.student_id === student.id)
                .map(e => e.club_id);
        });
        
        buildStudentsTable();
        showLoading(false);
        
    } catch (error) {
        showLoading(false);
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —É—á–Ω—ñ–≤:', error);
        // –ü–æ–º–∏–ª–∫–∞ –≤–∂–µ –ø–æ–∫–∞–∑–∞–Ω–∞ –≤ apiCall, –Ω–µ –¥—É–±–ª—é—î–º–æ
    } finally {
        isLoadingStudentsData = false; // –û—á–∏—â–∞—î–º–æ —Ñ–ª–∞–≥
    }
}

// –ü–æ–±—É–¥–æ–≤–∞ –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤ —Ç–∞–±–ª–∏—Ü—ñ –∑ —Ä–æ–∑—à–∏—Ä–µ–Ω–∏–º–∏ —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏
function buildStudentsTable() {
    const tableHead = document.getElementById('studentsTableHead');
    const tableBody = document.getElementById('studentsTableBody');
    
    // –ü–ï–†–®–ò–ô –†–Ø–î–û–ö - –ù–ê–ó–í–ò –ö–û–õ–û–ù–û–ö
    let headerHTML = `
        <tr>
            <th class="text-center">–Ü–º'—è</th>
            <th class="text-center">–ü—Ä—ñ–∑–≤–∏—â–µ</th>
            <th class="text-center">–î–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è</th>
            <th class="text-center">–í—ñ–∫</th>
            <th class="text-center">–ö–ª–∞—Å</th>
            <th class="text-center">–¢–µ–ª–µ—Ñ–æ–Ω –¥–∏—Ç–∏–Ω–∏</th>
            <th class="text-center">–ü–Ü–ë –º–∞—Ç–µ—Ä—ñ</th>
            <th class="text-center">–¢–µ–ª–µ—Ñ–æ–Ω –º–∞—Ç–µ—Ä—ñ</th>
            <th class="text-center">–ü–Ü–ë –±–∞—Ç—å–∫–∞</th>
            <th class="text-center">–¢–µ–ª–µ—Ñ–æ–Ω –±–∞—Ç—å–∫–∞</th>`;
    
    // –î–æ–¥–∞—î–º–æ –Ω–∞–∑–≤–∏ –≥—É—Ä—Ç–∫—ñ–≤
    allClubsData.forEach(club => {
        headerHTML += `<th class="text-center" title="–ó–∞–ø–∏—Å–∞–Ω–∏–π –Ω–∞ ${club.name}?">${club.name}</th>`;
    });
    
    headerHTML += `<th class="text-center">–î—ñ—ó</th></tr>`;
    
    // –î–†–£–ì–ò–ô –†–Ø–î–û–ö - –ü–†–û–°–¢–Ü –§–Ü–õ–¨–¢–†–ò
    headerHTML += `
        <tr class="filter-row">
            <td>
                <input type="text" class="form-control form-control-sm filter-input" id="filterStudentFirstName" 
                       placeholder="–§—ñ–ª—å—Ç—Ä –ø–æ —ñ–º–µ–Ω—ñ" onkeyup="filterStudents()">
            </td>
            <td>
                <input type="text" class="form-control form-control-sm filter-input" id="filterStudentLastName" 
                       placeholder="–§—ñ–ª—å—Ç—Ä –ø–æ –ø—Ä—ñ–∑–≤–∏—â—É" onkeyup="filterStudents()">
            </td>
            <td>
                <input type="date" class="form-control form-control-sm filter-input" id="filterBirthDate" 
                       onchange="filterStudents()">
            </td>
            <td>
                <input type="text" class="form-control form-control-sm filter-input" id="filterStudentAge" 
                       placeholder="–§—ñ–ª—å—Ç—Ä –ø–æ –≤—ñ–∫—É" onkeyup="filterStudents()">
            </td>
            <td>
                <input type="text" class="form-control form-control-sm filter-input" id="filterStudentGrade" 
                       placeholder="–§—ñ–ª—å—Ç—Ä –ø–æ –∫–ª–∞—Å—É" onkeyup="filterStudents()">
            </td>
            <td>
                <input type="text" class="form-control form-control-sm filter-input" id="filterChildPhone" 
                       placeholder="–¢–µ–ª–µ—Ñ–æ–Ω –¥–∏—Ç–∏–Ω–∏" onkeyup="filterStudents()">
            </td>
            <td>
                <input type="text" class="form-control form-control-sm filter-input" id="filterMotherName" 
                       placeholder="–ü–Ü–ë –º–∞—Ç–µ—Ä—ñ" onkeyup="filterStudents()">
            </td>
            <td>
                <input type="text" class="form-control form-control-sm filter-input" id="filterMotherPhone" 
                       placeholder="–¢–µ–ª. –º–∞—Ç–µ—Ä—ñ" onkeyup="filterStudents()">
            </td>
            <td>
                <input type="text" class="form-control form-control-sm filter-input" id="filterFatherName" 
                       placeholder="–ü–Ü–ë –±–∞—Ç—å–∫–∞" onkeyup="filterStudents()">
            </td>
            <td>
                <input type="text" class="form-control form-control-sm filter-input" id="filterFatherPhone" 
                       placeholder="–¢–µ–ª. –±–∞—Ç—å–∫–∞" onkeyup="filterStudents()">
            </td>`;
    
    // –î–æ–¥–∞—î–º–æ —Ñ—ñ–ª—å—Ç—Ä–∏ –¥–ª—è –≥—É—Ä—Ç–∫—ñ–≤
    allClubsData.forEach(club => {
        headerHTML += `
            <td class="text-center">
                <select class="form-select form-select-sm filter-select" id="filterClub${club.id}" onchange="filterStudents()">
                    <option value="">–í—Å—ñ</option>
                    <option value="enrolled">‚úÖ –¢–∞–∫</option>
                    <option value="not-enrolled">‚ùå –ù—ñ</option>
                </select>
            </td>`;
    });
    
    headerHTML += `<td></td></tr>`;
    
    tableHead.innerHTML = headerHTML;
    
    // –ù–∞–ø–æ–≤–Ω—é—î–º–æ –¥–∞–Ω—ñ
    displayStudentsData(allStudentsData);
    
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ sticky scrollbar
    setTimeout(initStickyScrollbar, 100);
}

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —É—á–Ω—ñ–≤
function displayStudentsData(students) {
    const tableBody = document.getElementById('studentsTableBody');
    
    if (students.length === 0) {
        const clubsCount = allClubsData.length;
        tableBody.innerHTML = `
            <tr>
                <td colspan="${7 + clubsCount}" class="text-center text-muted">
                    <i class="bi bi-people"></i><br>
                    –£—á–Ω—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–∞ –∑–∞–¥–∞–Ω–∏–º–∏ –∫—Ä–∏—Ç–µ—Ä—ñ—è–º–∏
                </td>
            </tr>`;
            return;
        }
        
    let bodyHTML = '';
    students.forEach(student => {
        // –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –ü—Ä–∞–≤–∏–ª—å–Ω–µ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –¥–∞—Ç–∏
        let birthDate = '-';
        if (student.birth_date && student.birth_date !== null && student.birth_date !== '') {
            try {
                // –Ø–∫—â–æ –¥–∞—Ç–∞ —É —Ñ–æ—Ä–º–∞—Ç—ñ YYYY-MM-DD (–∑ API)
                if (typeof student.birth_date === 'string' && student.birth_date.includes('-')) {
                    const [year, month, day] = student.birth_date.split('-');
                    // –°—Ç–≤–æ—Ä—é—î–º–æ –¥–∞—Ç—É –ë–ï–ó timezone –ø—Ä–æ–±–ª–µ–º
                    const date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));
                    birthDate = date.toLocaleDateString('uk-UA', { year: 'numeric', month: '2-digit', day: '2-digit' });
                } else {
                    // –Ü–Ω—à–∏–π —Ñ–æ—Ä–º–∞—Ç - –ø—Ä–æ–±—É—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –ø–∞—Ä—Å–∏–Ω–≥
                    const date = new Date(student.birth_date);
                    if (!isNaN(date.getTime())) {
                        birthDate = date.toLocaleDateString('uk-UA', { year: 'numeric', month: '2-digit', day: '2-digit' });
                    }
                }
            } catch (e) {
                console.error('–ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É –¥–∞—Ç–∏:', student.birth_date, e);
                birthDate = '-';
            }
        }
        
        // –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –ü–æ–∫–∞–∑—É—î–º–æ –ü–Ü–ë –±–∞—Ç—å–∫—ñ–≤ (–Ω–µ —Ç–µ–ª–µ—Ñ–æ–Ω!)
        // –§—ñ–ª—å—Ç—Ä—É—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ/—Ñ–µ–π–∫–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è: null, '', '---', '‚Äî', —Ç–æ—â–æ
        const isValidParentName = (name) => {
            if (!name || name === null || name === '') return false;
            const trimmed = name.trim();
            if (trimmed === '' || trimmed === '-' || trimmed === '‚Äî' || trimmed === '---' || trimmed === '–ù–µ –≤–∫–∞–∑–∞–Ω–æ') return false;
            return true;
        };
        
        let parentInfo = '-';
        if (isValidParentName(student.mother_name)) {
            parentInfo = student.mother_name.trim();
        } else if (isValidParentName(student.father_name)) {
            parentInfo = student.father_name.trim();
        } else if (isValidParentName(student.parent_name)) {
            parentInfo = student.parent_name.trim();
        }
        
        // –î–ª—è sticky —Å—Ç–æ–≤–ø—Ü—ñ–≤ –¥–æ–¥–∞—î–º–æ title –¥–ª—è –¥–æ–≤–≥–∏—Ö —ñ–º–µ–Ω
        const firstNameTitle = student.first_name.length > 12 ? `title="${student.first_name}"` : '';
        const lastNameTitle = student.last_name.length > 15 ? `title="${student.last_name}"` : '';
        
        // –§—ñ–ª—å—Ç—Ä—É—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ/—Ñ–µ–π–∫–æ–≤—ñ —Ç–µ–ª–µ—Ñ–æ–Ω–∏ —Ç–µ–∂
        const isValidPhone = (phone) => {
            if (!phone || phone === null || phone === '') return false;
            const trimmed = phone.trim();
            if (trimmed === '' || trimmed === '-' || trimmed === '‚Äî' || trimmed === '---') return false;
            return true;
        };
        
        const childPhone = isValidPhone(student.phone_child) ? student.phone_child : '-';
        const motherNameDisplay = isValidParentName(student.mother_name) ? student.mother_name.trim() : '-';
        const motherPhoneDisplay = isValidPhone(student.phone_mother) ? student.phone_mother : '-';
        const fatherNameDisplay = isValidParentName(student.father_name) ? student.father_name.trim() : '-';
        const fatherPhoneDisplay = isValidPhone(student.phone_father) ? student.phone_father : '-';
        
        bodyHTML += `
            <tr>
                <td ${firstNameTitle}>${student.first_name}</td>
                <td ${lastNameTitle}>${student.last_name}</td>
                <td>${birthDate}</td>
                <td>${student.age || '-'}</td>
                <td>${student.grade || '-'}</td>
                <td>${childPhone}</td>
                <td>${motherNameDisplay}</td>
                <td>${motherPhoneDisplay}</td>
                <td>${fatherNameDisplay}</td>
                <td>${fatherPhoneDisplay}</td>`;
        
        // –î–æ–¥–∞—î–º–æ —Å—Ç–∞—Ç—É—Å–∏ –ø–æ –≥—É—Ä—Ç–∫–∞—Ö (—Ç—ñ–ª—å–∫–∏ –≤—ñ–∑—É–∞–ª—å–Ω—ñ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∏)
        allClubsData.forEach(club => {
            const isEnrolled = student.enrolledClubs && student.enrolledClubs.includes(club.id);
            if (isEnrolled) {
                // –£—á–µ–Ω—å –∑–∞–ø–∏—Å–∞–Ω–∏–π - –ø–æ–∫–∞–∑—É—î–º–æ ‚úÖ (–±–µ–∑ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ)
                bodyHTML += `
                    <td class="text-center club-status" data-student-id="${student.id}" data-club-id="${club.id}">
                        <span class="fs-5 text-success" title="–ó–∞–ø–∏—Å–∞–Ω–∏–π –Ω–∞ –≥—É—Ä—Ç–æ–∫ '${club.name}'">‚úÖ</span>
                    </td>`;
            } else {
                // –£—á–µ–Ω—å –Ω–µ –∑–∞–ø–∏—Å–∞–Ω–∏–π - –ø–æ–∫–∞–∑—É—î–º–æ ‚ùå (–±–µ–∑ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ)
                bodyHTML += `
                    <td class="text-center club-status" data-student-id="${student.id}" data-club-id="${club.id}">
                        <span class="fs-5 text-muted" title="–ù–µ –∑–∞–ø–∏—Å–∞–Ω–∏–π –Ω–∞ –≥—É—Ä—Ç–æ–∫ '${club.name}'">‚ùå</span>
                    </td>`;
            }
        });
        
        bodyHTML += `
                <td>
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-sm btn-outline-primary" 
                                onclick="viewStudent(${student.id})" title="–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏">
                            <i class="bi bi-eye"></i>
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-info" 
                                onclick="viewStudentFullInfo(${student.id})" title="–ü–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è">
                            <i class="bi bi-person-lines-fill"></i>
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-warning"
                                onclick="editStudent(${student.id})" title="–†–µ–¥–∞–≥—É–≤–∞—Ç–∏">
                            <i class="bi bi-pencil"></i>
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-danger"
                                onclick="deleteStudent(${student.id})" title="–í–∏–¥–∞–ª–∏—Ç–∏">
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                </td>
            </tr>`;
    });
    
    tableBody.innerHTML = bodyHTML;
    
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ sticky scrollbar –ø—ñ—Å–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
    initStickyScrollbar();
}

// STICKY SCROLLBAR - –ü–ª–∞–≤–∞—é—á–∏–π –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∏–π —Å–∫—Ä–æ–ª–±–∞—Ä (—É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è)
function initStickyScrollbar(containerId = 'studentsTableContainer') {
    const tableContainer = document.getElementById(containerId);
    const stickyScrollbar = document.getElementById('stickyScrollbar');
    const stickyScrollbarTrack = document.getElementById('stickyScrollbarTrack');
    const stickyScrollbarThumb = document.getElementById('stickyScrollbarThumb');
    
    if (!tableContainer || !stickyScrollbar || !stickyScrollbarTrack || !stickyScrollbarThumb) {
        return;
    }
    
    let isDragging = false;
    let startX = 0;
    let startScrollLeft = 0;
    
    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–∑–∏—Ü—ñ—ó —Ç–∞ —Ä–æ–∑–º—ñ—Ä—É thumb
    function updateStickyScrollbar() {
        const scrollWidth = tableContainer.scrollWidth;
        const clientWidth = tableContainer.clientWidth;
        const scrollLeft = tableContainer.scrollLeft;
        
        // –ü–æ–∫–∞–∑—É—î–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —î –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∏–π —Å–∫—Ä–æ–ª
        if (scrollWidth > clientWidth) {
            // –û–±—á–∏—Å–ª—é—î–º–æ —Ä–æ–∑–º—ñ—Ä thumb (–ø—Ä–æ–ø–æ—Ä—Ü—ñ–π–Ω–æ –≤–∏–¥–∏–º—ñ–π —á–∞—Å—Ç–∏–Ω—ñ)
            const thumbWidth = (clientWidth / scrollWidth) * 300; // 300px - —à–∏—Ä–∏–Ω–∞ —Ç—Ä–µ–∫—É
            const thumbPosition = (scrollLeft / (scrollWidth - clientWidth)) * (300 - thumbWidth);
            
            stickyScrollbarThumb.style.width = thumbWidth + 'px';
            stickyScrollbarThumb.style.left = thumbPosition + 'px';
            
            // –ü–æ–∫–∞–∑—É—î–º–æ sticky scrollbar —è–∫—â–æ:
            // 1. –¢–∞–±–ª–∏—Ü—è –ø—Ä–æ–∫—Ä—É—á–µ–Ω–∞ –≤–Ω–∏–∑ (–æ—Å–Ω–æ–≤–Ω–∏–π scrollbar –Ω–µ –≤–∏–¥–Ω–æ)
            // 2. –Ñ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∏–π —Å–∫—Ä–æ–ª
            const tableRect = tableContainer.getBoundingClientRect();
            const scrollbarRect = tableContainer.getBoundingClientRect();
            const windowHeight = window.innerHeight;
            
            // Scrollbar –∑'—è–≤–ª—è—î—Ç—å—Å—è —è–∫—â–æ –Ω–∏–∂–Ω—è —á–∞—Å—Ç–∏–Ω–∞ —Ç–∞–±–ª–∏—Ü—ñ –ø–æ–∑–∞ –µ–∫—Ä–∞–Ω–æ–º
            const isScrollbarHidden = scrollbarRect.bottom > windowHeight - 50;
            const hasHorizontalScroll = scrollWidth > clientWidth;
            
            if (isScrollbarHidden && hasHorizontalScroll) {
                stickyScrollbar.classList.add('visible');
            } else {
                stickyScrollbar.classList.remove('visible');
            }
        } else {
            stickyScrollbar.classList.remove('visible');
        }
    }
    
    // –û–±—Ä–æ–±–Ω–∏–∫ –ø—Ä–æ–∫—Ä—É—á—É–≤–∞–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–æ—ó —Ç–∞–±–ª–∏—Ü—ñ
    tableContainer.addEventListener('scroll', updateStickyScrollbar);
    
    // –û–±—Ä–æ–±–Ω–∏–∫ –ø—Ä–æ–∫—Ä—É—á—É–≤–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    window.addEventListener('scroll', updateStickyScrollbar);
    
    // –û–±—Ä–æ–±–Ω–∏–∫ –∑–º—ñ–Ω–∏ —Ä–æ–∑–º—ñ—Ä—É –≤—ñ–∫–Ω–∞
    window.addEventListener('resize', updateStickyScrollbar);
    
    // –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è drag and drop –Ω–∞ sticky scrollbar
    stickyScrollbarThumb.addEventListener('mousedown', (e) => {
        isDragging = true;
        startX = e.clientX;
        startScrollLeft = tableContainer.scrollLeft;
        document.body.style.userSelect = 'none';
        e.preventDefault();
    });
    
    document.addEventListener('mousemove', (e) => {
        if (!isDragging) return;
        
        const deltaX = e.clientX - startX;
        const scrollWidth = tableContainer.scrollWidth;
        const clientWidth = tableContainer.clientWidth;
        const maxScrollLeft = scrollWidth - clientWidth;
        
        // –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ —Ä—É—Ö –º–∏—à—ñ –≤ –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Ç–∞–±–ª–∏—Ü—ñ
        const scrollRatio = maxScrollLeft / (300 - stickyScrollbarThumb.offsetWidth);
        const newScrollLeft = startScrollLeft + (deltaX * scrollRatio);
        
        tableContainer.scrollLeft = Math.max(0, Math.min(maxScrollLeft, newScrollLeft));
    });
    
    document.addEventListener('mouseup', () => {
        isDragging = false;
        document.body.style.userSelect = '';
    });
    
    // Touch –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ –¥–ª—è –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤
    stickyScrollbarThumb.addEventListener('touchstart', (e) => {
        isDragging = true;
        startX = e.touches[0].clientX;
        startScrollLeft = tableContainer.scrollLeft;
        e.preventDefault();
    });
    
    document.addEventListener('touchmove', (e) => {
        if (!isDragging) return;
        
        const deltaX = e.touches[0].clientX - startX;
        const scrollWidth = tableContainer.scrollWidth;
        const clientWidth = tableContainer.clientWidth;
        const maxScrollLeft = scrollWidth - clientWidth;
        
        const scrollRatio = maxScrollLeft / (300 - stickyScrollbarThumb.offsetWidth);
        const newScrollLeft = startScrollLeft + (deltaX * scrollRatio);
        
        tableContainer.scrollLeft = Math.max(0, Math.min(maxScrollLeft, newScrollLeft));
        e.preventDefault();
    });
    
    document.addEventListener('touchend', () => {
        isDragging = false;
    });
    
    // –û–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—É –ø–æ —Ç—Ä–µ–∫—É
    stickyScrollbarTrack.addEventListener('click', (e) => {
        if (e.target === stickyScrollbarThumb) return;
        
        const rect = stickyScrollbarTrack.getBoundingClientRect();
        const clickPosition = e.clientX - rect.left;
        const scrollWidth = tableContainer.scrollWidth;
        const clientWidth = tableContainer.clientWidth;
        const maxScrollLeft = scrollWidth - clientWidth;
        
        const targetScrollLeft = (clickPosition / 300) * maxScrollLeft;
        tableContainer.scrollLeft = targetScrollLeft;
    });
    
    // –ü–æ—á–∞—Ç–∫–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    setTimeout(updateStickyScrollbar, 100);
}


// –†–æ–∑—à–∏—Ä–µ–Ω–∞ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —É—á–Ω—ñ–≤ –∑ —É—Å—ñ–º–∞ –∫–æ–ª–æ–Ω–∫–∞–º–∏
function filterStudents() {
    console.log('üîç –†–æ–∑—à–∏—Ä–µ–Ω–∞ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —É—á–Ω—ñ–≤...');
    
    const firstNameFilter = document.getElementById('filterStudentFirstName')?.value.toLowerCase().trim() || '';
    const lastNameFilter = document.getElementById('filterStudentLastName')?.value.toLowerCase().trim() || '';
    const birthDateFilter = document.getElementById('filterBirthDate')?.value || '';
    const ageFilter = document.getElementById('filterStudentAge')?.value || '';
    const gradeFilter = document.getElementById('filterStudentGrade')?.value.toLowerCase().trim() || '';
    
    // –ù–û–í–Ü –§–Ü–õ–¨–¢–†–ò
    const childPhoneFilter = document.getElementById('filterChildPhone')?.value.toLowerCase().trim() || '';
    const motherNameFilter = document.getElementById('filterMotherName')?.value.toLowerCase().trim() || '';
    const motherPhoneFilter = document.getElementById('filterMotherPhone')?.value.toLowerCase().trim() || '';
    const fatherNameFilter = document.getElementById('filterFatherName')?.value.toLowerCase().trim() || '';
    const fatherPhoneFilter = document.getElementById('filterFatherPhone')?.value.toLowerCase().trim() || '';
    
    let filteredStudents = allStudentsData.filter(student => {
        // –§—ñ–ª—å—Ç—Ä –ø–æ —ñ–º–µ–Ω—ñ
        if (firstNameFilter && !student.first_name.toLowerCase().includes(firstNameFilter)) {
            return false;
        }
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ –ø—Ä—ñ–∑–≤–∏—â—É
        if (lastNameFilter && !student.last_name.toLowerCase().includes(lastNameFilter)) {
            return false;
        }
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ –¥–∞—Ç—ñ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è
        if (birthDateFilter && student.birth_date !== birthDateFilter) {
            return false;
        }
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ –≤—ñ–∫—É (—Ç–µ–∫—Å—Ç–æ–≤–∏–π –ø–æ—à—É–∫)
        if (ageFilter && student.age) {
            if (!student.age.toString().includes(ageFilter)) {
                return false;
            }
        }
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ –∫–ª–∞—Å—É
        if (gradeFilter && student.grade && !student.grade.toLowerCase().includes(gradeFilter)) {
            return false;
        }
        
        // –ù–û–í–Ü –§–Ü–õ–¨–¢–†–ò
        // –§—ñ–ª—å—Ç—Ä –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–∏—Ç–∏–Ω–∏
        if (childPhoneFilter && student.phone_child && !student.phone_child.toLowerCase().includes(childPhoneFilter)) {
            return false;
        }
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ –ü–Ü–ë –º–∞—Ç–µ—Ä—ñ
        if (motherNameFilter && student.mother_name && !student.mother_name.toLowerCase().includes(motherNameFilter)) {
            return false;
        }
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –º–∞—Ç–µ—Ä—ñ
        if (motherPhoneFilter && student.phone_mother && !student.phone_mother.toLowerCase().includes(motherPhoneFilter)) {
            return false;
        }
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ –ü–Ü–ë –±–∞—Ç—å–∫–∞
        if (fatherNameFilter && student.father_name && !student.father_name.toLowerCase().includes(fatherNameFilter)) {
            return false;
        }
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –±–∞—Ç—å–∫–∞
        if (fatherPhoneFilter && student.phone_father && !student.phone_father.toLowerCase().includes(fatherPhoneFilter)) {
            return false;
        }
        
        // –§—ñ–ª—å—Ç—Ä–∏ –ø–æ –≥—É—Ä—Ç–∫–∞—Ö
        for (const club of allClubsData) {
            const clubFilter = document.getElementById(`filterClub${club.id}`)?.value;
            if (clubFilter) {
                const isEnrolled = student.enrolledClubs && student.enrolledClubs.includes(club.id);
                if (clubFilter === 'enrolled' && !isEnrolled) {
                    return false;
                }
                if (clubFilter === 'not-enrolled' && isEnrolled) {
                    return false;
                }
            }
        }
        
        return true;
    });
    
    console.log(`üìä –ü–æ–∫–∞–∑–∞–Ω–æ ${filteredStudents.length} –∑ ${allStudentsData.length} —É—á–Ω—ñ–≤`);
    displayStudentsData(filteredStudents);
}

// –í–∏–¥–∞–ª–µ–Ω–Ω—è —É—á–Ω—è –∑ –≥—É—Ä—Ç–∫–∞ (–í–ò–ú–ö–ù–ï–ù–û)
async function removeStudentFromClub(studentId, clubId, studentName, clubName) {
    console.log('‚ö†Ô∏è –§—É–Ω–∫—Ü—ñ—è removeStudentFromClub –≤–∏–º–∫–Ω–µ–Ω–∞. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —ñ–Ω—à—ñ –∑–∞—Å–æ–±–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∑–∞–ø–∏—Å–∞–º–∏ –Ω–∞ –≥—É—Ä—Ç–∫–∏.');
    showAlert('–§—É–Ω–∫—Ü—ñ—è –≤—ñ–¥–ø–∏—Å—É –∑ –≥—É—Ä—Ç–∫—ñ–≤ –≤–∏–º–∫–Ω–µ–Ω–∞ –Ω–∞ —Ü—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ', 'info');
        return;
    }
    
// –î–æ–¥–∞–≤–∞–Ω–Ω—è —É—á–Ω—è –¥–æ –≥—É—Ä—Ç–∫–∞ (–í–ò–ú–ö–ù–ï–ù–û)
async function addStudentToClub(studentId, clubId, studentName, clubName) {
    console.log('‚ö†Ô∏è –§—É–Ω–∫—Ü—ñ—è addStudentToClub –≤–∏–º–∫–Ω–µ–Ω–∞. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —ñ–Ω—à—ñ –∑–∞—Å–æ–±–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∑–∞–ø–∏—Å–∞–º–∏ –Ω–∞ –≥—É—Ä—Ç–∫–∏.');
    showAlert('–§—É–Ω–∫—Ü—ñ—è –∑–∞–ø–∏—Å—É –Ω–∞ –≥—É—Ä—Ç–∫–∏ –≤–∏–º–∫–Ω–µ–Ω–∞ –Ω–∞ —Ü—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ', 'info');
        return;
}

// –î–æ–ø–æ–º—ñ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ —É—á–Ω—ñ–≤ —è–∫—â–æ –≤–æ–Ω–∞ –≤–∏–¥–∏–º–∞
function updateStudentsTableIfVisible() {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤—ñ–¥–∫—Ä–∏—Ç–∞ –≤–∫–ª–∞–¥–∫–∞ —É—á–Ω—ñ–≤
    if (window.location.pathname.includes('/students') && typeof loadStudentsData === 'function') {
        console.log('üîÑ –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é —É—á–Ω—ñ–≤ –ø—ñ—Å–ª—è –∑–º—ñ–Ω —É —Ä–æ–∑–∫–ª–∞–¥—ñ');
        // –ù–µ–≤–µ–ª–∏–∫–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è —á–∞—Å—Ç–∏—Ö –≤–∏–∫–ª–∏–∫—ñ–≤
        setTimeout(() => {
        loadStudentsData();
        }, 300);
    }
}

// =============================================================================
// –°–ï–ö–¶–Ü–Ø: –í–ß–ò–¢–ï–õ–Ü
// =============================================================================

// allTeachersData - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—É –∑–º—ñ–Ω–Ω—É
let allSchedulesData = [];

// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤—á–∏—Ç–µ–ª—ñ–≤ –∑ —É—Å—ñ–º–∞ –∑–≤'—è–∑–∫–∞–º–∏
async function loadTeachersData() {
    console.log('üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤—á–∏—Ç–µ–ª—ñ–≤...');
    try {
        const [teachersResponse, clubsResponse, schedulesResponse] = await Promise.all([
            apiCall('teachers', 'GET'),
            apiCall('clubs', 'GET'),
            apiCall('schedules', 'GET')
        ]);

        allTeachersData = teachersResponse;
        allClubsData = clubsResponse; // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—É –∑–º—ñ–Ω–Ω—É
        allSchedulesData = schedulesResponse;

        console.log('üìä –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ:', {
            teachers: allTeachersData.length,
            clubs: allClubsData.length,
            schedules: allSchedulesData.length
        });

        // –û–±—Ä–æ–±–ª—è—î–º–æ –¥–∞–Ω—ñ –≤—á–∏—Ç–µ–ª—ñ–≤ - –¥–æ–¥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≥—É—Ä—Ç–∫–∏
        allTeachersData.forEach(teacher => {
            teacher.teachingClubs = allSchedulesData
                .filter(schedule => schedule.teacher_id === teacher.id && schedule.active)
                .map(schedule => schedule.club_id);
        });

        buildTeachersTable();
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤—á–∏—Ç–µ–ª—ñ–≤:', error);
        // –ü–æ–º–∏–ª–∫–∞ –≤–∂–µ –ø–æ–∫–∞–∑–∞–Ω–∞ –≤ apiCall, –Ω–µ –¥—É–±–ª—é—î–º–æ
    }
}

// –ü–æ–±—É–¥–æ–≤–∞ –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤ —Ç–∞–±–ª–∏—Ü—ñ –≤—á–∏—Ç–µ–ª—ñ–≤
function buildTeachersTable() {
    const tableHead = document.getElementById('teachersTableHead');
    const tableBody = document.getElementById('teachersTableBody');
    
    if (!tableHead || !tableBody) {
        console.log('üìã –ï–ª–µ–º–µ–Ω—Ç–∏ —Ç–∞–±–ª–∏—Ü—ñ –≤—á–∏—Ç–µ–ª—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ');
        return;
    }
    
    // –ü–ï–†–®–ò–ô –†–Ø–î–û–ö - –ù–ê–ó–í–ò –ö–û–õ–û–ù–û–ö
    let headerHTML = `
        <tr>
            <th class="text-center">–ü–æ–≤–Ω–µ —ñ–º'—è</th>
            <th class="text-center">Telegram</th>
            <th class="text-center">–°—Ç–∞—Ç—É—Å</th>
            <th class="text-center">–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è</th>`;
    
    // –î–æ–¥–∞—î–º–æ –Ω–∞–∑–≤–∏ –≥—É—Ä—Ç–∫—ñ–≤
    allClubsData.forEach(club => {
        headerHTML += `<th class="text-center" title="–í–∏–∫–ª–∞–¥–∞—î –≤ ${club.name}?">${club.name}</th>`;
    });
    
    headerHTML += `<th class="text-center">–î—ñ—ó</th></tr>`;
    
    // –î–†–£–ì–ò–ô –†–Ø–î–û–ö - –§–Ü–õ–¨–¢–†–ò
    headerHTML += `
        <tr class="filter-row">
            <td>
                <input type="text" class="form-control form-control-sm filter-input" id="filterTeacherName" 
                       placeholder="–§—ñ–ª—å—Ç—Ä –ø–æ —ñ–º–µ–Ω—ñ" onkeyup="filterTeachers()">
            </td>
            <td>
                <input type="text" class="form-control form-control-sm filter-input" id="filterTeacherTelegram" 
                       placeholder="–§—ñ–ª—å—Ç—Ä Telegram" onkeyup="filterTeachers()">
            </td>
            <td>
                <select class="form-select form-select-sm filter-select" id="filterTeacherStatus" onchange="filterTeachers()">
                    <option value="">–í—Å—ñ —Å—Ç–∞—Ç—É—Å–∏</option>
                    <option value="active">–ê–∫—Ç–∏–≤–Ω–∏–π</option>
                    <option value="inactive">–ù–µ–∞–∫—Ç–∏–≤–Ω–∏–π</option>
                </select>
            </td>
            <td>
                <input type="date" class="form-control form-control-sm filter-input" id="filterTeacherDate" 
                       onchange="filterTeachers()">
            </td>`;
    
    // –î–æ–¥–∞—î–º–æ —Ñ—ñ–ª—å—Ç—Ä–∏ –¥–ª—è –≥—É—Ä—Ç–∫—ñ–≤
    allClubsData.forEach(club => {
        headerHTML += `
            <td class="text-center">
                <select class="form-select form-select-sm filter-select" id="filterTeacherClub${club.id}" onchange="filterTeachers()">
                    <option value="">–í—Å—ñ</option>
                    <option value="teaching">‚úÖ –¢–∞–∫</option>
                    <option value="not-teaching">‚ùå –ù—ñ</option>
                </select>
            </td>`;
    });
    
    headerHTML += `<td></td></tr>`;
    
    tableHead.innerHTML = headerHTML;
    
    // –ù–∞–ø–æ–≤–Ω—é—î–º–æ –¥–∞–Ω—ñ
    displayTeachersData(allTeachersData);
    
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ sticky scrollbar –¥–ª—è –≤—á–∏—Ç–µ–ª—ñ–≤
    setTimeout(() => initStickyScrollbar('teachersTableContainer'), 100);
}

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤—á–∏—Ç–µ–ª—ñ–≤
function displayTeachersData(teachers) {
    const tableBody = document.getElementById('teachersTableBody');
    
    if (!tableBody) {
        console.log('üìã Tbody –≤—á–∏—Ç–µ–ª—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        return;
    }
    
    if (teachers.length === 0) {
        tableBody.innerHTML = `
            <tr>
                <td colspan="${5 + allClubsData.length}" class="text-center text-muted">
                    <i class="bi bi-person-badge"></i><br>
                    –í—á–∏—Ç–µ–ª—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–∞ –∑–∞–¥–∞–Ω–∏–º–∏ –∫—Ä–∏—Ç–µ—Ä—ñ—è–º–∏
                </td>
            </tr>`;
        return;
    }
    
    let bodyHTML = '';
    
    teachers.forEach(teacher => {
        bodyHTML += `
            <tr ondblclick="editTeacher(${teacher.id})">
                <td><strong>${teacher.full_name}</strong></td>
                <td>
                    ${teacher.tg_username 
                        ? `<i class="bi bi-telegram text-info"></i> @${teacher.tg_username}
                           ${teacher.tg_chat_id ? `<br><small class="text-muted">ID: ${teacher.tg_chat_id}</small>` : ''}`
                        : '<span class="text-muted">–ù–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π</span>'
                    }
                </td>
                <td>
                    <span class="badge ${teacher.active ? 'bg-success' : 'bg-secondary'}">
                        ${teacher.active ? '–ê–∫—Ç–∏–≤–Ω–∏–π' : '–ù–µ–∞–∫—Ç–∏–≤–Ω–∏–π'}
                    </span>
                </td>
                <td>${teacher.created_at ? new Date(teacher.created_at).toLocaleDateString('uk-UA') : '-'}</td>`;
        
        // –î–æ–¥–∞—î–º–æ —Å—Ç–∞—Ç—É—Å–∏ –≥—É—Ä—Ç–∫—ñ–≤
        allClubsData.forEach(club => {
            const isTeaching = teacher.teachingClubs && teacher.teachingClubs.includes(club.id);
            bodyHTML += `<td class="club-status">${isTeaching ? '‚úÖ' : '‚ùå'}</td>`;
        });
        
        bodyHTML += `
                <td>
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-sm btn-outline-primary" 
                                onclick="viewTeacher(${teacher.id})" title="–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏">
                            <i class="bi bi-eye"></i>
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-warning"
                                onclick="editTeacher(${teacher.id})" title="–†–µ–¥–∞–≥—É–≤–∞—Ç–∏">
                            <i class="bi bi-pencil"></i>
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-danger"
                                onclick="deleteTeacher(${teacher.id})" title="–í–∏–¥–∞–ª–∏—Ç–∏">
                            <i class="bi bi-trash"></i>
                        </button>
            </div>
                </td>
            </tr>`;
    });
    
    tableBody.innerHTML = bodyHTML;
}

// –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –≤—á–∏—Ç–µ–ª—ñ–≤
function filterTeachers() {
    console.log('üîç –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –≤—á–∏—Ç–µ–ª—ñ–≤...');
    
    const nameFilter = document.getElementById('filterTeacherName')?.value.toLowerCase().trim() || '';
    const telegramFilter = document.getElementById('filterTeacherTelegram')?.value.toLowerCase().trim() || '';
    const statusFilter = document.getElementById('filterTeacherStatus')?.value || '';
    const dateFilter = document.getElementById('filterTeacherDate')?.value || '';
    
    let filteredTeachers = allTeachersData.filter(teacher => {
        // –§—ñ–ª—å—Ç—Ä –ø–æ —ñ–º–µ–Ω—ñ
        if (nameFilter && !teacher.full_name.toLowerCase().includes(nameFilter)) {
            return false;
        }
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ Telegram
        if (telegramFilter) {
            const telegramText = (teacher.tg_username || '').toLowerCase() + 
                                (teacher.tg_chat_id || '').toString().toLowerCase();
            if (!telegramText.includes(telegramFilter)) {
                return false;
            }
        }
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É
        if (statusFilter) {
            if (statusFilter === 'active' && !teacher.active) return false;
            if (statusFilter === 'inactive' && teacher.active) return false;
        }
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ –¥–∞—Ç—ñ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è
        if (dateFilter && teacher.created_at) {
            const teacherDate = new Date(teacher.created_at).toISOString().split('T')[0];
            if (teacherDate !== dateFilter) {
                return false;
            }
        }
        
        // –§—ñ–ª—å—Ç—Ä–∏ –ø–æ –≥—É—Ä—Ç–∫–∞—Ö
        for (const club of allClubsData) {
            const clubFilter = document.getElementById(`filterTeacherClub${club.id}`)?.value;
            if (clubFilter) {
                const isTeaching = teacher.teachingClubs && teacher.teachingClubs.includes(club.id);
                if (clubFilter === 'teaching' && !isTeaching) {
                    return false;
                }
                if (clubFilter === 'not-teaching' && isTeaching) {
                    return false;
                }
            }
        }
        
        return true;
    });
    
    console.log(`üìä –ü–æ–∫–∞–∑–∞–Ω–æ ${filteredTeachers.length} –∑ ${allTeachersData.length} –≤—á–∏—Ç–µ–ª—ñ–≤`);
    displayTeachersData(filteredTeachers);
}

// =============================================================================
// –°–ï–ö–¶–Ü–Ø: –†–û–ó–ö–õ–ê–î
// =============================================================================

let allSchedulesTableData = [];
let currentScheduleForStudents = null;
let currentAvailableStudents = [];
let currentEnrolledStudentsData = [];

// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ä–æ–∑–∫–ª–∞–¥—É
async function loadSchedulesTableData() {
    console.log('üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ä–æ–∑–∫–ª–∞–¥—É...');
    try {
        const [schedulesResponse, studentsResponse, enrollmentsResponse, clubsResponse, teachersResponse] = await Promise.all([
            apiCall('schedules', 'GET'),
            apiCall('students', 'GET'),
            apiCall('schedule-enrollments', 'GET'),
            apiCall('clubs', 'GET'),
            apiCall('teachers', 'GET')
        ]);

        allSchedulesTableData = schedulesResponse;
        allStudentsData = studentsResponse;
        
        // üîß FIX: –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
        allClubsData = clubsResponse;
        allTeachersData = teachersResponse;
        
        console.log('üìä –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ:', {
            schedules: allSchedulesTableData.length,
            students: allStudentsData.length,
            enrollments: enrollmentsResponse.length,
            clubs: clubsResponse.length,
            teachers: teachersResponse.length
        });
        
        // –õ–æ–≥—É–≤–∞–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –ø–µ—Ä—à–æ–≥–æ —Ä–æ–∑–∫–ª–∞–¥—É –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        if (allSchedulesTableData.length > 0) {
            console.log('üîç –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–æ–∑–∫–ª–∞–¥—É:', {
                first_schedule: allSchedulesTableData[0],
                has_club: !!allSchedulesTableData[0].club,
                has_teacher: !!allSchedulesTableData[0].teacher,
                club_name: allSchedulesTableData[0].club?.name,
                teacher_name: allSchedulesTableData[0].teacher?.full_name
            });
        }

        // –î–æ–¥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–ø–∏—Å–∞–Ω–∏—Ö —É—á–Ω—ñ–≤
        allSchedulesTableData.forEach(schedule => {
            schedule.enrolledCount = enrollmentsResponse.filter(e => e.schedule_id === schedule.id).length;
        });

        buildSchedulesTable();
        populateScheduleFilters();
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ä–æ–∑–∫–ª–∞–¥—É:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ä–æ–∑–∫–ª–∞–¥—É', 'danger');
    }
}

// –ó–∞–ø–æ–≤–Ω–µ–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ —Ä–æ–∑–∫–ª–∞–¥—É
function populateScheduleFilters() {
    console.log('üîß –ó–∞–ø–æ–≤–Ω–µ–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ —Ä–æ–∑–∫–ª–∞–¥—É...');
    
    // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
    const clubsData = allClubsData;
    const teachersData = allTeachersData;
    
    console.log('üìã –î–∞–Ω—ñ –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤:', {
        clubs: clubsData?.length || 0,
        teachers: teachersData?.length || 0
    });
    
    // –ó–∞–ø–æ–≤–Ω—é—î–º–æ —Å–µ–ª–µ–∫—Ç –≥—É—Ä—Ç–∫—ñ–≤
    const clubFilter = document.getElementById('filterScheduleClub');
    if (clubFilter && clubsData && clubsData.length > 0) {
        clubFilter.innerHTML = '<option value="">–í—Å—ñ –≥—É—Ä—Ç–∫–∏</option>';
        clubsData.forEach(club => {
            clubFilter.innerHTML += `<option value="${club.id}">${club.name}</option>`;
        });
        console.log(`‚úÖ –ó–∞–ø–æ–≤–Ω–µ–Ω–æ ${clubsData.length} –≥—É—Ä—Ç–∫—ñ–≤ —É —Ñ—ñ–ª—å—Ç—Ä`);
    } else {
        console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø–æ–≤–Ω–∏—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä –≥—É—Ä—Ç–∫—ñ–≤:', {
            element: !!clubFilter,
            data: !!clubsData,
            length: clubsData?.length
        });
    }
    
    // –ó–∞–ø–æ–≤–Ω—é—î–º–æ —Å–µ–ª–µ–∫—Ç –≤—á–∏—Ç–µ–ª—ñ–≤
    const teacherFilter = document.getElementById('filterScheduleTeacher');
    if (teacherFilter && teachersData && teachersData.length > 0) {
        teacherFilter.innerHTML = '<option value="">–í—Å—ñ –≤—á–∏—Ç–µ–ª—ñ</option>';
        teachersData.forEach(teacher => {
            teacherFilter.innerHTML += `<option value="${teacher.id}">${teacher.full_name}</option>`;
        });
        console.log(`‚úÖ –ó–∞–ø–æ–≤–Ω–µ–Ω–æ ${teachersData.length} –≤—á–∏—Ç–µ–ª—ñ–≤ —É —Ñ—ñ–ª—å—Ç—Ä`);
    } else {
        console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø–æ–≤–Ω–∏—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä –≤—á–∏—Ç–µ–ª—ñ–≤:', {
            element: !!teacherFilter,
            data: !!teachersData,
            length: teachersData?.length
        });
    }
}

// –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —Ä–æ–∑–∫–ª–∞–¥—É
function filterSchedules() {
    const weekdayFilter = document.getElementById('filterScheduleWeekday')?.value || '';
    const timeFilter = document.getElementById('filterScheduleTime')?.value.trim().toLowerCase() || '';
    const clubFilter = document.getElementById('filterScheduleClub')?.value || '';
    const teacherFilter = document.getElementById('filterScheduleTeacher')?.value || '';
    const durationFilter = document.getElementById('filterScheduleDuration')?.value.trim() || '';
    const studentsFilter = document.getElementById('filterScheduleStudents')?.value.trim() || '';
    const statusFilter = document.getElementById('filterScheduleStatus')?.value || '';
    
    console.log('üîç –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —Ä–æ–∑–∫–ª–∞–¥—É:', {
        weekday: weekdayFilter,
        time: timeFilter,
        club: clubFilter,
        teacher: teacherFilter,
        duration: durationFilter,
        students: studentsFilter,
        status: statusFilter
    });
    
    const filteredSchedules = allSchedulesTableData.filter(schedule => {
        // –§—ñ–ª—å—Ç—Ä –ø–æ –¥–Ω—é —Ç–∏–∂–Ω—è
        if (weekdayFilter && schedule.weekday.toString() !== weekdayFilter) {
            return false;
        }
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ —á–∞—Å—É
        if (timeFilter && !schedule.start_time.toLowerCase().includes(timeFilter)) {
            return false;
        }
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ –≥—É—Ä—Ç–∫—É
        if (clubFilter && schedule.club_id.toString() !== clubFilter) {
            return false;
        }
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ –≤—á–∏—Ç–µ–ª—é
        if (teacherFilter && schedule.teacher_id.toString() !== teacherFilter) {
            return false;
        }
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ —Ç—Ä–∏–≤–∞–ª–æ—Å—Ç—ñ
        if (durationFilter) {
            const duration = schedule.club ? schedule.club.duration_min || 60 : 60;
            if (!duration.toString().includes(durationFilter)) {
                return false;
            }
        }
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —É—á–Ω—ñ–≤
        if (studentsFilter) {
            const enrolledCount = schedule.enrolledCount || 0;
            if (!enrolledCount.toString().includes(studentsFilter)) {
                return false;
            }
        }
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É
        if (statusFilter && schedule.active.toString() !== statusFilter) {
            return false;
        }
        
        return true;
    });
    
    console.log(`üìä –ü–æ–∫–∞–∑–∞–Ω–æ ${filteredSchedules.length} –∑ ${allSchedulesTableData.length} —Ä–æ–∑–∫–ª–∞–¥—ñ–≤`);
    displaySchedulesData(filteredSchedules);
}

// –ü–æ–±—É–¥–æ–≤–∞ —Ç–∞–±–ª–∏—Ü—ñ —Ä–æ–∑–∫–ª–∞–¥—É
function buildSchedulesTable() {
    const tableHead = document.getElementById('schedulesTableHead');
    const tableBody = document.getElementById('schedulesTableBody');
    
    if (!tableHead || !tableBody) {
        console.log('üìã –ï–ª–µ–º–µ–Ω—Ç–∏ —Ç–∞–±–ª–∏—Ü—ñ —Ä–æ–∑–∫–ª–∞–¥—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ');
        return;
    }
    
    // –ó–ê–ì–û–õ–û–í–ö–ò –ó –§–Ü–õ–¨–¢–†–ê–ú–ò (–ë–ï–ó –ö–û–õ–û–ù–ö–ò –ì–†–£–ü–ê)
    tableHead.innerHTML = `
        <tr>
            <th class="text-center">–î–µ–Ω—å —Ç–∏–∂–Ω—è</th>
            <th class="text-center">–ß–∞—Å</th>
            <th class="text-center">–ì—É—Ä—Ç–æ–∫</th>
            <th class="text-center">–í—á–∏—Ç–µ–ª—å</th>
            <th class="text-center">–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å</th>
            <th class="text-center">–£—á–Ω—ñ</th>
            <th class="text-center">–°—Ç–∞—Ç—É—Å</th>
            <th class="text-center">–î—ñ—ó</th>
        </tr>
        <tr class="bg-light">
            <td class="p-2">
                <select class="form-select form-select-sm" id="filterScheduleWeekday" onchange="filterSchedules()">
                    <option value="">–í—Å—ñ –¥–Ω—ñ</option>
                    <option value="1">–ü–æ–Ω–µ–¥—ñ–ª–æ–∫</option>
                    <option value="2">–í—ñ–≤—Ç–æ—Ä–æ–∫</option>
                    <option value="3">–°–µ—Ä–µ–¥–∞</option>
                    <option value="4">–ß–µ—Ç–≤–µ—Ä</option>
                    <option value="5">–ü'—è—Ç–Ω–∏—Ü—è</option>
                </select>
            </td>
            <td class="p-2">
                <input type="text" class="form-control form-control-sm" id="filterScheduleTime" 
                       placeholder="–ß–∞—Å" onkeyup="filterSchedules()">
            </td>
            <td class="p-2">
                <select class="form-select form-select-sm" id="filterScheduleClub" onchange="filterSchedules()">
                    <option value="">–í—Å—ñ –≥—É—Ä—Ç–∫–∏</option>
                </select>
            </td>
            <td class="p-2">
                <select class="form-select form-select-sm" id="filterScheduleTeacher" onchange="filterSchedules()">
                    <option value="">–í—Å—ñ –≤—á–∏—Ç–µ–ª—ñ</option>
                </select>
            </td>
            <td class="p-2">
                <input type="text" class="form-control form-control-sm" id="filterScheduleDuration" 
                       placeholder="–•–≤" onkeyup="filterSchedules()">
            </td>
            <td class="p-2">
                <input type="text" class="form-control form-control-sm" id="filterScheduleStudents" 
                       placeholder="–ö-—Ç—å" onkeyup="filterSchedules()">
            </td>
            <td class="p-2">
                <select class="form-select form-select-sm" id="filterScheduleStatus" onchange="filterSchedules()">
                    <option value="">–í—Å—ñ —Å—Ç–∞—Ç—É—Å–∏</option>
                    <option value="true">–ê–∫—Ç–∏–≤–Ω–∏–π</option>
                    <option value="false">–ù–µ–∞–∫—Ç–∏–≤–Ω–∏–π</option>
                </select>
            </td>
            <td class="p-2"></td>
        </tr>`;
    
    displaySchedulesData(allSchedulesTableData);
}

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ä–æ–∑–∫–ª–∞–¥—É
function displaySchedulesData(schedules) {
    const tableBody = document.getElementById('schedulesTableBody');
    
    if (!tableBody) {
        console.log('üìã Tbody —Ä–æ–∑–∫–ª–∞–¥—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        return;
    }
    
    if (schedules.length === 0) {
        tableBody.innerHTML = `
            <tr>
                <td colspan="8" class="text-center text-muted">
                    <i class="bi bi-calendar3"></i><br>
                    –†–æ–∑–∫–ª–∞–¥ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ
                </td>
            </tr>`;
        return;
    }
    
    const weekdays = {
        1: "–ü–æ–Ω–µ–¥—ñ–ª–æ–∫",
        2: "–í—ñ–≤—Ç–æ—Ä–æ–∫", 
        3: "–°–µ—Ä–µ–¥–∞",
        4: "–ß–µ—Ç–≤–µ—Ä",
        5: "–ü'—è—Ç–Ω–∏—Ü—è"
    };
    
    let bodyHTML = '';
    
    schedules.forEach(schedule => {
        bodyHTML += `
            <tr ondblclick="editSchedule(${schedule.id})">
                <td>
                    <span class="badge bg-primary">${weekdays[schedule.weekday] || '–ù–µ–≤—ñ–¥–æ–º–æ'}</span>
                </td>
                <td><strong>${schedule.start_time}</strong></td>
                <td>${schedule.club ? schedule.club.name : '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</td>
                <td>${schedule.teacher ? schedule.teacher.full_name : '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</td>
                <td>${schedule.club ? schedule.club.duration_min || 60 : 60} —Ö–≤</td>
                <td>
                    <button type="button" class="btn btn-sm btn-outline-info" 
                            onclick="manageScheduleStudents(${schedule.id})" title="–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —É—á–Ω—è–º–∏">
                        <i class="bi bi-people"></i> ${schedule.enrolledCount || 0}
                    </button>
                </td>
                <td>
                    <span class="badge ${schedule.active ? 'bg-success' : 'bg-secondary'}">
                        ${schedule.active ? '–ê–∫—Ç–∏–≤–Ω–∏–π' : '–ù–µ–∞–∫—Ç–∏–≤–Ω–∏–π'}
                    </span>
                </td>
                <td>
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-sm btn-outline-primary" 
                                onclick="viewSchedule(${schedule.id})" title="–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏">
                            <i class="bi bi-eye"></i>
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-warning"
                                onclick="editSchedule(${schedule.id})" title="–†–µ–¥–∞–≥—É–≤–∞—Ç–∏">
                            <i class="bi bi-pencil"></i>
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-danger"
                                onclick="deleteSchedule(${schedule.id})" title="–í–∏–¥–∞–ª–∏—Ç–∏">
                            <i class="bi bi-trash"></i>
                        </button>
            </div>
                </td>
            </tr>`;
    });
    
    tableBody.innerHTML = bodyHTML;
}

// –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —É—á–Ω—è–º–∏ –≥—Ä—É–ø–∏
async function manageScheduleStudents(scheduleId) {
    console.log('üë• –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —É—á–Ω—è–º–∏ –¥–ª—è —Ä–æ–∑–∫–ª–∞–¥—É:', scheduleId);
    currentScheduleForStudents = scheduleId;
    
    try {
        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –≤—Å—ñ—Ö —É—á–Ω—ñ–≤, –∑–∞–ø–∏—Å–∞–Ω–∏—Ö –Ω–∞ —Ü–µ–π —Ä–æ–∑–∫–ª–∞–¥, –≥—É—Ä—Ç–∫–∏ —Ç–∞ –∑–∞–ø–∏—Å–∏ –Ω–∞ –≥—É—Ä—Ç–∫–∏
        const [allStudents, enrolledStudents, allClubs, allEnrollments] = await Promise.all([
            apiCall('students', 'GET'),
            apiCall(`schedule-enrollments/${scheduleId}`, 'GET'),
            apiCall('clubs', 'GET'),
            apiCall('enrollments', 'GET')
        ]);
        
        // –î–æ–¥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≥—É—Ä—Ç–∫–∏ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —É—á–Ω—è
        allStudents.forEach(student => {
            const studentEnrollments = allEnrollments.filter(e => e.student_id === student.id);
            student.enrolledClubs = studentEnrollments.map(e => {
                const club = allClubs.find(c => c.id === e.club_id);
                return club ? club.name : '–ù–µ–≤—ñ–¥–æ–º–∏–π –≥—É—Ä—Ç–æ–∫';
            });
        });
        
        const enrolledStudentIds = enrolledStudents.map(e => e.student_id);
        const availableStudents = allStudents.filter(s => !enrolledStudentIds.includes(s.id));
        const enrolledStudentsWithData = allStudents.filter(s => enrolledStudentIds.includes(s.id));
        
        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –¥–ª—è –ø–æ—à—É–∫—É
        currentAvailableStudents = availableStudents;
        currentEnrolledStudentsData = enrolledStudentsWithData;
        
        // –ó–∞–ø–æ–≤–Ω—é—î–º–æ —Å–ø–∏—Å–∫–∏
        displayAvailableStudents(availableStudents);
        displayEnrolledStudents(enrolledStudentsWithData);
        updateStudentCounts();
        
        // –û—á–∏—â–∞—î–º–æ –ø–æ—à—É–∫–æ–≤—ñ –ø–æ–ª—è
        document.getElementById('searchAvailableStudents').value = '';
        document.getElementById('searchEnrolledStudents').value = '';
        
        // –ü–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
        const modal = new bootstrap.Modal(document.getElementById('manageStudentsModal'));
        modal.show();
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —É—á–Ω—ñ–≤:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —É—á–Ω—ñ–≤', 'danger');
    }
}

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —É—á–Ω—ñ–≤ –∑ –ø–æ–≤–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é
function displayAvailableStudents(students) {
    const container = document.getElementById('availableStudentsList');
    
    if (students.length === 0) {
        container.innerHTML = '<p class="text-muted text-center p-4">–í—Å—ñ —É—á–Ω—ñ –≤–∂–µ –∑–∞–ø–∏—Å–∞–Ω—ñ –Ω–∞ —Ü–µ–π —Ä–æ–∑–∫–ª–∞–¥</p>';
        return;
    }
    
    let html = '';
    students.forEach(student => {
        const birthDate = student.birth_date ? new Date(student.birth_date).toLocaleDateString('uk-UA') : '–ù–µ –≤–∫–∞–∑–∞–Ω–æ';
        const enrolledClubs = student.enrolledClubs && student.enrolledClubs.length > 0 ? 
            student.enrolledClubs.join(', ') : '–ù–µ –∑–∞–ø–∏—Å–∞–Ω–∏–π';
        
        html += `
            <div class="card mb-3 student-card" data-student-id="${student.id}">
                <div class="card-body p-3">
                    <div class="d-flex justify-content-between align-items-start">
                        <div class="student-info flex-grow-1">
                            <h6 class="card-title mb-2">
                                <i class="bi bi-person-circle text-primary me-2"></i>
                                ${student.first_name} ${student.last_name}
                            </h6>
                            <div class="student-details small text-muted">
                                <div class="row g-2">
                                    <div class="col-6">
                                        <i class="bi bi-calendar3 me-1"></i>
                                        <strong>–í—ñ–∫:</strong> ${student.age || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
            </div>
                                    <div class="col-6">
                                        <i class="bi bi-book me-1"></i>
                                        <strong>–ö–ª–∞—Å:</strong> ${student.grade || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
                                    </div>
                                    <div class="col-12">
                                        <i class="bi bi-gift me-1"></i>
                                        <strong>–î.–Ω.:</strong> ${birthDate}
                                    </div>
                                    <div class="col-12">
                                        <i class="bi bi-collection me-1"></i>
                                        <strong>–ì—É—Ä—Ç–∫–∏:</strong> 
                                        <span class="text-info">${enrolledClubs}</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <button type="button" class="btn btn-success btn-sm ms-3" 
                                onclick="enrollStudent(${student.id})" title="–î–æ–¥–∞—Ç–∏ –¥–æ –≥—Ä—É–ø–∏">
                            <i class="bi bi-plus-circle"></i>
                        </button>
                    </div>
                </div>
            </div>`;
    });
    
    container.innerHTML = html;
}

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Å–∞–Ω–∏—Ö —É—á–Ω—ñ–≤ –∑ –ø–æ–≤–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é
function displayEnrolledStudents(students) {
    const container = document.getElementById('enrolledStudentsList');
    
    if (students.length === 0) {
        container.innerHTML = '<p class="text-muted text-center p-4">–£—á–Ω—ñ —â–µ –Ω–µ –∑–∞–ø–∏—Å–∞–Ω—ñ –Ω–∞ —Ü–µ–π —Ä–æ–∑–∫–ª–∞–¥</p>';
        return;
    }
    
    let html = '';
    students.forEach(student => {
        const birthDate = student.birth_date ? new Date(student.birth_date).toLocaleDateString('uk-UA') : '–ù–µ –≤–∫–∞–∑–∞–Ω–æ';
        const enrolledClubs = student.enrolledClubs && student.enrolledClubs.length > 0 ? 
            student.enrolledClubs.join(', ') : '–ù–µ –∑–∞–ø–∏—Å–∞–Ω–∏–π';
        
        html += `
            <div class="card mb-3 student-card enrolled-student" data-student-id="${student.id}">
                <div class="card-body p-3">
                    <div class="d-flex justify-content-between align-items-start">
                        <div class="student-info flex-grow-1">
                            <h6 class="card-title mb-2">
                                <i class="bi bi-person-check-fill text-success me-2"></i>
                                ${student.first_name} ${student.last_name}
                            </h6>
                            <div class="student-details small text-muted">
                                <div class="row g-2">
                                    <div class="col-6">
                                        <i class="bi bi-calendar3 me-1"></i>
                                        <strong>–í—ñ–∫:</strong> ${student.age || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
                                    </div>
                                    <div class="col-6">
                                        <i class="bi bi-book me-1"></i>
                                        <strong>–ö–ª–∞—Å:</strong> ${student.grade || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
                                    </div>
                                    <div class="col-12">
                                        <i class="bi bi-gift me-1"></i>
                                        <strong>–î.–Ω.:</strong> ${birthDate}
                                    </div>
                                    <div class="col-12">
                                        <i class="bi bi-collection me-1"></i>
                                        <strong>–ì—É—Ä—Ç–∫–∏:</strong> 
                                        <span class="text-info">${enrolledClubs}</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <button type="button" class="btn btn-danger btn-sm ms-3" 
                                onclick="unenrollStudentById(${student.id})" title="–í–∏–¥–∞–ª–∏—Ç–∏ –∑ –≥—Ä—É–ø–∏">
                            <i class="bi bi-dash-circle"></i>
                        </button>
                    </div>
                </div>
            </div>`;
    });
    
    container.innerHTML = html;
}

// –ó–∞–ø–∏—Å–∞—Ç–∏ —É—á–Ω—è –Ω–∞ —Ä–æ–∑–∫–ª–∞–¥
async function enrollStudent(studentId) {
    if (!currentScheduleForStudents) {
        showAlert('–ü–æ–º–∏–ª–∫–∞: —Ä–æ–∑–∫–ª–∞–¥ –Ω–µ –≤–∏–±—Ä–∞–Ω–æ', 'danger');
        return;
    }
    
    try {
        await apiCall('schedule-enrollments', 'POST', {
            student_id: studentId,
            schedule_id: currentScheduleForStudents
        });
        
        showAlert('–£—á–Ω—è —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–æ', 'success');
        
        // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
        refreshStudentLists();
        
        // –û–Ω–æ–≤–ª—é—î–º–æ –≥–æ–ª–æ–≤–Ω—É —Ç–∞–±–ª–∏—Ü—é
        loadSchedulesTableData();
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Å—É —É—á–Ω—è:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Å—É —É—á–Ω—è', 'danger');
    }
}

// –í–∏–¥–∞–ª–∏—Ç–∏ —É—á–Ω—è –∑ —Ä–æ–∑–∫–ª–∞–¥—É
async function unenrollStudent(enrollmentId) {
    try {
        await apiCall(`schedule-enrollments/${enrollmentId}`, 'DELETE');
        
        showAlert('–£—á–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ', 'success');
        
        // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
        refreshStudentLists();
        
        // –û–Ω–æ–≤–ª—é—î–º–æ –≥–æ–ª–æ–≤–Ω—É —Ç–∞–±–ª–∏—Ü—é
        loadSchedulesTableData();
        
        // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é —É—á–Ω—ñ–≤ —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –º–æ–∂–µ –≤–ø–ª–∏–Ω—É—Ç–∏ –Ω–∞ –∑–∞–ø–∏—Å–∏)
        updateStudentsTableIfVisible();
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —É—á–Ω—è:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —É—á–Ω—è', 'danger');
    }
}

// –í–∏–¥–∞–ª–∏—Ç–∏ —É—á–Ω—è –∑ —Ä–æ–∑–∫–ª–∞–¥—É –∑–∞ ID —É—á–Ω—è
async function unenrollStudentById(studentId) {
    try {
        await apiCall(`schedule-enrollments/student/${studentId}/schedule/${currentScheduleForStudents}`, 'DELETE');
        
        showAlert('–£—á–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ', 'success');
        
        // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
        refreshStudentLists();
        
        // –û–Ω–æ–≤–ª—é—î–º–æ –≥–æ–ª–æ–≤–Ω—É —Ç–∞–±–ª–∏—Ü—é
        loadSchedulesTableData();
        
        // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é —É—á–Ω—ñ–≤ —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –º–æ–∂–µ –≤–ø–ª–∏–Ω—É—Ç–∏ –Ω–∞ –∑–∞–ø–∏—Å–∏)
        updateStudentsTableIfVisible();
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —É—á–Ω—è:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —É—á–Ω—è', 'danger');
    }
}

// –ü–æ—à—É–∫ —É—á–Ω—ñ–≤
function searchStudents(type) {
    const searchValue = type === 'available' ? 
        document.getElementById('searchAvailableStudents').value.trim().toLowerCase() :
        document.getElementById('searchEnrolledStudents').value.trim().toLowerCase();
    
    const students = type === 'available' ? currentAvailableStudents : currentEnrolledStudentsData;
    
    if (!searchValue) {
        // –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ—Ö —É—á–Ω—ñ–≤
        if (type === 'available') {
            displayAvailableStudents(students);
        } else {
            displayEnrolledStudents(students);
        }
        return;
    }
    
    // –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —É—á–Ω—ñ–≤
    const filteredStudents = students.filter(student => {
        const fullName = `${student.first_name} ${student.last_name}`.toLowerCase();
        const grade = (student.grade || '').toLowerCase();
        const age = (student.age || '').toString();
        const clubs = student.enrolledClubs ? student.enrolledClubs.join(' ').toLowerCase() : '';
        
        return fullName.includes(searchValue) ||
               grade.includes(searchValue) ||
               age.includes(searchValue) ||
               clubs.includes(searchValue);
    });
    
    // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
    if (type === 'available') {
        displayAvailableStudents(filteredStudents);
    } else {
        displayEnrolledStudents(filteredStudents);
    }
    
    console.log(`üîç –ó–Ω–∞–π–¥–µ–Ω–æ ${filteredStudents.length} –∑ ${students.length} —É—á–Ω—ñ–≤ (${type})`);
}

// –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫—ñ–≤ —É—á–Ω—ñ–≤
function updateStudentCounts() {
    const availableCount = document.getElementById('availableCount');
    const enrolledCount = document.getElementById('enrolledCount');
    
    if (availableCount) {
        availableCount.textContent = currentAvailableStudents.length;
    }
    
    if (enrolledCount) {
        enrolledCount.textContent = currentEnrolledStudentsData.length;
    }
}

// –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—ñ–≤ —É—á–Ω—ñ–≤ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
async function refreshStudentLists() {
    if (!currentScheduleForStudents) {
        console.warn('‚ö†Ô∏è –†–æ–∑–∫–ª–∞–¥ –Ω–µ –≤–∏–±—Ä–∞–Ω–æ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—ñ–≤');
        return;
    }
    
    try {
        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω—ñ –¥–∞–Ω—ñ
        const [allStudents, enrolledStudents, allClubs, allEnrollments] = await Promise.all([
            apiCall('students', 'GET'),
            apiCall(`schedule-enrollments/${currentScheduleForStudents}`, 'GET'),
            apiCall('clubs', 'GET'),
            apiCall('enrollments', 'GET')
        ]);
        
        // –î–æ–¥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≥—É—Ä—Ç–∫–∏ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —É—á–Ω—è
        allStudents.forEach(student => {
            const studentEnrollments = allEnrollments.filter(e => e.student_id === student.id);
            student.enrolledClubs = studentEnrollments.map(e => {
                const club = allClubs.find(c => c.id === e.club_id);
                return club ? club.name : '–ù–µ–≤—ñ–¥–æ–º–∏–π –≥—É—Ä—Ç–æ–∫';
            });
        });
        
        const enrolledStudentIds = enrolledStudents.map(e => e.student_id);
        const availableStudents = allStudents.filter(s => !enrolledStudentIds.includes(s.id));
        const enrolledStudentsWithData = allStudents.filter(s => enrolledStudentIds.includes(s.id));
        
        // –û–Ω–æ–≤–ª—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
        currentAvailableStudents = availableStudents;
        currentEnrolledStudentsData = enrolledStudentsWithData;
        
        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ—à—É–∫—É
        const searchAvailable = document.getElementById('searchAvailableStudents')?.value || '';
        const searchEnrolled = document.getElementById('searchEnrolledStudents')?.value || '';
        
        // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω—ñ —Å–ø–∏—Å–∫–∏ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –ø–æ—à—É–∫—É
        if (searchAvailable) {
            searchStudents('available');
        } else {
            displayAvailableStudents(availableStudents);
        }
        
        if (searchEnrolled) {
            searchStudents('enrolled');
        } else {
            displayEnrolledStudents(enrolledStudentsWithData);
        }
        
        // –û–Ω–æ–≤–ª—é—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∏
        updateStudentCounts();
        
        console.log('üîÑ –°–ø–∏—Å–∫–∏ —É—á–Ω—ñ–≤ –æ–Ω–æ–≤–ª–µ–Ω–æ:', {
            available: availableStudents.length,
            enrolled: enrolledStudentsWithData.length
        });
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—ñ–≤ —É—á–Ω—ñ–≤:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—ñ–≤ —É—á–Ω—ñ–≤', 'danger');
    }
}

// =============================================================================
// –°–ï–ö–¶–Ü–Ø: –ì–£–†–¢–ö–ò
// =============================================================================

let allClubsTableData = [];

// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö –¥–∞–Ω–∏—Ö –¥–ª—è —Ç–∞–±–ª–∏—Ü—ñ –≥—É—Ä—Ç–∫—ñ–≤
async function loadClubsData() {
    try {
        showLoading(true);
        console.log('üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≥—É—Ä—Ç–∫—ñ–≤...');
        
        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ –≥—É—Ä—Ç–∫—ñ–≤
        const clubs = await apiCall('clubs');
        
        allClubsTableData = clubs;
        
        console.log(`üìä –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: ${clubs.length} –≥—É—Ä—Ç–∫—ñ–≤`);
        
        buildClubsTable();
        showLoading(false);
        
    } catch (error) {
        showLoading(false);
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≥—É—Ä—Ç–∫—ñ–≤:', error);
        // –ü–æ–º–∏–ª–∫–∞ –≤–∂–µ –ø–æ–∫–∞–∑–∞–Ω–∞ –≤ apiCall, –Ω–µ –¥—É–±–ª—é—î–º–æ
    }
}

// –ü–æ–±—É–¥–æ–≤–∞ –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤ —Ç–∞–±–ª–∏—Ü—ñ –≥—É—Ä—Ç–∫—ñ–≤ –∑ —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏
function buildClubsTable() {
    const tableHead = document.getElementById('clubsTableHead');
    const tableBody = document.getElementById('clubsTableBody');
    
    // –ü–ï–†–®–ò–ô –†–Ø–î–û–ö - –ù–ê–ó–í–ò –ö–û–õ–û–ù–û–ö
    let headerHTML = `
        <tr>
            <th class="text-center">–ù–∞–∑–≤–∞ –≥—É—Ä—Ç–∫–∞</th>
            <th class="text-center">–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å</th>
            <th class="text-center">–õ–æ–∫–∞—Ü—ñ—è</th>
            <th class="text-center">–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è</th>
            <th class="text-center">–î—ñ—ó</th>
        </tr>`;
    
    // –î–†–£–ì–ò–ô –†–Ø–î–û–ö - –§–Ü–õ–¨–¢–†–ò (–≤ —Å—Ç–∏–ª—ñ —Ç–∞–±–ª–∏—Ü—ñ —É—á–Ω—ñ–≤)
    headerHTML += `
        <tr class="filter-row">
            <td>
                <input type="text" class="form-control form-control-sm filter-input" id="filterClubName" 
                       placeholder="–§—ñ–ª—å—Ç—Ä –ø–æ –Ω–∞–∑–≤—ñ" onkeyup="filterClubs()">
            </td>
            <td>
                <input type="text" class="form-control form-control-sm filter-input" id="filterClubDuration" 
                       placeholder="–§—ñ–ª—å—Ç—Ä –ø–æ —Ç—Ä–∏–≤–∞–ª–æ—Å—Ç—ñ" onkeyup="filterClubs()">
            </td>
            <td>
                <input type="text" class="form-control form-control-sm filter-input" id="filterClubLocation" 
                       placeholder="–§—ñ–ª—å—Ç—Ä –ø–æ –ª–æ–∫–∞—Ü—ñ—ó" onkeyup="filterClubs()">
            </td>
            <td>
                <input type="date" class="form-control form-control-sm filter-input" id="filterClubDate" 
                       onchange="filterClubs()">
            </td>
            <td></td>
        </tr>`;
    
    tableHead.innerHTML = headerHTML;
    
    // –ù–∞–ø–æ–≤–Ω—é—î–º–æ –¥–∞–Ω—ñ
    displayClubsData(allClubsTableData);
}

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≥—É—Ä—Ç–∫—ñ–≤
function displayClubsData(clubs) {
    const tableBody = document.getElementById('clubsTableBody');
    
    if (clubs.length === 0) {
        tableBody.innerHTML = `
            <tr>
                <td colspan="5" class="text-center text-muted">
                    <i class="bi bi-collection"></i><br>
                    –ì—É—Ä—Ç–∫—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–∞ –∑–∞–¥–∞–Ω–∏–º–∏ –∫—Ä–∏—Ç–µ—Ä—ñ—è–º–∏
                </td>
            </tr>`;
        return;
    }
    
    let bodyHTML = '';
    clubs.forEach(club => {
        const createdDate = club.created_at ? 
            new Date(club.created_at).toLocaleDateString('uk-UA') : '-';
        
        bodyHTML += `
            <tr ondblclick="editClub(${club.id})">
                <td><strong>${club.name}</strong></td>
                <td>
                    <span class="badge bg-info">${club.duration_min} —Ö–≤</span>
                </td>
                <td>
                    <i class="bi bi-geo-alt"></i> ${club.location}
                </td>
                <td>${createdDate}</td>
                <td>
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-sm btn-outline-primary" 
                                onclick="viewClub(${club.id})" title="–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏">
                            <i class="bi bi-eye"></i>
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-warning"
                                onclick="editClub(${club.id})" title="–†–µ–¥–∞–≥—É–≤–∞—Ç–∏">
                            <i class="bi bi-pencil"></i>
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-danger"
                                onclick="deleteClub(${club.id})" title="–í–∏–¥–∞–ª–∏—Ç–∏">
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                </td>
            </tr>`;
    });
    
    tableBody.innerHTML = bodyHTML;
}

// –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –≥—É—Ä—Ç–∫—ñ–≤
function filterClubs() {
    const nameFilter = document.getElementById('filterClubName').value.toLowerCase().trim();
    const durationFilter = document.getElementById('filterClubDuration').value.toLowerCase().trim();
    const locationFilter = document.getElementById('filterClubLocation').value.toLowerCase().trim();
    const dateFilter = document.getElementById('filterClubDate').value.trim();
    
    const filteredClubs = allClubsTableData.filter(club => {
        // –§—ñ–ª—å—Ç—Ä –ø–æ –Ω–∞–∑–≤—ñ
        const nameMatch = !nameFilter || club.name.toLowerCase().includes(nameFilter);
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ —Ç—Ä–∏–≤–∞–ª–æ—Å—Ç—ñ
        const durationMatch = !durationFilter || 
            club.duration_min.toString().includes(durationFilter) ||
            `${club.duration_min} —Ö–≤`.toLowerCase().includes(durationFilter);
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ –ª–æ–∫–∞—Ü—ñ—ó
        const locationMatch = !locationFilter || club.location.toLowerCase().includes(locationFilter);
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ –¥–∞—Ç—ñ
        let dateMatch = true;
        if (dateFilter) {
            const clubDate = new Date(club.created_at);
            const filterDate = new Date(dateFilter);
            dateMatch = clubDate.toDateString() === filterDate.toDateString();
        }
        
        return nameMatch && durationMatch && locationMatch && dateMatch;
    });
    
    console.log(`üîç –ó–Ω–∞–π–¥–µ–Ω–æ ${filteredClubs.length} –∑ ${allClubsTableData.length} –≥—É—Ä—Ç–∫—ñ–≤ –∑–∞ –∫—Ä–∏—Ç–µ—Ä—ñ—è–º–∏`);
    displayClubsData(filteredClubs);
}

// ‚úÖ –ó–∞–≥–ª—É—à–∫–∏ –≤–∏–¥–∞–ª–µ–Ω–æ - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ä–æ–±–æ—á—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –Ω–∞ —Ä—è–¥–∫–∞—Ö 396-520

// ==================== –Ü–ú–ü–û–†–¢ –£–ß–ù–Ü–í ====================

// –°–∫–∞—á—É–≤–∞–Ω–Ω—è —à–∞–±–ª–æ–Ω—É Excel
async function downloadStudentsTemplate() {
    try {
        showLoading(true);
        
        const response = await fetch('/api/students/template/download');
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'shablon_uchniv.xlsx';
        document.body.appendChild(a);
        a.click();
        window.URL.revokeObjectURL(url);
        document.body.removeChild(a);
        
        showAlert('–®–∞–±–ª–æ–Ω Excel —É—Å–ø—ñ—à–Ω–æ —Å–∫–∞—á–∞–Ω–æ!', 'success');
        
    } catch (error) {
        console.error('Error downloading template:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–∫–∞—á—É–≤–∞–Ω–Ω—ñ —à–∞–±–ª–æ–Ω—É: ' + error.message, 'danger');
    } finally {
        showLoading(false);
    }
}

// –Ü–º–ø–æ—Ä—Ç —É—á–Ω—ñ–≤ –∑ Excel —Ñ–∞–π–ª—É
async function importStudents() {
    const fileInput = document.getElementById('excelFile');
    const skipDuplicates = document.getElementById('skipDuplicates').checked;
    
    if (!fileInput.files.length) {
        showAlert('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–±–µ—Ä—ñ—Ç—å Excel —Ñ–∞–π–ª –¥–ª—è —ñ–º–ø–æ—Ä—Ç—É', 'warning');
        return;
    }
    
    const file = fileInput.files[0];
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª—É
    if (!file.name.endsWith('.xlsx') && !file.name.endsWith('.xls')) {
        showAlert('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–±–µ—Ä—ñ—Ç—å —Ñ–∞–π–ª Excel (.xlsx –∞–±–æ .xls)', 'warning');
        return;
    }
    
    try {
        // –ü–æ–∫–∞–∑—É—î–º–æ –ø—Ä–æ–≥—Ä–µ—Å
        showImportProgress(true);
        updateImportProgress(10, '–ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ —ñ–º–ø–æ—Ä—Ç—É...');
        
        // –°—Ç–≤–æ—Ä—é—î–º–æ FormData
        const formData = new FormData();
        formData.append('file', file);
        formData.append('skip_duplicates', skipDuplicates);
        
        updateImportProgress(30, '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É...');
        
        // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–ø–∏—Ç
        const response = await fetch('/api/students/import', {
            method: 'POST',
            body: formData
        });
        
        updateImportProgress(70, '–û–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö...');
        
        if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.detail || '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–º–ø–æ—Ä—Ç—ñ —Ñ–∞–π–ª—É');
        }
        
        const result = await response.json();
        updateImportProgress(100, '–ó–∞–≤–µ—Ä—à–µ–Ω–æ!');
        
        // –ü–æ–∫–∞–∑—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
        showImportResults(result);
        
        // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é —É—á–Ω—ñ–≤
        if (result.created_count > 0) {
            await loadStudentsData();
        }
        
    } catch (error) {
        console.error('Error importing students:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–º–ø–æ—Ä—Ç—ñ —É—á–Ω—ñ–≤: ' + error.message, 'danger');
        hideImportProgress();
    }
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ –ø—Ä–æ–≥—Ä–µ—Å —ñ–º–ø–æ—Ä—Ç—É
function showImportProgress(show = true) {
    const progressDiv = document.getElementById('importProgress');
    const resultsDiv = document.getElementById('importResults');
    const importBtn = document.getElementById('importBtn');
    
    if (show) {
        progressDiv.style.display = 'block';
        resultsDiv.style.display = 'none';
        importBtn.disabled = true;
        importBtn.innerHTML = '<i class="bi bi-hourglass-split"></i> –Ü–º–ø–æ—Ä—Ç—É—î–º–æ...';
    } else {
        progressDiv.style.display = 'none';
        importBtn.disabled = false;
        importBtn.innerHTML = '<i class="bi bi-cloud-upload"></i> –Ü–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏';
    }
}

// –û–Ω–æ–≤–∏—Ç–∏ –ø—Ä–æ–≥—Ä–µ—Å —ñ–º–ø–æ—Ä—Ç—É
function updateImportProgress(percent, status) {
    const progressBar = document.querySelector('#importProgress .progress-bar');
    const statusDiv = document.getElementById('importStatus');
    
    progressBar.style.width = percent + '%';
    progressBar.setAttribute('aria-valuenow', percent);
    statusDiv.textContent = status;
}

// –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ –ø—Ä–æ–≥—Ä–µ—Å
function hideImportProgress() {
    showImportProgress(false);
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ —ñ–º–ø–æ—Ä—Ç—É
function showImportResults(result) {
    const resultsDiv = document.getElementById('importResults');
    const summaryDiv = document.getElementById('importSummary');
    
    let summaryHTML = `
        <p><strong>–°—Ç–≤–æ—Ä–µ–Ω–æ –Ω–æ–≤–∏—Ö —É—á–Ω—ñ–≤:</strong> ${result.created_count}</p>
        <p><strong>–ü—Ä–æ–ø—É—â–µ–Ω–æ –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤:</strong> ${result.skipped_count}</p>
    `;
    
    if (result.errors && result.errors.length > 0) {
        summaryHTML += `
            <p><strong>–ü–æ–º–∏–ª–∫–∏:</strong></p>
            <ul class="mb-0">
                ${result.errors.map(error => `<li>${error}</li>`).join('')}
            </ul>
        `;
        
        // –ó–º—ñ–Ω—é—î–º–æ –∫–ª–∞—Å alert –Ω–∞ warning —è–∫—â–æ —î –ø–æ–º–∏–ª–∫–∏
        resultsDiv.querySelector('.alert').className = 'alert alert-warning';
    }
    
    summaryDiv.innerHTML = summaryHTML;
    resultsDiv.style.display = 'block';
    hideImportProgress();
    
    // –ü–æ–∫–∞–∑—É—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    if (result.success) {
        showAlert(result.message, result.errors.length > 0 ? 'warning' : 'success');
    }
}

// ==================== TG –ë–û–¢ –£–ü–†–ê–í–õ–Ü–ù–ù–Ø ====================

// –ì–ª–æ–±–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ –¥–ª—è –±–æ—Ç—É
let allBotSchedules = [];
let allAvailableSchedules = [];

// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –±–æ—Ç—É
async function loadBotData() {
    try {
        showLoading(true);
        
        const [botSchedules, availableSchedules] = await Promise.all([
            apiCall('bot/schedules'),
            apiCall('bot/available-schedules')
        ]);
        
        allBotSchedules = botSchedules;
        allAvailableSchedules = availableSchedules;
        
        displayBotSchedules(allBotSchedules);
        updateBotStatistics();
        populateBotFilters();
        
    } catch (error) {
        console.error('Error loading bot data:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –±–æ—Ç—É: ' + error.message, 'danger');
    } finally {
        showLoading(false);
    }
}

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–æ—Ç—É
function updateBotStatistics() {
    const activeCount = allBotSchedules.filter(bs => bs.enabled).length;
    const disabledCount = allBotSchedules.filter(bs => !bs.enabled).length;
    const totalSchedules = allAvailableSchedules.length;
    const withoutBotCount = allAvailableSchedules.filter(s => !s.has_bot_schedule).length;
    
    document.getElementById('activeCount').textContent = activeCount;
    document.getElementById('disabledCount').textContent = disabledCount;
    document.getElementById('totalSchedules').textContent = totalSchedules;
    document.getElementById('withoutBotCount').textContent = withoutBotCount;
}

// –ó–∞–ø–æ–≤–Ω–µ–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
function populateBotFilters() {
    const clubSelect = document.getElementById('filterClub');
    const teacherSelect = document.getElementById('filterTeacher');
    
    // –û—á–∏—â–∞—î–º–æ —Ñ—ñ–ª—å—Ç—Ä–∏
    clubSelect.innerHTML = '<option value="">–í—Å—ñ –≥—É—Ä—Ç–∫–∏</option>';
    teacherSelect.innerHTML = '<option value="">–í—Å—ñ –≤—á–∏—Ç–µ–ª—ñ</option>';
    
    // –£–Ω—ñ–∫–∞–ª—å–Ω—ñ –≥—É—Ä—Ç–∫–∏ —Ç–∞ –≤—á–∏—Ç–µ–ª—ñ
    const clubs = [...new Set(allBotSchedules.map(bs => bs.schedule.club_name))].sort();
    const teachers = [...new Set(allBotSchedules.map(bs => bs.schedule.teacher_name))].sort();
    
    clubs.forEach(club => {
        const option = document.createElement('option');
        option.value = club;
        option.textContent = club;
        clubSelect.appendChild(option);
    });
    
    teachers.forEach(teacher => {
        const option = document.createElement('option');
        option.value = teacher;
        option.textContent = teacher;
        teacherSelect.appendChild(option);
    });
}

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—Å–∏–ª–æ–∫ –±–æ—Ç—É
function displayBotSchedules(botSchedules) {
    const tableBody = document.getElementById('botSchedulesTableBody');
    
    if (botSchedules.length === 0) {
        tableBody.innerHTML = `
            <tr>
                <td colspan="7" class="text-center text-muted">
                    <i class="bi bi-robot"></i> –†–æ–∑—Å–∏–ª–∫–∏ –±–æ—Ç—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
                </td>
            </tr>
        `;
        return;
    }
    
    const weekdays = ['', '–ü–æ–Ω–µ–¥—ñ–ª–æ–∫', '–í—ñ–≤—Ç–æ—Ä–æ–∫', '–°–µ—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä', "–ü'—è—Ç–Ω–∏—Ü—è"];
    
    let bodyHTML = '';
    botSchedules.forEach(botSchedule => {
        const schedule = botSchedule.schedule;
        const statusClass = botSchedule.enabled ? 'success' : 'warning';
        const statusIcon = botSchedule.enabled ? 'check-circle' : 'pause-circle';
        
        bodyHTML += `
            <tr>
                <td>${schedule.club_name}</td>
                <td>${schedule.teacher_name}</td>
                <td>
                    <div>${weekdays[schedule.weekday]}</div>
                    <small class="text-muted">${schedule.start_time}</small>
                </td>
                <td>${schedule.group_name || '-'}</td>
                <td>
                    <span class="badge bg-info">${botSchedule.notification_time_description}</span>
                </td>
                <td>
                    <span class="badge bg-${statusClass}">
                        <i class="bi bi-${statusIcon}"></i> ${botSchedule.status_description}
                    </span>
                </td>
                <td>
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-sm btn-outline-primary" 
                                onclick="viewBotSchedule(${botSchedule.id})" title="–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏">
                            <i class="bi bi-eye"></i>
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-warning"
                                onclick="editBotSchedule(${botSchedule.id})" title="–†–µ–¥–∞–≥—É–≤–∞—Ç–∏">
                            <i class="bi bi-pencil"></i>
                        </button>
                        <button type="button" class="btn btn-sm ${botSchedule.enabled ? 'btn-outline-warning' : 'btn-outline-success'}"
                                onclick="toggleBotSchedule(${botSchedule.id})" title="${botSchedule.enabled ? '–í–∏–º–∫–Ω—É—Ç–∏' : '–£–≤—ñ–º–∫–Ω—É—Ç–∏'}">
                            <i class="bi bi-${botSchedule.enabled ? 'pause' : 'play'}"></i>
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-danger"
                                onclick="deleteBotSchedule(${botSchedule.id})" title="–í–∏–¥–∞–ª–∏—Ç–∏">
                            <i class="bi bi-trash"></i>
                        </button>
            </div>
                </td>
            </tr>
        `;
    });
    
    tableBody.innerHTML = bodyHTML;
}

// –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —Ä–æ–∑—Å–∏–ª–æ–∫ –±–æ—Ç—É
function filterBotSchedules() {
    const statusFilter = document.getElementById('filterStatus').value;
    const clubFilter = document.getElementById('filterClub').value.toLowerCase();
    const teacherFilter = document.getElementById('filterTeacher').value.toLowerCase();
    const weekdayFilter = document.getElementById('filterWeekday').value;
    
    const filteredSchedules = allBotSchedules.filter(botSchedule => {
        const schedule = botSchedule.schedule;
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É
        if (statusFilter) {
            if (statusFilter === 'enabled' && !botSchedule.enabled) return false;
            if (statusFilter === 'disabled' && botSchedule.enabled) return false;
        }
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ –≥—É—Ä—Ç–∫—É
        if (clubFilter && !schedule.club_name.toLowerCase().includes(clubFilter)) return false;
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ –≤—á–∏—Ç–µ–ª—é
        if (teacherFilter && !schedule.teacher_name.toLowerCase().includes(teacherFilter)) return false;
        
        // –§—ñ–ª—å—Ç—Ä –ø–æ –¥–Ω—é —Ç–∏–∂–Ω—è
        if (weekdayFilter && schedule.weekday.toString() !== weekdayFilter) return false;
        
        return true;
    });
    
    displayBotSchedules(filteredSchedules);
}

// –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª–∫–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ä–æ–∑—Å–∏–ª–∫–∏
async function openAddBotScheduleModal() {
    try {
        showLoading(true);
        
        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ —Ä–æ–∑–∫–ª–∞–¥–∏ –±–µ–∑ —Ä–æ–∑—Å–∏–ª–æ–∫
        const availableSchedules = allAvailableSchedules.filter(s => !s.has_bot_schedule);
        
        if (availableSchedules.length === 0) {
            showAlert('–í—Å—ñ –∞–∫—Ç–∏–≤–Ω—ñ —Ä–æ–∑–∫–ª–∞–¥–∏ –≤–∂–µ –º–∞—é—Ç—å –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ —Ä–æ–∑—Å–∏–ª–∫–∏ –±–æ—Ç—É', 'info');
            return;
        }
        
        const scheduleSelect = document.getElementById('scheduleSelect');
        scheduleSelect.innerHTML = '<option value="">–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–∫–ª–∞–¥</option>';
        
        const weekdays = ['', '–ü–æ–Ω–µ–¥—ñ–ª–æ–∫', '–í—ñ–≤—Ç–æ—Ä–æ–∫', '–°–µ—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä', "–ü'—è—Ç–Ω–∏—Ü—è"];
        
        availableSchedules.forEach(schedule => {
            const option = document.createElement('option');
            option.value = schedule.id;
            option.textContent = `${schedule.club_name} - ${schedule.teacher_name} (${weekdays[schedule.weekday]} ${schedule.start_time})`;
            scheduleSelect.appendChild(option);
        });
        
        // –û—á–∏—â–∞—î–º–æ —Ñ–æ—Ä–º—É
        document.getElementById('addBotScheduleForm').reset();
        document.getElementById('offsetMinutes').value = '0';
        document.getElementById('enabledCheck').checked = true;
        
        const modal = new bootstrap.Modal(document.getElementById('addBotScheduleModal'));
        modal.show();
        
    } catch (error) {
        console.error('Error opening add bot schedule modal:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª–∫–∏: ' + error.message, 'danger');
    } finally {
        showLoading(false);
    }
}

// –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–æ–≤–æ—ó —Ä–æ–∑—Å–∏–ª–∫–∏ –±–æ—Ç—É
async function saveBotSchedule() {
    const form = document.getElementById('addBotScheduleForm');
    const formData = new FormData(form);
    
    const scheduleId = formData.get('scheduleId');
    if (!scheduleId) {
        showAlert('–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–∫–ª–∞–¥', 'warning');
        return;
    }
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∂–∏–º —á–∞—Å—É
    const exactMode = document.getElementById('exactMode').checked;
    let offsetMinutes = 0;
    let customTime = null;
    
    if (exactMode) {
        // –¢–æ—á–Ω–∏–π —á–∞—Å
        customTime = document.getElementById('customTime').value;
        if (!customTime) {
            showAlert('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å —Ç–æ—á–Ω–∏–π —á–∞—Å —Ä–æ–∑—Å–∏–ª–∫–∏', 'warning');
            return;
        }
    } else {
        // –í—ñ–¥–Ω–æ—Å–Ω–∏–π —á–∞—Å
    const customOffset = document.getElementById('customOffset').value;
        offsetMinutes = customOffset ? parseInt(customOffset) : parseInt(formData.get('offsetMinutes') || '0');
    }
    
    const botScheduleData = {
        schedule_id: parseInt(scheduleId),
        enabled: document.getElementById('enabledCheck').checked,
        offset_minutes: offsetMinutes,
        custom_time: customTime,
        custom_message: formData.get('customMessage') || null
    };
    
    try {
        showLoading(true);
        await apiCall('bot/schedules', 'POST', botScheduleData);
        
        bootstrap.Modal.getInstance(document.getElementById('addBotScheduleModal')).hide();
        showAlert('–†–æ–∑—Å–∏–ª–∫—É –±–æ—Ç—É —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ', 'success');
        
        // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ
        await loadBotData();
        
    } catch (error) {
        console.error('Error saving bot schedule:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–æ–∑—Å–∏–ª–∫–∏: ' + error.message, 'danger');
    } finally {
        showLoading(false);
    }
}

// –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Ä–æ–∑—Å–∏–ª–∫–∏ –±–æ—Ç—É
async function editBotSchedule(botScheduleId) {
    try {
        showLoading(true);
        
        const botSchedule = await apiCall(`bot/schedules/${botScheduleId}`);
        
        document.getElementById('editBotScheduleId').value = botSchedule.id;
        document.getElementById('editCustomMessage').value = botSchedule.custom_message || '';
        document.getElementById('editEnabledCheck').checked = botSchedule.enabled;
        
        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ä–µ–∂–∏–º —á–∞—Å—É —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
        if (botSchedule.custom_time) {
            // –¢–æ—á–Ω–∏–π —á–∞—Å
            document.getElementById('editExactMode').checked = true;
            document.getElementById('editCustomTime').value = botSchedule.custom_time;
            document.getElementById('editOffsetMinutes').value = '0';
            document.getElementById('editCustomOffset').value = '';
            toggleEditTimeMode(); // –ü–æ–∫–∞–∑—É—î–º–æ —Å–µ–∫—Ü—ñ—é —Ç–æ—á–Ω–æ–≥–æ —á–∞—Å—É
        } else {
            // –í—ñ–¥–Ω–æ—Å–Ω–∏–π —á–∞—Å
            document.getElementById('editOffsetMode').checked = true;
            document.getElementById('editOffsetMinutes').value = botSchedule.offset_minutes.toString();
            document.getElementById('editCustomOffset').value = '';
            document.getElementById('editCustomTime').value = '';
            toggleEditTimeMode(); // –ü–æ–∫–∞–∑—É—î–º–æ —Å–µ–∫—Ü—ñ—é offset
        }
        
        // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ä–æ–∑–∫–ª–∞–¥
        const weekdays = ['', '–ü–æ–Ω–µ–¥—ñ–ª–æ–∫', '–í—ñ–≤—Ç–æ—Ä–æ–∫', '–°–µ—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä', "–ü'—è—Ç–Ω–∏—Ü—è"];
        document.getElementById('scheduleInfo').innerHTML = `
            <strong>${botSchedule.schedule.club_name}</strong> - ${botSchedule.schedule.teacher_name}<br>
            <small class="text-muted">${weekdays[botSchedule.schedule.weekday]} –æ ${botSchedule.schedule.start_time}</small>
        `;
        
        const modal = new bootstrap.Modal(document.getElementById('editBotScheduleModal'));
        modal.show();
        
    } catch (error) {
        console.error('Error loading bot schedule for edit:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—Å–∏–ª–∫–∏: ' + error.message, 'danger');
    } finally {
        showLoading(false);
    }
}

// –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–æ–∑—Å–∏–ª–∫–∏ –±–æ—Ç—É
async function updateBotSchedule() {
    const botScheduleId = document.getElementById('editBotScheduleId').value;
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∂–∏–º —á–∞—Å—É
    const exactMode = document.getElementById('editExactMode').checked;
    let offsetMinutes = 0;
    let customTime = null;
    
    if (exactMode) {
        // –¢–æ—á–Ω–∏–π —á–∞—Å
        customTime = document.getElementById('editCustomTime').value;
        if (!customTime) {
            showAlert('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å —Ç–æ—á–Ω–∏–π —á–∞—Å —Ä–æ–∑—Å–∏–ª–∫–∏', 'warning');
            return;
        }
    } else {
        // –í—ñ–¥–Ω–æ—Å–Ω–∏–π —á–∞—Å
    const customOffset = document.getElementById('editCustomOffset').value;
        offsetMinutes = customOffset ? parseInt(customOffset) : parseInt(document.getElementById('editOffsetMinutes').value);
    }
    
    const updateData = {
        enabled: document.getElementById('editEnabledCheck').checked,
        offset_minutes: offsetMinutes,
        custom_time: customTime,
        custom_message: document.getElementById('editCustomMessage').value || null
    };
    
    try {
        showLoading(true);
        await apiCall(`bot/schedules/${botScheduleId}`, 'PUT', updateData);
        
        bootstrap.Modal.getInstance(document.getElementById('editBotScheduleModal')).hide();
        showAlert('–†–æ–∑—Å–∏–ª–∫—É –±–æ—Ç—É —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ', 'success');
        
        // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ
        await loadBotData();
        
    } catch (error) {
        console.error('Error updating bot schedule:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–æ–∑—Å–∏–ª–∫–∏: ' + error.message, 'danger');
    } finally {
        showLoading(false);
    }
}

// –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É —Ä–æ–∑—Å–∏–ª–∫–∏
async function toggleBotSchedule(botScheduleId) {
    const botSchedule = allBotSchedules.find(bs => bs.id === botScheduleId);
    if (!botSchedule) return;
    
    const newStatus = !botSchedule.enabled;
    const action = newStatus ? '—É–≤—ñ–º–∫–Ω—É—Ç–∏' : '–≤–∏–º–∫–Ω—É—Ç–∏';
    
    if (!confirm(`–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ ${action} —Ü—é —Ä–æ–∑—Å–∏–ª–∫—É?`)) {
        return;
    }
    
    try {
        showLoading(true);
        await apiCall(`bot/schedules/${botScheduleId}`, 'PUT', { enabled: newStatus });
        
        showAlert(`–†–æ–∑—Å–∏–ª–∫—É —É—Å–ø—ñ—à–Ω–æ ${newStatus ? '—É–≤—ñ–º–∫–Ω–µ–Ω–æ' : '–≤–∏–º–∫–Ω–µ–Ω–æ'}`, 'success');
        
        // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ
        await loadBotData();
        
    } catch (error) {
        console.error('Error toggling bot schedule:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –∑–º—ñ–Ω–∏ —Å—Ç–∞—Ç—É—Å—É —Ä–æ–∑—Å–∏–ª–∫–∏: ' + error.message, 'danger');
    } finally {
        showLoading(false);
    }
}

// –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ä–æ–∑—Å–∏–ª–∫–∏ –±–æ—Ç—É
async function deleteBotSchedule(botScheduleId) {
    if (!confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü—é —Ä–æ–∑—Å–∏–ª–∫—É –±–æ—Ç—É? –¶—è –¥—ñ—è –Ω–µ–∑–≤–æ—Ä–æ—Ç–Ω–∞.')) {
        return;
    }
    
    try {
        showLoading(true);
        await apiCall(`bot/schedules/${botScheduleId}`, 'DELETE');
        
        showAlert('–†–æ–∑—Å–∏–ª–∫—É –±–æ—Ç—É —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ', 'success');
        
        // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ
        await loadBotData();
        
    } catch (error) {
        console.error('Error deleting bot schedule:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ä–æ–∑—Å–∏–ª–∫–∏: ' + error.message, 'danger');
    } finally {
        showLoading(false);
    }
}

// –ü–µ—Ä–µ–≥–ª—è–¥ —Ä–æ–∑—Å–∏–ª–∫–∏ –±–æ—Ç—É
function viewBotSchedule(botScheduleId) {
    const botSchedule = allBotSchedules.find(bs => bs.id === botScheduleId);
    if (!botSchedule) return;
    
    const weekdays = ['', '–ü–æ–Ω–µ–¥—ñ–ª–æ–∫', '–í—ñ–≤—Ç–æ—Ä–æ–∫', '–°–µ—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä', "–ü'—è—Ç–Ω–∏—Ü—è"];
    
    showAlert(`
        <strong>–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ä–æ–∑—Å–∏–ª–∫—É:</strong><br>
        <strong>–ì—É—Ä—Ç–æ–∫:</strong> ${botSchedule.schedule.club_name}<br>
        <strong>–í—á–∏—Ç–µ–ª—å:</strong> ${botSchedule.schedule.teacher_name}<br>
        <strong>–†–æ–∑–∫–ª–∞–¥:</strong> ${weekdays[botSchedule.schedule.weekday]} –æ ${botSchedule.schedule.start_time}<br>
        <strong>–ß–∞—Å —Ä–æ–∑—Å–∏–ª–∫–∏:</strong> ${botSchedule.notification_time_description}<br>
        <strong>–°—Ç–∞—Ç—É—Å:</strong> ${botSchedule.status_description}<br>
        ${botSchedule.custom_message ? `<strong>–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:</strong> ${botSchedule.custom_message}` : ''}
    `, 'info');
}

// –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è —Ä–µ–∂–∏–º—ñ–≤ —á–∞—Å—É
function toggleTimeMode() {
    const offsetMode = document.getElementById('offsetMode').checked;
    const offsetSection = document.getElementById('offsetSection');
    const exactTimeSection = document.getElementById('exactTimeSection');
    
    if (offsetMode) {
        offsetSection.style.display = 'block';
        exactTimeSection.style.display = 'none';
        // –û—á–∏—â—É—î–º–æ —Ç–æ—á–Ω–∏–π —á–∞—Å
        document.getElementById('customTime').value = '';
    } else {
        offsetSection.style.display = 'none';
        exactTimeSection.style.display = 'block';
        // –û—á–∏—â—É—î–º–æ offset
        document.getElementById('offsetMinutes').value = '0';
        document.getElementById('customOffset').value = '';
    }
}

function toggleEditTimeMode() {
    const offsetMode = document.getElementById('editOffsetMode').checked;
    const offsetSection = document.getElementById('editOffsetSection');
    const exactTimeSection = document.getElementById('editExactTimeSection');
    
    if (offsetMode) {
        offsetSection.style.display = 'block';
        exactTimeSection.style.display = 'none';
        // –û—á–∏—â—É—î–º–æ —Ç–æ—á–Ω–∏–π —á–∞—Å
        document.getElementById('editCustomTime').value = '';
    } else {
        offsetSection.style.display = 'none';
        exactTimeSection.style.display = 'block';
        // –û—á–∏—â—É—î–º–æ offset
        document.getElementById('editOffsetMinutes').value = '0';
        document.getElementById('editCustomOffset').value = '';
    }
}

// === TEACHERS EXCEL IMPORT FUNCTIONS ===

// –°–∫–∞—á—É–≤–∞–Ω–Ω—è —à–∞–±–ª–æ–Ω—É Excel –¥–ª—è –≤—á–∏—Ç–µ–ª—ñ–≤
async function downloadTeachersTemplate() {
    try {
        showLoading(true);
        
        // –¢–ò–ú–ß–ê–°–û–í–ï –†–Ü–®–ï–ù–ù–Ø: –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —à–∞–±–ª–æ–Ω —É—á–Ω—ñ–≤ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó
        const response = await fetch('/api/students/template/download');
        if (!response.ok) {
            throw new Error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —à–∞–±–ª–æ–Ω—É');
        }
        
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.style.display = 'none';
        a.href = url;
        a.download = 'teachers_template.xlsx';
        document.body.appendChild(a);
        a.click();
        window.URL.revokeObjectURL(url);
        
        showAlert('–®–∞–±–ª–æ–Ω Excel –¥–ª—è –≤—á–∏—Ç–µ–ª—ñ–≤ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ!', 'success');
        
    } catch (error) {
        console.error('Error downloading teachers template:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —à–∞–±–ª–æ–Ω—É: ' + error.message, 'danger');
    } finally {
        showLoading(false);
    }
}

// –Ü–º–ø–æ—Ä—Ç –≤—á–∏—Ç–µ–ª—ñ–≤ –∑ Excel —Ñ–∞–π–ª—É
async function importTeachers() {
    const fileInput = document.getElementById('teachersExcelFile');
    const skipDuplicates = document.getElementById('skipTeachersDuplicates').checked;
    
    if (!fileInput.files.length) {
        showAlert('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–±–µ—Ä—ñ—Ç—å Excel —Ñ–∞–π–ª –¥–ª—è —ñ–º–ø–æ—Ä—Ç—É –≤—á–∏—Ç–µ–ª—ñ–≤', 'warning');
        return;
    }
    
    const file = fileInput.files[0];
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª—É
    if (!file.name.endsWith('.xlsx') && !file.name.endsWith('.xls')) {
        showAlert('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–±–µ—Ä—ñ—Ç—å —Ñ–∞–π–ª Excel (.xlsx –∞–±–æ .xls)', 'warning');
        return;
    }
    
    try {
        // –ü–æ–∫–∞–∑—É—î–º–æ –ø—Ä–æ–≥—Ä–µ—Å
        showImportTeachersProgress(true);
        updateImportTeachersProgress(10, '–ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ —ñ–º–ø–æ—Ä—Ç—É –≤—á–∏—Ç–µ–ª—ñ–≤...');
        
        // –°—Ç–≤–æ—Ä—é—î–º–æ FormData
        const formData = new FormData();
        formData.append('file', file);
        formData.append('skip_duplicates', skipDuplicates);
        
        updateImportTeachersProgress(30, '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É...');
        
        // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–ø–∏—Ç
        const response = await fetch('/api/teachers/import', {
            method: 'POST',
            body: formData
        });
        
        updateImportTeachersProgress(70, '–û–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö –≤—á–∏—Ç–µ–ª—ñ–≤...');
        
        if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.detail || '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–º–ø–æ—Ä—Ç—ñ —Ñ–∞–π–ª—É –≤—á–∏—Ç–µ–ª—ñ–≤');
        }
        
        const result = await response.json();
        updateImportTeachersProgress(100, '–ó–∞–≤–µ—Ä—à–µ–Ω–æ!');
        
        // –ü–æ–∫–∞–∑—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
        showImportTeachersResults(result);
        
        // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é –≤—á–∏—Ç–µ–ª—ñ–≤
        if (result.created_count > 0) {
            await loadTeachersData();
        }
        
    } catch (error) {
        console.error('Error importing teachers:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–º–ø–æ—Ä—Ç—ñ –≤—á–∏—Ç–µ–ª—ñ–≤: ' + error.message, 'danger');
        hideImportTeachersProgress();
    }
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ –ø—Ä–æ–≥—Ä–µ—Å —ñ–º–ø–æ—Ä—Ç—É –≤—á–∏—Ç–µ–ª—ñ–≤
function showImportTeachersProgress(show = true) {
    const progressDiv = document.getElementById('importTeachersProgress');
    const resultsDiv = document.getElementById('importTeachersResults');
    
    if (show) {
        progressDiv.style.display = 'block';
        resultsDiv.style.display = 'none';
    } else {
        progressDiv.style.display = 'none';
    }
}

// –°—Ö–æ–≤–∞—Ç–∏ –ø—Ä–æ–≥—Ä–µ—Å —ñ–º–ø–æ—Ä—Ç—É –≤—á–∏—Ç–µ–ª—ñ–≤
function hideImportTeachersProgress() {
    showImportTeachersProgress(false);
}

// –û–Ω–æ–≤–∏—Ç–∏ –ø—Ä–æ–≥—Ä–µ—Å —ñ–º–ø–æ—Ä—Ç—É –≤—á–∏—Ç–µ–ª—ñ–≤
function updateImportTeachersProgress(percent, message) {
    const progressBar = document.querySelector('#importTeachersProgress .progress-bar');
    const statusText = document.getElementById('importTeachersStatus');
    
    if (progressBar) {
        progressBar.style.width = percent + '%';
        progressBar.setAttribute('aria-valuenow', percent);
    }
    
    if (statusText) {
        statusText.textContent = message;
    }
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ —ñ–º–ø–æ—Ä—Ç—É –≤—á–∏—Ç–µ–ª—ñ–≤
function showImportTeachersResults(result) {
    const resultsDiv = document.getElementById('importTeachersResults');
    const summaryDiv = document.getElementById('importTeachersSummary');
    
    hideImportTeachersProgress();
    
    let summaryHTML = `
        <div class="row">
            <div class="col-md-4">
                <div class="text-center">
                    <h6 class="text-success">${result.created_count}</h6>
                    <small>–°—Ç–≤–æ—Ä–µ–Ω–æ</small>
                </div>
            </div>
            <div class="col-md-4">
                <div class="text-center">
                    <h6 class="text-warning">${result.skipped_count}</h6>
                    <small>–ü—Ä–æ–ø—É—â–µ–Ω–æ</small>
                </div>
            </div>
            <div class="col-md-4">
                <div class="text-center">
                    <h6 class="text-danger">${result.errors.length}</h6>
                    <small>–ü–æ–º–∏–ª–æ–∫</small>
                </div>
            </div>
        </div>
    `;
    
    if (result.errors.length > 0) {
        summaryHTML += `
            <div class="mt-3">
                <h6 class="text-danger">–ü–æ–º–∏–ª–∫–∏:</h6>
                <ul class="mb-0">
                    ${result.errors.map(error => `<li>${error}</li>`).join('')}
                </ul>
            </div>
        `;
    }
    
    summaryDiv.innerHTML = summaryHTML;
    resultsDiv.style.display = 'block';
    
    // –ü–æ–∫–∞–∑—É—î–º–æ –∑–∞–≥–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    if (result.created_count > 0) {
        showAlert(`–£—Å–ø—ñ—à–Ω–æ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ ${result.created_count} –≤—á–∏—Ç–µ–ª—ñ–≤!`, 'success');
    }
}

// === EXCEL EXPORT FUNCTIONS ===

// –ï–∫—Å–ø–æ—Ä—Ç —É—á–Ω—ñ–≤ –∑ –ø–æ–≤–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é
async function exportStudentsExcel() {
    try {
        showLoading(true);
        
        const response = await fetch('/api/students/export/excel');
        if (!response.ok) {
            throw new Error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –µ–∫—Å–ø–æ—Ä—Ç—ñ —É—á–Ω—ñ–≤');
        }
        
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.style.display = 'none';
        a.href = url;
        a.download = response.headers.get('Content-Disposition')?.split('filename=')[1] || 'students_export.xlsx';
        document.body.appendChild(a);
        a.click();
        window.URL.revokeObjectURL(url);
        
        showAlert('–î–∞–Ω—ñ —É—á–Ω—ñ–≤ –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ –≤ Excel!', 'success');
        
    } catch (error) {
        console.error('Error exporting students:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –µ–∫—Å–ø–æ—Ä—Ç—ñ —É—á–Ω—ñ–≤: ' + error.message, 'danger');
    } finally {
        showLoading(false);
    }
}

// –ï–∫—Å–ø–æ—Ä—Ç –≤—á–∏—Ç–µ–ª—ñ–≤
async function exportTeachersExcel() {
    try {
        showLoading(true);
        
        const response = await fetch('/api/teachers/export/excel');
        if (!response.ok) {
            throw new Error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –µ–∫—Å–ø–æ—Ä—Ç—ñ –≤—á–∏—Ç–µ–ª—ñ–≤');
        }
        
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.style.display = 'none';
        a.href = url;
        a.download = response.headers.get('Content-Disposition')?.split('filename=')[1] || 'teachers_export.xlsx';
        document.body.appendChild(a);
        a.click();
        window.URL.revokeObjectURL(url);
        
        showAlert('–î–∞–Ω—ñ –≤—á–∏—Ç–µ–ª—ñ–≤ –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ –≤ Excel!', 'success');
        
    } catch (error) {
        console.error('Error exporting teachers:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –µ–∫—Å–ø–æ—Ä—Ç—ñ –≤—á–∏—Ç–µ–ª—ñ–≤: ' + error.message, 'danger');
    } finally {
        showLoading(false);
    }
}

// –ï–∫—Å–ø–æ—Ä—Ç –≥—É—Ä—Ç–∫—ñ–≤
async function exportClubsExcel() {
    try {
        showLoading(true);
        
        const response = await fetch('/api/clubs/export/excel');
        if (!response.ok) {
            throw new Error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –µ–∫—Å–ø–æ—Ä—Ç—ñ –≥—É—Ä—Ç–∫—ñ–≤');
        }
        
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.style.display = 'none';
        a.href = url;
        a.download = response.headers.get('Content-Disposition')?.split('filename=')[1] || 'clubs_export.xlsx';
        document.body.appendChild(a);
        a.click();
        window.URL.revokeObjectURL(url);
        
        showAlert('–î–∞–Ω—ñ –≥—É—Ä—Ç–∫—ñ–≤ –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ –≤ Excel!', 'success');
        
    } catch (error) {
        console.error('Error exporting clubs:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –µ–∫—Å–ø–æ—Ä—Ç—ñ –≥—É—Ä—Ç–∫—ñ–≤: ' + error.message, 'danger');
    } finally {
        showLoading(false);
    }
}

// –ï–∫—Å–ø–æ—Ä—Ç —Ä–æ–∑–∫–ª–∞–¥—ñ–≤
async function exportSchedulesExcel() {
    try {
        showLoading(true);
        
        const response = await fetch('/api/schedules/export/excel');
        if (!response.ok) {
            throw new Error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –µ–∫—Å–ø–æ—Ä—Ç—ñ —Ä–æ–∑–∫–ª–∞–¥—ñ–≤');
        }
        
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.style.display = 'none';
        a.href = url;
        a.download = response.headers.get('Content-Disposition')?.split('filename=')[1] || 'schedules_export.xlsx';
        document.body.appendChild(a);
        a.click();
        window.URL.revokeObjectURL(url);
        
        showAlert('–†–æ–∑–∫–ª–∞–¥–∏ –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ –≤ Excel!', 'success');
        
    } catch (error) {
        console.error('Error exporting schedules:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –µ–∫—Å–ø–æ—Ä—Ç—ñ —Ä–æ–∑–∫–ª–∞–¥—ñ–≤: ' + error.message, 'danger');
    } finally {
        showLoading(false);
    }
}

// –ï–∫—Å–ø–æ—Ä—Ç –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—Ö —É—Ä–æ–∫—ñ–≤
async function exportConductedLessonsExcel() {
    try {
        showLoading(true);
        
        const response = await fetch('/api/conducted-lessons/export/excel');
        if (!response.ok) {
            throw new Error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –µ–∫—Å–ø–æ—Ä—Ç—ñ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—Ö —É—Ä–æ–∫—ñ–≤');
        }
        
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.style.display = 'none';
        a.href = url;
        a.download = response.headers.get('Content-Disposition')?.split('filename=')[1] || 'conducted_lessons_export.xlsx';
        document.body.appendChild(a);
        a.click();
        window.URL.revokeObjectURL(url);
        
        showAlert('–ü—Ä–æ–≤–µ–¥–µ–Ω—ñ —É—Ä–æ–∫–∏ –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ –≤ Excel!', 'success');
        
    } catch (error) {
        console.error('Error exporting conducted lessons:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –µ–∫—Å–ø–æ—Ä—Ç—ñ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—Ö —É—Ä–æ–∫—ñ–≤: ' + error.message, 'danger');
    } finally {
        showLoading(false);
    }
}

// –ï–∫—Å–ø–æ—Ä—Ç –∑–∞—Ä–ø–ª–∞—Ç
async function exportPayrollExcel() {
    try {
        showLoading(true);
        
        const response = await fetch('/api/payroll/export/excel');
        if (!response.ok) {
            throw new Error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –µ–∫—Å–ø–æ—Ä—Ç—ñ –∑–∞—Ä–ø–ª–∞—Ç');
        }
        
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.style.display = 'none';
        a.href = url;
        a.download = response.headers.get('Content-Disposition')?.split('filename=')[1] || 'payroll_export.xlsx';
        document.body.appendChild(a);
        a.click();
        window.URL.revokeObjectURL(url);
        
        showAlert('–ó–∞—Ä–ø–ª–∞—Ç–∏ –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ –≤ Excel!', 'success');
        
    } catch (error) {
        console.error('Error exporting payroll:', error);
        showAlert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –µ–∫—Å–ø–æ—Ä—Ç—ñ –∑–∞—Ä–ø–ª–∞—Ç: ' + error.message, 'danger');
    } finally {
        showLoading(false);
    }
}

// –î–æ–ø–æ–º—ñ–∂–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è offset
function updateOffsetSelect() {
    const customOffset = document.getElementById('customOffset').value;
    if (customOffset) {
        document.getElementById('offsetMinutes').value = customOffset;
    }
}

function updateEditOffsetSelect() {
    const customOffset = document.getElementById('editCustomOffset').value;
    if (customOffset) {
        document.getElementById('editOffsetMinutes').value = customOffset;
    }
}